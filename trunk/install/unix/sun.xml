<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision: 1.3 $ -->
<!-- $Author: dallas $ -->
<!-- EN-Revision:1.2 Maintainer: class007 Status: ready -->
<!-- CREDITS: dallas -->
   <sect1 id="install.unix.sun">
    <title>Sun Solaris 上的 Sun、iPlanet 和 Netscape 服务器</title>
    <para>
     本节包括在 Sun Solaris 平台的 Sun Java System Web Server、Sun ONE Web
     Server、iPlanet 和 Netscape 下安装 PHP 的说明和提示。
    </para>
    <para>
     从 PHP 4.3.3 起，可以使用基于 <link linkend="ref.nsapi">NSAPI</link>
     模块 PHP 脚本来<link linkend="install.unix.sun.specialpages">生成自定义目录列表和错误页面</link>。更多与
     Apache 兼容的功能也可以使用。要了解如何在当前的 web
     服务器中支持此功能，请阅读<link linkend="install.unix.sun.notes">关于子请求（subrequests）的注释</link>。
    </para>
    <para>
     可以在下面的链接中了解更多关于在 Netscape Enterprise Server（NES）中设置 PHP
     的信息：<ulink url="&url.netscape.nsapi;">&url.netscape.nsapi;</ulink>。
    </para>

    <para>
     要在 Sun JSWS/Sun ONE WS/iPlanet/Netscape Web 服务器中编译
     PHP，请为 <link linkend="configure.with-nsapi">--with-nsapi=[DIR]</link>
     输入合适的安装目录。默认的目录通常是
     <filename class="directory">/opt/netscape/suitespot/</filename>。还可以阅读
     <filename>/php-xxx-version/sapi/nsapi/nsapi-readme.txt</filename>。
    </para>
    <para>
     <orderedlist>
      <listitem>
       <para>
        从 <ulink url="&url.sun.freeware;">
        &url.sun.freeware;</ulink> 或其它下载站点安装下面的软件包：
        <simplelist>
         <member><filename>autoconf-2.13</filename></member>
         <member><filename>automake-1.4</filename></member>
         <member><filename>bison-1_25-sol26-sparc-local</filename></member>
         <member><filename>flex-2_5_4a-sol26-sparc-local</filename></member>
         <member><filename>gcc-2_95_2-sol26-sparc-local</filename></member>
         <member><filename>gzip-1.2.4-sol26-sparc-local</filename></member>
         <member><filename>m4-1_4-sol26-sparc-local</filename></member>
         <member><filename>make-3_76_1-sol26-sparc-local</filename></member>
         <member>
          <filename>mysql-3.23.24-beta</filename> (如果想要 mysql 支持)
         </member>
         <member><filename>perl-5_005_03-sol26-sparc-local</filename></member>
         <member><filename>tar-1.13</filename> (GNU tar)</member>
        </simplelist>
       </para>
      </listitem>
      <listitem>
       <simpara>
        请确认 PATH 变量包含适当的目录
        <literal>PATH=.:/usr/local/bin:/usr/sbin:/usr/bin:/usr/ccs/bin</literal>，并使用
        <userinput>export PATH</userinput> 命令将其导出为环境变量。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <userinput>gunzip php-x.x.x.tar.gz</userinput>（如果使用 .gz 版本，否则跳到 4）
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <userinput>tar xvf php-x.x.x.tar</userinput>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        进入 PHP 解压缩后的目录：<userinput>cd ../php-x.x.x</userinput>
       </simpara>
      </listitem>
      <listitem>
       <para>
        在下面的步骤中，请确认 Netscape 服务器安装在
        <filename class="directory">/opt/netscape/suitespot/</filename>
        目录中。否则，将下面命令中的该路径修改为正确的路径并运行：
        <programlisting role="shell">
<![CDATA[
./configure --with-mysql=/usr/local/mysql \
--with-nsapi=/opt/netscape/suitespot/ \
--enable-libgcc
]]>
        </programlisting>
       </para>
      </listitem>
      <listitem>
       <simpara>
        运行 <command>make</command>，然后运行 <command>make install</command>。
       </simpara>
      </listitem>
     </orderedlist>
    </para>
    <para>
     在执行了基础的安装并阅读相应的 Readme 文件后，还需要执行一些额外的配置步骤。
    </para>
    <formalpara>
     <title>Sun/iPlanet/Netscape 的配置说明</title>
     <para>
      首先需要为 <varname>LD_LIBRARY_PATH</varname>
      环境变量添加一些路径，以便服务器找到所需的共享库。可以使用 web
      服务器的启动脚本很好的完成这一工作。启动脚本通常位于：<filename
      class="directory">/path/to/server/https-servername/start</filename>。或许需要编辑其配置文件，它位于：<filename
      class="directory">/path/to/server/https-servername/config/</filename>。
      <orderedlist>
       <listitem>
        <para>
         添加下面一行到 <filename>mime.types</filename>（可以在管理服务器中添加）：
         <screen>
<![CDATA[
type=magnus-internal/x-httpd-php exts=php
]]>
         </screen>
        </para>
       </listitem>
       <listitem>
        <para>
         编辑 <filename>magnus.conf</filename>( 若服务器 &gt;= 6）或
         <filename>obj.conf</filename>（若服务器 &lt; 6）并添加下述内容。shlib
         的值根据系统的配置会有所不同。它可能类似于
         <filename>/opt/netscape/suitespot/bin/libphp4.so</filename>。应该在
         <literal>mime types init</literal> 后添加如下两行内容：
         <programlisting>
<![CDATA[
Init fn="load-modules" funcs="php4_init,php4_execute,php4_auth_trans" shlib="/opt/netscape/suitespot/bin/libphp4.so"
Init fn="php4_init" LateInit="yes" errorString="Failed to initialize PHP!" [php_ini="/path/to/php.ini"]
]]>
         </programlisting>
         （PHP &gt;= 4.3.3）<literal>php_ini</literal> 参数是可选的。但是若使用它，便可以将
         &php.ini; 放到 Web 服务器的配置目录中去。
        </para>
       </listitem>
       <listitem>
        <para>
         在 <filename>obj.conf</filename> 中配置默认对象（对于虚拟服务器的类
         [版本 6.0+] 是在 <filename>vserver.obj.conf</filename> 中）：
         <programlisting>
<![CDATA[
<Object name="default">
.
.
.
.#注意 下面一行添加在所有“ObjectType”之后，所有“AddLog”之前
Service fn="php4_execute" type="magnus-internal/x-httpd-php" [inikey=value inikey=value ...]
.
.
</Object>
]]>
         </programlisting>
         （PHP &gt;= 4.3.3）作为附加的参数，可以在
         &php.ini; 中添加一些特别的配置选项。例如可以设置
         <literal>docroot=&quot;/path/to/docroot&quot;</literal> 指向
         <literal>php4_execute</literal> 被调用的上下文（context）。对于布尔 ini
         键值，请使用 0/1 作为其值，而不是
         <literal>&quot;On&quot;、&quot;Off&quot;</literal> 等（它们是无效的），例如，使用
         <literal>zlib.output_compression=1</literal>，而不应使用
         <literal>zlib.output_compression=&quot;On&quot;</literal>。
        </para>
       </listitem>
       <listitem>
        <para>
         本步骤仅在需要配置一个由 PHP 脚本组成的目录时由必要执行（类似于一个
         <filename class="directory">cgi-bin</filename> 目录）：
         <programlisting>
<![CDATA[
<Object name="x-httpd-php">
ObjectType fn="force-type" type="magnus-internal/x-httpd-php"
Service fn=php4_execute [inikey=value inikey=value ...]
</Object>
]]>
         </programlisting>
         之后，可以在管理服务器中配置一个目录，分配给它 <literal>x-httpd-php</literal>
         风格（style）。这样在该目录中的所有文件都会被当作 PHP 来执行。这样就能很方便的将
         PHP 文件更名为 <filename>.html</filename> 以隐藏 PHP。
        </para>
       </listitem>
       <listitem>
        <para>
         认证的设置：PHP 认证不能与其它任何类型的认证一起工作。所有认证被传递到 PHP
         脚本。要为整个服务器配置 PHP 认证，在默认对象中添加下面一行：
         <programlisting>
<![CDATA[
<Object name="default">
AuthTrans fn=php4_auth_trans
.
.
.
</Object>
]]>
         </programlisting>
        </para>
       </listitem>
       <listitem>
        <para>
         要在单一目录使用 PHP 认证，添加如下内容：
         <programlisting>
<![CDATA[
<Object ppath="d:\path\to\authenticated\dir\*">
AuthTrans fn=php4_auth_trans
</Object>
]]>
         </programlisting>
        </para>
       </listitem>
      </orderedlist>
     </para>
    </formalpara>
    <note>
     <para>
      PHP 使用的堆栈大小取决于 web 服务器的配置。如果运行很大的 PHP
      脚本时程序崩溃，推荐在 Admin Server（在“MAGNUS EDITOR”一节）中增大此项。
     </para>
    </note>

   <sect2 id="install.unix.sun.phpini">
    <title>CGI 环境和对 php.ini 推荐的修改</title>
    <para>
     当编写 PHP 脚本时，应特别注意 Sun JSWS/Sun ONE
     WS/iPlanet/Netscape 是一个多线程 Web 服务器。因此，所有请求都运行在相同的进程空间（Web
     服务器自己的空间），该空间仅有一套环境变量。如果想获得 CGI
     变量，例如 <literal>PATH_INFO</literal>、<literal>HTTP_HOST</literal> 等，使用原有的
     PHP 3.x 的方式（<function>getenv</function>），或使用类似的方式（注册全局变量到环境变量，
     <literal>$_ENV</literal>），都是不可行的。只能获得运行中的 Web
     服务器的环境变量，而不能获得任何有效的 CGI 变量！
    </para>
    <note>
     <para>
      为什么在环境中存在（无效的）CGI 变量？
     </para>
     <para>
      答：这是因为从管理服务器中启动 Web 服务器进程时，运行了 Web
      服务器的启动脚本，它事实上是一个 CGI 脚本（管理服务器中的一个 CGI
      脚本！）。这便是为什么启动的 Web 服务器包含一些 CGI 变量。可以尝试不从管理服务器启动
      Web 服务器，用 root 用户登录使用命令行手动启动它，会发现这些 CGI 形式的变量不复存在。
     </para>
    </note>
    <para>
     要在 PHP 4.x 中正确获得 CGI 变量，仅需修改脚本使用超级全局变量
     <literal>$_SERVER</literal>。如果老脚本中使用了
     <literal>$HTTP_HOST</literal> 等变量，应该在 &php.ini; 中打开
     <literal>register_globals</literal>，并且要修改变量顺序（注意：从中删除 <literal>&quot;E&quot;</literal>，因为不需要这里的环境变量）：
     <programlisting>
<![CDATA[
variables_order = "GPCS"
register_globals = On
]]>
     </programlisting>
    </para>
   </sect2>

   <sect2 id="install.unix.sun.specialpages">
    <title>错误页面及自造目录列表的特别使用 (PHP &gt;= 4.3.3)</title>
    <para>
     可以使用 PHP 为 <literal>"404 Not Found"</literal> 或类似的错误代码生成错误页面。将下面几行添加到
     <filename>obj.conf</filename> 中以覆盖默认的错误页面：
     <programlisting>
<![CDATA[
Error fn="php4_execute" code=XXX script="/path/to/script.php" [inikey=value inikey=value...]
]]>
     </programlisting>
     <literal>XXX</literal> 是 HTTP 错误代码。请删除任何可能干扰 <literal>Error</literal>
     设置的指令。如果想为所有可能存在的错误提供一个页面，则将 <literal>code</literal> 参数删除。脚本可以通过
     <literal>$_SERVER['ERROR_TYPE']</literal> 获得 HTTP 状态代码。
    </para>
    <para>
     另一种可能是生成自造目录列表。只要创建一个 PHP 脚本，来显示目录列表
     并在 <filename>obj.conf</filename> 中为 <literal>type=&quot;magnus-internal/directory&quot;</literal>
     将相应的默认 <literal>Service</literal> 行替换为：
     <programlisting>
<![CDATA[
Service fn="php4_execute" type="magnus-internal/directory" script="/path/to/script.php" [inikey=value inikey=value...]
]]>
     </programlisting>
     错误和目录列表页面中，原始的 URI 和翻译的 URI 均被分别储存在
     <literal>$_SERVER['PATH_INFO']</literal> 和
     <literal>$_SERVER['PATH_TRANSLATED']</literal> 变量中。
    </para>
   </sect2>

   <sect2 id="install.unix.sun.notes">
    <title>关于 <function>nsapi_virtual</function> 和子请求的注意事项（PHP &gt;= 4.3.3）</title>
    <para>
     NSAPI 模块现在支持 <function>nsapi_virtual</function>
     函数（别名：<function>virtual</function>），用来在 Web
     服务器上创建子请求（subrequests）和在
     Web 页面插入请求的结果。此函数使用了一些 NSAPI 中还没有文档说明的函数。在 Unix
     下，该模块自动查找需要的函数，若它们存在则使用它们。若不存在，函数
     <function>nsapi_virtual</function> 被禁用。
    </para>
    <note>
     <para>
      但是必须警告：对 <function>nsapi_virtual</function> 的支持是试验性质的！
     </para>
    </note>
   </sect2>
  </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
