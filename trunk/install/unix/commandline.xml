<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision: 1.5 $ -->
<!-- $Author: bjori $ -->
<!-- EN-Revision:1.3 Maintainer: class007 Status: ready -->
<!-- CREDITS: dallas -->
  <sect1 xml:id="install.unix.commandline" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
   <title>CGI 和命令行设置</title>
   <para>
    默认为将 PHP 编译为 CGI 程序。这将建立一个命令行解释器，可用于
    CGI 处理或非 web 相关的 PHP 脚本。如果用户运行着一个 PHP
    模块支持的 web 服务器，那通常为性能考虑应该使用模块方式。不过，CGI
    版可以使 Apache 用户用不同的用户 ID 运行不同的 PHP 页面。
   </para>
   &warn.install.cgi;
   <para>
    自 PHP 4.3.0 起，PHP 有了一些重要的新增功能。又有了一个新的 SAPI
    称为 CLI，和 CGI 程序同名。根据配置选项它安装在
    <literal>{PREFIX}/bin/php</literal>，并在手册中 <link
    linkend="features.commandline">PHP
    的命令行模式</link>一章中有详细说明。更多细节请阅读该章节。
   </para>

   <sect2 xml:id="install.unix.commandline.testing">
    <title>测试</title>
    <simpara>
     如果将 PHP 编译为 CGI 程序，可以通过键入 <command>make test</command>
     来测试你的编译。测试一下编译永远是个好主意。这样就可以在你的平台上及早捕捉到
     PHP 的问题而不是以后再费力的解决。
    </simpara>
   </sect2>

   <sect2 xml:id="install.unix.commandline.benchmarking">
    <title>基准测试</title>
    <simpara>
     如果将 PHP 3 编译为 CGI 程序，可以通过键入 <command>make bench</command>
     来进行一下性能的基准测试。注意如果默认打开了&safemode;，则超过
     30 秒的允许范围测试可能不能完成。这是因为
     <function>set_time_limit</function> 不能用于&safemode;。用 <link
     linkend="ini.max-execution-time">max_execution_time</link>
     配置选项来为你自己的脚本控制此时间限制。<command>make bench</command>
     会忽略<link
     linkend="configuration.file">配置文件</link>。
    </simpara>
    <note>
     <simpara>
      <command>make bench</command> 仅能用于 PHP 3。
     </simpara>
    </note>
   </sect2>

   <sect2 xml:id="install.unix.commandline.using-variables">
    <title>使用变量</title>
    <simpara>
     某些<link linkend="reserved.variables.server">服务器提供的环境变量</link>没有定义在当前的
     <link xlink:href="&url.cgispec;">CGI/1.1 标准</link>中。只有下列变量定义在其中：<varname>AUTH_TYPE</varname>，<varname>CONTENT_LENGTH</varname>，<varname>CONTENT_TYPE</varname>，<varname>GATEWAY_INTERFACE</varname>，<varname>PATH_INFO</varname>，<varname>PATH_TRANSLATED</varname>，<varname>QUERY_STRING</varname>，<varname>REMOTE_ADDR</varname>，<varname>REMOTE_HOST</varname>，<varname>REMOTE_IDENT</varname>，<varname>REMOTE_USER</varname>，<varname>REQUEST_METHOD</varname>，<varname>SCRIPT_NAME</varname>，<varname>SERVER_NAME</varname>，<varname>SERVER_PORT</varname>，<varname>SERVER_PROTOCOL</varname>
     和 <varname>SERVER_SOFTWARE</varname>。其它的变量均作为“供应商扩展（vendor extensions）”来对待。
    </simpara>
   </sect2>

  </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
