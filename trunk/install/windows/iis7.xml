<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 317663 Maintainer: dallas Status: partial -->

<sect1 xml:id="install.windows.iis7" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Microsoft IIS 7.0 及更高版本</title>
 <para>
  本章包含有在 Windows Vista SP1，Windows 7，Windows Server 2008 以及
  Windows Server 2008 R2下的 IIS 7.0 以及更高版本中手工安装 PHP
  的指南。有关在 Windows XP 和 Windows Server 2003 
  下的 IIS 5.1 和 IIS 6.0 中安装 PHP 的指南见
  <link linkend="install.windows.iis7">Microsoft IIS 5.1 和 IIS 6.0</link> 一章。
 </para>
 <sect2 xml:id="install.windows.iis7.fastcgi.enable">
  <title>在 IIS 中激活 FastCGI 支持</title>
  <para>
   默认安装的 IIS 中 FastCGI 模块被关闭。要激活其的步骤在不同版本的 Windows 下不同。
  </para>
  <para>
   要在 Windows Vista SP1 和 Windows 7 中激活 FastCGI 支持：
   <procedure>
    <step>
     <simpara>
      在 Windows 开始菜单中选择 &quot;运行...:&quot;（或在搜索框内），输入 &quot;optionalfeatures.exe&quot;
	  并敲回车键；
     </simpara>
    </step>
    <step>
     <simpara>
      在 &quot;Windows 功能&quot; 对话框中展开 &quot;Internet
	  信息服务&quot;，&quot;万维网服务&quot;，&quot;应用程序开发功能&quot;并选中
	  &quot;CGI&quot; 的选择框；
     </simpara>
    </step>
    <step>
     <simpara>
      点击确定按钮并等待安装完成。
     </simpara>
    </step>
   </procedure>
   <mediaobject>
    <alt>在 Windows Vista SP1 和 Windows 7 中激活 FastCGI 支持</alt>
    <imageobject>
     <imagedata fileref="en/install/windows/figures/iis7vistacgi.png" />
    </imageobject>
   </mediaobject>
  </para>
  <para>
   要在 Windows Server 2008 和 Windows Server 2008 R2 中激活 FastCGI 支持：
   <procedure>
    <step>
     <simpara>
      在 Windows 开始菜单中选择 &quot;Run:&quot;，输入 &quot;CompMgmtLauncher&quot;
	  并点击 &quot;Ok&quot;；
     </simpara>
    </step>
    <step>
     <simpara>
      如果在 &quot;Roles&quot; 节点下没有 &quot;Web Server (IIS)&quot; role，则点击
	  &quot;Add Roles&quot; 添加之；
     </simpara>
    </step>
    <step>
     <simpara>
      如果存在 &quot;Web Server (IIS)&quot; role，则点击 &quot;Add Role Services&quot; 并激活
      &quot;Application Development&quot; 组之下的 &quot;CGI&quot; 选择框；
     </simpara>
    </step>
    <step>
     <simpara>
      点击 &quot;Next&quot; 及 &quot;Install&quot;，等待安装完成。
     </simpara>
    </step>
   </procedure>
   <mediaobject>
    <alt>在 Windows Server 2008 和 Windows Server 2008 R2 中激活 FastCGI 支持</alt>
    <imageobject>
     <imagedata fileref="en/install/windows/figures/iis7w2k8cgi.png" />
    </imageobject>
   </mediaobject>
  </para>
 </sect2>
 <sect2 xml:id="install.windows.iis7.fastcgi.conf">
  <title>配置 IIS 以处理 PHP 请求</title>
  <para>
   根据<link linkend="install.windows.manual">手工安装步骤</link>的说明下载和安装 PHP。
    <note>
     <para>
      在使用 IIS 时推荐使用非线程安全的 PHP。可以在
	  <link xlink:href="&url.php.win.downloads;">PHP for Windows: 
      Binaries and Sources Releases</link> 下载。
     </para>
    </note>
  </para>
  <para>
   按以下示例在 <filename>php.ini</filename> 文件中配置
   针对 CGI- 和 FastCGI- 的指令：
   <example>
    <title><filename>php.ini</filename> 中的 CGI 和 FastCGI 设定</title>
    <programlisting role="ini">
<![CDATA[
fastcgi.impersonate = 1
fastcgi.logging = 0
cgi.fix_pathinfo=1
cgi.force_redirect = 0
]]>
    </programlisting>
   </example>
  </para>
  <para>
   通过 IIS 管理界面或者命令行工具配置对应于 PHP 的 IIS 程序映射。
  </para>
  <sect3 xml:id="install.windows.iis7.fastcgi.conf.ui">
   <title>使用 IIS 管理界面来创建 PHP 的程序映射</title>
    <para>
     按照以下步骤在 IIS 管理界面中创建 PHP 的程序映射：
     <procedure>
      <step>
       <simpara>
	    在 Windows 开始菜单中选择 &quot;运行...:&quot;，输入 &quot;inetmgr&quot;
		并点击 &quot;确定&quot;。
	  </simpara>
      </step>
      <step>
       <simpara>
	    在 IIS 管理器中左边面板 &quot;连接&quot; 下面的树状图中选择该服务器的节点；
	   </simpara>
      </step>
      <step>
       <para>
        在中间面板下方的 &quot;功能视图&quot; 页面打开 &quot;处理程序映射&quot; 功能；
        <mediaobject>
         <alt>创建 PHP 的程序映射：处理程序映射的位置</alt>
         <imageobject>
          <imagedata fileref="en/install/windows/figures/iis7handlericon.png" />
         </imageobject>
        </mediaobject>
       </para>
      </step>
      <step>
       <simpara>在右边 &quot;操作&quot; 面板中点击 &quot;添加模块映射...&quot;；</simpara>
      </step>
      <step>
       <para>
        在 &quot;添加模块映射&quot; 对话框中输入以下内容：
        <itemizedlist spacing="compact">
         <listitem>
          <simpara>请求路径(P)：*.php</simpara>
         </listitem>
         <listitem>
          <simpara>模块(M)：FastCgiModule</simpara>
         </listitem>
         <listitem>
          <simpara>可执行文件(可选)(E)：C:\[Path to PHP installation]\php-cgi.exe</simpara>
         </listitem>
         <listitem>
          <simpara>名称(N)：PHP_via_FastCGI</simpara>
         </listitem>
        </itemizedlist>
       </para>
      </step>
      <step>
       <simpara>
        点击 &quot;请求限制(R)...&quot;
		按钮并选中“仅当请求映射至以下内容时才调用处理程序(I)：”然后选择“文件或文件夹(O)”；
        </simpara>
      </step>
      <step>
       <simpara>
	    在所有对话框中点击确定以保存配置。
	   </simpara>
      </step>
     </procedure>
     <mediaobject>
      <alt>创建 PHP 的程序映射：添加程序映射</alt>
      <imageobject>
       <imagedata fileref="en/install/windows/figures/iis7handlermap.png" />
      </imageobject>
     </mediaobject>
    </para>
  </sect3>
  <sect3 xml:id="install.windows.iis7.fastcgi.conf.cmd">
   <title>使用命令行工具创建 PHP 的程序映射</title>
   <para>
    Use the command shown below to create an IIS FastCGI process pool which will use <filename>php-cgi.exe</filename> 
    executable for processing PHP requests. Replace the value of the <varname>fullPath</varname> parameter with the 
    absolute file path to the <filename>php-cgi.exe</filename> file.
    <example>
     <title>Creating IIS FastCGI process pool</title>
     <programlisting>
<![CDATA[
%windir%\system32\inetsrv\appcmd set config /section:system.webServer/fastCGI ^
/+[fullPath='c:\PHP\php-cgi.exe']
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Configure IIS to handle PHP specific requests by running the command shown below. Replace the value of the 
    <varname>scriptProcessor</varname> parameter with the absolute file path to the <filename>php-cgi.exe</filename> file.
    <example>
     <title>Creating handler mapping for PHP requests</title>
     <programlisting>
<![CDATA[
%windir%\system32\inetsrv\appcmd set config /section:system.webServer/handlers ^
/+[name='PHP_via_FastCGI', path='*.php',verb='*',modules='FastCgiModule',^
scriptProcessor='c:\PHP\php-cgi.exe',resourceType='Either']
]]>
     </programlisting>
    </example>
   </para>
   <para>
    This command creates an IIS handler mapping for *.php file extension, which will result in all URLs that 
    end with .php being handled by FastCGI module.
    <note>
     <para>
      At this point the required installation and configuration steps are completed. The remaining 
      instructions below are optional but highly recommended for achieving optimal functionality 
      and performance of PHP on IIS.
     </para>
    </note>
   </para>
  </sect3>
 </sect2>
 <sect2 xml:id="install.windows.iis7.impersonation">
  <title>Impersonation and file system access</title>
  <para>
   It is recommended to enable FastCGI impersonation in PHP when using IIS. This 
   is controlled by the <varname>fastcgi.impersonate</varname> directive in <filename>php.ini</filename> 
   file. When impersonation is enabled, PHP will perform all the file system operations on behalf of 
   the user account that has been determined by IIS authentication. This ensures that even if the 
   same PHP process is shared across different IIS web sites, the PHP scripts in those web sites 
   will not be able to access each other&#39;s files as long as different user accounts are used 
   for IIS authentication on each web site.
  </para>
  <para>
   For example IIS 7, in its default configuration, has anonymous authentication enabled with 
   built-in user account IUSR used as a default identity. This means that in order for IIS to 
   execute PHP scripts, it is necessary to grant IUSR account read permission on those scripts. 
   If PHP applications need to perform write operations on certain files or write files into some 
   folders then IUSR account should have write permission to those.
  </para>
  <para>
   To determine what user account is used as an anonymous identity in IIS 7 use the following command. 
   Replace the &quot;Default Web Site&quot; with the name of IIS web site that you use. In the output 
   XML configuration element look for the <varname>userName</varname> attribute.
   <example>
    <title>Determining the account used as IIS anonymous identity</title>
    <programlisting>
<![CDATA[
%windir%\system32\inetsrv\appcmd.exe list config "Default Web Site" ^
/section:anonymousAuthentication

<system.webServer>
  <security>
    <authentication>
      <anonymousAuthentication enabled="true" userName="IUSR" />
    </authentication>
   </security>
</system.webServer>
]]>
    </programlisting>
   </example>
   <note>
    <para>
     If <varname>userName</varname> attribute is not present in the <varname>anonymousAuthentication</varname> element, 
     or is set to an empty string, then it means that the application pool identity is used as an 
     anonymous identity for that web site.
    </para>
   </note>
  </para>
  <para>
   To modify the permissions settings on files and folders, use the Windows Explorer 
   user interface or <varname>icacls</varname> command.
   <example>
    <title>Configuring file access permissions</title>
    <programlisting>
<![CDATA[
icacls C:\inetpub\wwwroot\upload /grant IUSR:(OI)(CI)(M)
]]>
    </programlisting>
   </example>
  </para>
 </sect2>
 <sect2 xml:id="install.windows.iis7.defaultdoc">
  <title>Set <filename>index.php</filename> as a default document in IIS</title>
  <para>
   The IIS default documents are used for HTTP requests that do not specify a 
   document name. With PHP applications, <filename>index.php</filename> usually 
   acts as a default document. To add <filename>index.php</filename> to the list 
   of IIS default documents, use this command:
   <example>
    <title>Set <filename>index.php</filename> as a default document in IIS</title>
    <programlisting>
<![CDATA[
%windir%\system32\inetsrv\appcmd.exe set config ^
-section:system.webServer/defaultDocument /+"files.[value='index.php']" ^
/commit:apphost
]]>
    </programlisting>
   </example>   
  </para>
 </sect2>
 <sect2 xml:id="install.windows.iis7.recycling">
  <title>FastCGI and PHP Recycling configuration</title>
  <para>
   Configure IIS FastCGI settings for recycling of PHP processes by using the commands shown below. 
   The FastCGI setting <varname>instanceMaxRequests</varname> controls how many requests will be 
   processed by a single <filename>php-cgi.exe</filename> process before IIS shuts it down. 
   The PHP environment variable <varname>PHP_FCGI_MAX_REQUESTS</varname> controls how many 
   requests a single <filename>php-cgi.exe</filename> process will handle before it recycles 
   itself. Make sure that the value specified for FastCGI <varname>InstanceMaxRequests</varname> 
   setting is less than or equal to the value specified for <varname>PHP_FCGI_MAX_REQUESTS</varname>.
   <example>
    <title>Configuring FastCGI and PHP recycling</title>
    <programlisting>
<![CDATA[
%windir%\system32\inetsrv\appcmd.exe set config -section:system.webServer/fastCgi ^
/[fullPath='c:\php\php-cgi.exe'].instanceMaxRequests:10000

%windir%\system32\inetsrv\appcmd.exe set config -section:system.webServer/fastCgi ^
/+"[fullPath='C:\{php_folder}\php-cgi.exe'].environmentVariables.^
[name='PHP_FCGI_MAX_REQUESTS',value='10000']"
]]>
    </programlisting>
   </example>
  </para>
 </sect2>
 <sect2 xml:id="install.windows.iis7.timeouts">
  <title>FastCGI timeout settings</title>
  <para>
   Increase the timeout settings for FastCGI if it is expected to have long running PHP scripts.
   The two settings that control timeouts are <varname>activityTimeout</varname> and 
   <varname>requestTimeout</varname>. Use the commands below to change the timeout settings. 
   Make sure to replace the value in the <varname>fullPath</varname> parameter to 
   contain the absolute path to the <filename>php-cgi.exe</filename> file.
   <example>
    <title>Configuring FastCGI timeout settings</title>
    <programlisting>
<![CDATA[
%windir%\system32\inetsrv\appcmd.exe set config -section:system.webServer/fastCgi ^
/[fullPath='C:\php\php-cgi.exe',arguments=''].activityTimeout:"90"  /commit:apphost

%windir%\system32\inetsrv\appcmd.exe set config -section:system.webServer/fastCgi ^
/[fullPath='C:\php\php-cgi.exe',arguments=''].requestTimeout:"90"  /commit:apphost
]]>
    </programlisting>
   </example>   
  </para>
 </sect2>
 <sect2 xml:id="install.windows.iis7.phpinilocation">
  <title>Changing the Location of <filename>php.ini</filename> file</title>
  <para>
   PHP searches for <filename>php.ini</filename> file in 
   <link linkend="configuration.file">several locations</link> and it is 
   possible to change the default locations of <filename>php.ini</filename> 
   file by using <varname>PHPRC</varname> environment variable. To instruct PHP 
   to load the configuration file from a custom location run the command shown below. 
   The absolute path to the directory with <filename>php.ini</filename> file should be 
   specified as a value of <varname>PHPRC</varname> environment variable.
   <example>
    <title>Changing the location of <filename>php.ini</filename> file</title>
    <programlisting>
<![CDATA[
appcmd.exe set config  -section:system.webServer/fastCgi ^
/+"[fullPath='C:\php\php.exe',arguments=''].environmentVariables.^
[name='PHPRC',value='C:\Some\Directory\']" /commit:apphost
]]>         
    </programlisting>
   </example>   
  </para>
 </sect2>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
