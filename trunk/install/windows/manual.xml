<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision: 1.1 $ -->
<!-- $Author: class007 $ -->
<!-- EN-Revision:1.18 Maintainer: class007 Status: ready -->
<!-- CREDITS: class007 -->
   <sect1 id="install.windows.manual">
    <title>手工安装步骤</title>
    
    <para>
     本安装指南指导您手动在一个 Microsoft Windows 的 Web 服务器下安装和配置
     PHP。安装前您需要从 <ulink url="&url.php.downloads;">&url.php.downloads;</ulink>
     下载 PHP 的 zip 二进制发布包。
    </para>
    
    <para>
     虽然目前有很多多合一的安装包，我们也发布了一个 Microsoft Windows 的 PHP
     安装程序，但是我们仍然建议您花些时间自己手动安装
     PHP。因为这样您可以更加了解这套系统，并能够在需要的时候更方便的安装
     PHP 扩展。
    </para>
    
    <note id="install.windows.manual.upgrade">
     <title>从旧版本的 PHP 升级</title>
     <para>
      上一版的手册建议您将 ini 和多个 <acronym>DLL</acronym> 文件移动到您的系统文件夹（例如
      <filename class="directory">C:\WINDOWS</filename>）。这一步骤虽然简化了安装过程，却导致升级上的困难。我们建议您在使用新版本的
      PHP 前删除所有这些文件（比如从 Windows 系统文件夹删除
      &php.ini; 和 PHP 相关的 DLL 文件）。务必在删除前备份这些文件，因为这一操作可能破坏整个系统。原有的
      &php.ini; 在安装新版本的 PHP 时也可用来参考。不久您便会明白，安装 PHP
      最好的方式便是将所有 PHP 有关的文件都放入同一目录，并在系统的 PATH
      环境变量中设置此目录。
     </para>
    </note>
    
    <note>
     <title>MDAC 需求</title>
     <para>
      如果您使用 Microsoft <emphasis>Windows 98/NT4</emphasis>，需要下载适用于您系统最新版本的
      Microsoft Data Access Components (MDAC)。MDAC 可在 <ulink url="&url.mdac;">&url.mdac;</ulink>
      下载。需要 MDAC 的原因是 Windows 二进制包中编译进了 <link linkend="ref.uodbc">ODBC</link> 支持。
     </para>
    </note>
    
    <para>
     不论何种 Web 服务器，都需要先进行以下步骤：
    </para>
    <para>
     将 PHP 压缩包释放到你选择的目录中。若您使用 PHP 4，可以解压缩到
     <filename>C:\</filename>，压缩包会被释放到一个类似
	 <filename>php-4.3.7-Win32</filename> 的新目录中。若您使用 PHP 5，请解压缩到 <filename
     class="directory">C:\php</filename>，因为其 zip 包内没有类似 <filename>php-4.3.7-Win32</filename>
     的目录信息。您可以选择其它的路径但最好不要用中间有空格的路径（例如：C:\Program Files\PHP
	 就不太好），如果这样做有些 Web 服务器会崩溃。
    </para>
    <para>
     解压缩后的 PHP 目录 PHP 4 和 5 是不同的。它们的目录结构分别为：
    </para>
    <example>
     <title>PHP 4 目录结构</title>
     <programlisting>
<![CDATA[

c:\php
   |
   +--cli
   |  |
   |  |-php.exe           -- CLI 可执行程序 - 仅使用在命令行脚本
   |
   +--dlls                -- 某些扩展需要的 DLL 文件
   |  |
   |  |-expat.dll
   |  |
   |  |-fdftk.dll
   |  |
   |  |-...
   |
   +--extensions          -- PHP 的扩展 DLL 文件
   |  |
   |  |-php_bz2.dll
   |  |
   |  |-php_cpdf.dll
   |  |
   |  |-..
   |
   +--mibs                -- SNMP 支持文件
   |
   +--openssl             -- Openssl 支持文件
   |
   +--pdf-related         -- PDF 支持文件
   |
   +--sapi                -- SAPI (服务器模块支持) DLL 文件
   |  |
   |  |-php4apache.dll
   |  |
   |  |-php4apache2.dll
   |  |
   |  |-..
   |
   +--PEAR                -- PEAR 的初始复本
   |
   |
   |-go-pear.bat          -- PEAR 安装脚本
   |
   |-..
   |
   |-php.exe              -- CGI 可执行文件
   |
   |-..
   |
   |-php.ini-dist         -- 默认的 php.ini 设置
   |
   |-php.ini-recommended  -- 推荐的 php.ini 设置
   | 
   |-php4ts.dll           -- 核心 PHP DLL 文件
   | 
   |-...

]]>
     </programlisting>
    </example> 
    <para>
    或：
    </para>
    <example>
     <title>PHP 5 目录结构</title>
     <programlisting>
<![CDATA[

c:\php
   |
   +--dev
   |  |
   |  |-php5ts.lib
   |
   +--ext                 -- PHP 的扩展 DLL 文件
   |  |
   |  |-php_bz2.dll
   |  |
   |  |-php_cpdf.dll
   |  |
   |  |-..
   |
   +--extras
   |  |
   |  +--mibs             -- SNMP 支持文件
   |  |
   |  +--openssl          -- Openssl 支持文件
   |  |
   |  +--pdf-related      -- PDF 支持文件
   |  |
   |  |-mime.magic
   |
   +--pear                -- PEAR 的初始复本
   |
   |
   |-go-pear.bat          -- PEAR 安装脚本
   |
   |-fdftk.dll
   |
   |-..
   |
   |-php-cgi.exe          -- CGI 可执行文件
   |
   |-php-win.exe          -- 执行脚本时不弹出命令提示行窗口
   |
   |-php.exe              -- CLI 可执行程序 - 仅使用在命令行脚本
   |
   |-..
   |
   |-php.ini-dist         -- 默认的 php.ini 设置
   |
   |-php.ini-recommended  -- 推荐 php.ini 设置
   | 
   |-php5activescript.dll
   |
   |-php5apache.dll
   |
   |-php5apache2.dll
   |
   |-..
   |
   |-php5ts.dll           -- 核心 PHP DLL 文件
   | 
   |-...

]]>
     </programlisting>
    </example> 
    <para>
     请注意它们之间的不同和相似之处。PHP 4 和 PHP 5 都有一个
     <acronym>CGI</acronym> 可执行文件、一个 <acronym>CLI</acronym>
     可执行文件和服务器模块，但是它们位于不同的文件夹和/或有着不同的命名。PHP 4
     将服务器模块放在 <filename class="directory">sapi</filename>
     文件夹，而 PHP 5 并没有此目录，它的服务器模块文件位于 PHP 根文件夹中。PHP 5
     的扩展支持 DLL 文件也并没有放在一个单独的目录中。
    </para>
    <note>
     <para>
      在 PHP 4 中，您需要将位于 <filename class="directory">dll</filename> 和
      <filename class="directory">sapi</filename> 文件夹中的文件移动到主文件夹中 (例如
      <filename class="directory">C:\php</filename>)。
     </para>
    </note>
    <para>
     下面是 PHP 4 和 PHP 5 附带的服务器模块列表：
     <itemizedlist>
      <listitem><para>
       <filename>sapi/php4activescript.dll (php5activescript.dll)</filename>
       - <link linkend="install.windows.activescript">ActiveScript
        引擎</link>，允许您将 PHP 嵌入 Windows 应用程序中。
      </para></listitem>
      <listitem><para>
       <filename>sapi/php4apache.dll (php5apache.dll)</filename> - Apache 1.3.x 模块。
      </para></listitem>
      <listitem><para>
       <filename>sapi/php4apache2.dll (php5apache2.dll)</filename> - Apache 2.0.x module.
      </para></listitem>
      <listitem><para>
       <filename>sapi/php4isapi.dll (php5isapi.dll)</filename> - ISAPI 模块，支持
       ISAPI 兼容的 Web 服务器，比如 IIS 4.0/PWS 4.0 或更新版本。
      </para></listitem>
      <listitem><para>
       <filename>sapi/php4nsapi.dll (php5nsapi.dll)</filename> - Sun/iPlanet/Netscape
       服务器模块。
      </para></listitem>
      <listitem><para>
       <filename>sapi/php4pi3web.dll (PHP 5 无此模块)</filename> - Pi3Web 服务器模块。
      </para></listitem>
       <!-- TODO: servlets? -->
     </itemizedlist>
    </para>
    <para>
     服务器模块比 CGI 可执行程序提供了更好的性能和更多的功能。CLI
     版本是为使用 PHP 命令行脚本而设计的。关于 CLI 的更多信息可以在<link linkend="features.commandline">PHP
     的命令行模式</link>一节中找到。
    </para>
    <warning>
     <simpara>
      SAPI 模块在 4.1 中有较多的增强。但是，在老系统中可能会产生服务器错误，或导致服务器的其它模块停止工作，比如
      ASP。
     </simpara>
    </warning>
    <para>
     CGI 和 CLI 可执行文件，和 Web 服务器模块都需要
     <filename>php4ts.dll</filename> (<filename>php5ts.dll</filename>)。您必须确认该文件可以在 PHP
     安装路径中找到。对该 DLL 的搜索顺序为：
     <itemizedlist>
      <listitem>
       <para>
        调用 <filename>php.exe</filename> 时所在的目录，或者若您使用 SAPI 模块时，Web 服务器的目录（例如
        <filename>C:\Program Files\Apache Group\Apache2\bin</filename>)。
       </para>
      </listitem>
      <listitem>
       <para>
        任何在 Windows 的 <varname>PATH</varname> 环境变量中指定的目录。
       </para>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     要让 <filename>php4ts.dll</filename> / <filename>php5ts.dll</filename>
     能正确被搜索到，您有下面三个选择：复制该文件到 Windows 系统目录，复制该文件到 Web
     服务器的目录，或添加 PHP 目录（例如 <filename
     class="directory">C:\php</filename>）到 <varname>PATH</varname>
     环境变量。为了将来更好的维护，我们建议您使用最后一个选择，添加 PHP 目录到
     <varname>PATH</varname> 环境变量，因为这样更便于将来升级 PHP。在<link
     linkend="faq.installation.addtopath">相应的常见问题解答项目中</link>您可以了解如何将
     PHP 目录添加到
     <varname>PATH</varname> 环境变量中。
    </para>
    <para>
     下一步是为 PHP 设置一个有效的配置文件，&php.ini;。在 zip 文件中有两个
     ini 文件，
     <filename>php.ini-dist</filename> 和
     <filename>php.ini-recommended</filename>。我们建议您使用
     <filename>php.ini-recommended</filename>，因为我们在该文件中优化了性能和安全。请仔细阅读该文件中的注释，因为它从
     <filename>php.ini-dist</filename> 修改而来，会对您的设置产生较大的影响。例如将
     <link linkend="ini.display-errors">display_errors</link> 设置为 <literal>off</literal>，将
     <link linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link> 设置为
     <literal>off</literal>。除了阅读这些部分，还可以学习一下 <link
     linkend="configuration.file">ini
     设置</link>，并手动设置每一个配置项目。如果您想要最安全的设置，这是最好的方法，虽然
     PHP 在默认配置下也是很安全的。复制您选择的 ini 文件到 PHP 能找到的目录中，并将其重命名为
     &php.ini;。PHP 搜索 &php.ini; 的路径在<xref linkend="configuration.file"/>一节已有介绍。
    </para>
    <para>
     如果您使用 Apache 2，更简单的选择是使用 PHPIniDir
     指令（请阅读<link linkend="install.windows.apache2">在 Apache 2
     下的安装</link>页面）；若不是，您最好的选择是设置
     <varname>PHPRC</varname> 环境变量。它在<link
     linkend="faq.installation.phprc">这一常见问题解答项目中</link>进行了解释。
    </para>
    <note>
     <simpara>
      如果您在 Windows NT、2000、XP 或 2003 中使用 NTFS 分区，请确认运行 Web
      服务器的用户有权限读取 &php.ini;（例如将其设置为 Everyone 可读）
     </simpara>
    </note>
    <para>
     下面的步骤是可选的：
     <itemizedlist>
      <listitem>
       <para>
        编辑新的 &php.ini; 文件。
        如果您计划使用 <link linkend="install.windows.omnihttpd">OmniHTTPd</link>，不要执行下一步。设置
        <link linkend="ini.doc-root">doc_root</link> 并指向 Web 服务器的 document_root。例如：
        <informalexample>
          <programlisting role="ini">
<![CDATA[
doc_root = c:\inetpub\wwwroot // for IIS/PWS

doc_root = c:\apache\htdocs // for Apache
]]>
         </programlisting>
        </informalexample>
       </para>
      </listitem>
      <listitem>
       <simpara>
        选择 PHP 装载的扩展。请阅读关于
        <link linkend="install.windows.extensions">Windows
        扩展</link>一节，以了解如何设置扩展，和哪些功能已经内建，无需扩展。请注意我们建议您在全新安装时先不要在
        &php.ini; 中加载任何扩展，首先要保证 PHP 自身能够正常工作。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        在 PWS 和 IIS，您可以设置
        <link linkend="ini.browscap">browscap</link> 配置：在 Windows 9x/Me 中指向
        <filename>c:\windows\system\inetsrv\browscap.ini</filename>，在 NT/2000 中指向
        <filename>c:\winnt\system32\inetsrv\browscap.ini</filename>，在 XP 中指向
        <filename>c:\windows\system32\inetsrv\browscap.ini</filename>。要得到最新版本的
        <filename>browscap.ini</filename>，请阅读如下<link linkend="faq.obtaining.browscap">常见问题解答项目</link>。
       </simpara>
      </listitem>
     </itemizedlist>
    </para> 
    <para>
     PHP 现在已经安装在您的系统中了。接下来一步是选择一个 Web 服务器，并为之启用
     PHP。请在本章目录中选择一个 Web 服务器以了解更详细的安装步骤。
    </para>
   </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
