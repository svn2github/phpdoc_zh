<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision: 1.2 $ -->
<!-- $Author: dallas $ -->
<!-- EN-Revision:1.4 Maintainer: dallas Status: ready -->
   <sect1 id="install.windows.building">
    <title>从源程序编译</title>
    <para>
     开始之前，很值得回答一下这个问题：为什么在 Windows 下编译这么难？两个原因：
    </para>
    <orderedlist>
     <listitem>
      <simpara>
       Windows 下还没有愿意免费共享代码的开发人员群体。直接结果就是没有足够的投资去建立支持这种开发方式的体系。大体上，尽量得到的可用资源都是从
       Unix 下的工具来的。不要奇怪这种传统不会时出现。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       下面几乎所有的说明都是“看过就忘”的类型。所以坐稳当并且尽可能忠实地按照说明来做。
      </simpara>
     </listitem>
    </orderedlist>

    <sect2 id="install.windows.building.requirement">
     &reftitle.required;
     <para>
      要编译 PHP 需要 Microsoft 开发环境。推荐使用 Microsoft Visuaul C++
      6.0。要释放下载的文件还需要一个解压缩工具（例如：Winzip）。如果还没有解压缩的工具，可以从
      <ulink url="&url.infozip;">InfoZip</ulink> 下载一个免费版本。
     </para>
     <para>
      在开始之前，需要先下载...
     </para>
      <itemizedlist>
       <listitem>
        <simpara>
        PHP 站点中的 win32 编译工具
        <ulink url="&url.win32.buildtools;">&url.win32.buildtools;</ulink>。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        PHP 使用的 DNS 解析器的源代码：<ulink
        url="&url.win32.dnsresolver;">&url.win32.dnsresolver;</ulink>。用这个替代
        <filename>win32build.zip</filename> 中的 <filename>resolv.lib</filename>。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        如果计划把 PHP 编译成 Apache 的静态模块那还需要
        <ulink url="&url.apache.source;">Apache 源程序</ulink>。
       </simpara>
      </listitem>
     </itemizedlist>
     <simpara>
      最后，还需要 PHP 本身的源代码。可以通过<ulink url="&url.php.anoncvs;">匿名
      CVS</ulink> 得到最新的开发版本，一个<ulink
      url="&url.php.snapshots;">快照</ulink>或者最新发行版本的<ulink
      url="&url.php.downloads;">源程序</ulink>的打包文件。
     </simpara>
    </sect2>

    <sect2 id="install.windows.building.install">
     <title>放到一起</title>
     <para>
      下载了所有的包后需要将他们解压缩到适当的位置。
      <itemizedlist>
       <listitem>
        <simpara>
         建立一个工作目录作为解压缩后存放所有文件的地方，例如：<filename class="directory">C:\work</filename>。
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         在工作目录（<filename class="directory">C:\work</filename>）下新建一个目录
         <filename>win32build</filename> 并将
         <filename>win32build.zip</filename> 解压缩到其中。
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         在工作目录（<filename class="directory">C:\work</filename>）下新建一个目录
         <filename>bindlib_w32</filename> 并将
         <filename>bindlib_w32.zip</filename> 解压缩到其中。
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         将下载的 PHP 源程序解压缩到工作目录（<filename class="directory">C:\work</filename>）中。
        </simpara>
       </listitem>
      </itemizedlist>
      经过以上步骤后目录结构应该如下：
      <informalexample>
       <programlisting>
<![CDATA[

+--c:\work
|  |
|  +--bindlib_w32
|  |  |
|  |  +--arpa
|  |  |
|  |  +--conf
|  |  |
|  |  +--...
|  |
|  +--php-4.x.x
|  |  |
|  |  +--build
|  |  |
|  |  +--...
|  |  |
|  |  +--win32
|  |  |
|  |  +--...
|  |
|  +--win32build
|  |  |
|  |  +--bin
|  |  |
|  |  +--include
|  |  |
|  |  +--lib

]]>
       </programlisting>
      </informalexample>
      新建一个目录 <filename class="directory">c:\usr\local\lib</filename>。将
      <filename>bison.simple</filename> 从
      <filename class="directory">c:\work\win32build\bin</filename>
      拷贝到 <filename class="directory">c:\usr\local\lib</filename>。
     </para>
     <note>
      <simpara>
       <ulink url="&url.cygwin;">Cygwin</ulink> 用户应省略上一步。正确安装的
       Cygwin 环境已强制提供了 <filename>bison.simple</filename> 和
       <filename>bison.exe</filename> 文件。
      </simpara>
     </note>
    </sect2>

    <sect2 id="install.windows.building.configure">
     <title>配置 MVC ++</title>
      <para>
       下一步是配置 MVC ++ 来准备编译。运行 Microsoft Visual C++，在菜单中选择
       Tools =&gt; Options。在对话框中，选择 directories
       标签。依次将下拉框改为 Executables，Includes 和
       Library files。其看上去应该是：
       <itemizedlist>
        <listitem>
         <simpara>
          Executable files: <filename class="directory">c:\work\win32build\bin</filename>,
          Cygwin users: <filename>cygwin\bin</filename>
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          Include files: <filename class="directory">c:\work\win32build\include</filename>
         </simpara>
        </listitem>
         <listitem>
          <simpara>
          Library files: <filename class="directory">c:\work\win32build\lib</filename>
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
    </sect2>

    <sect2 id="install.windows.building.resolvlib">
     <title>编译 resolv.lib</title>
      <para>
       必须编译 <filename>resolv.lib</filename>
       库。自己决定是需要调试信息（bindlib - Win32 Debug）还是不需要（bindlib
       - Win32 Release）。编译适当的配置：
       <itemizedlist>
        <listitem>
         <simpara>
          图形界面用户，运行 VC++，选择 File =&gt; Open Workspace，找到
          <filename class="directory">c:\work\bindlib_w32</filename>
          目录并选择 <filename>bindlib.dsw</filename> 文件。接着选择
          Build =&gt; Set Active Configuration 菜单并选择需要的配置。最后选择
          Build =&gt; Rebuild All。
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          命令行用户，确认要么注册了 C++ 环境变量，要么运行了
          <command>vcvars.bat</command>，然后运行下面任意一行命令：
         </simpara>
         <itemizedlist>
          <listitem>
           <simpara>
            <userinput>msdev bindlib.dsp /MAKE "bindlib - Win32 Debug"</userinput>
           </simpara>
          </listitem>
          <listitem>
           <simpara>
            <userinput>msdev bindlib.dsp /MAKE "bindlib - Win32 Release"</userinput>
           </simpara>
          </listitem>
         </itemizedlist>
        </listitem>
       </itemizedlist>
       到这一步，应该得到了一个 <filename>resolv.lib</filename> 在
       <filename class="directory">c:\work\bindlib_w32\Debug</filename>
       或者 <filename>Release</filename> 目录下。将此文件拷贝到
       <filename class="directory">c:\work\win32build\lib</filename>
       目录下并覆盖同名的文件。
      </para>
    </sect2>

    <sect2 id="install.windows.building.compile">
     <title>编译</title>
     <simpara>
      对于初学者最好的上手方法是编译 CGI 版本。
     </simpara>
     <itemizedlist>
      <listitem>
       <simpara>
        图形界面用户，运行 VC++，选择 File =&gt; Open Workspace 菜单并选择
        <filename>c:\work\php-4.x.x\win32\php4ts.dsw</filename>。接着选择
        Build =&gt; Set Active Configuration 菜单并选择想要的配置，要么是
        <literal>php4ts - Win32 Debug_TS</literal> 要么是
        <literal>php4ts - Win32 Release_TS</literal>。最后选择
        Build =&gt; Rebuild All。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        命令行用户，确认要么注册了 C++ 环境变量，要么运行了
        <command>vcvars.bat</command>，然后从
        <filename class="directory">c:\work\php-4.x.x\win32</filename>
        目录下运行下面任意一行命令：
       </simpara>
       <itemizedlist>
        <listitem>
         <simpara>
          <userinput>msdev php4ts.dsp /MAKE "php4ts - Win32 Debug_TS"</userinput>
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <userinput>msdev php4ts.dsp /MAKE "php4ts - Win32 Release_TS"</userinput>
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          到这一步，应该得到一个可用的
          <filename>php.exe</filename> 在
          <filename class="directory">c:\work\php-4.x.x.\Debug_TS</filename> 或
          <filename>Release_TS</filename> 目录下。
         </simpara>
        </listitem>
       </itemizedlist>
      </listitem>
     </itemizedlist>
     <simpara>
      有可能通过编辑 <filename>main/config.win32.h</filename>
      文件对编译做少量的定制。例如可以改变 &php.ini;
      文件的默认位置，内置的扩展库，以及扩展库的默认位置。
     </simpara>
     <simpara>
      下一步可能想要编译 CLI 版本，这是设计用于 <link
      linkend="features.commandline">PHP 的命令行方式</link>。步骤和编译
      CGI 版本相同，只除了要选择 <literal>php4ts_cli - Win32 Debug_TS</literal>
      或者 <literal>php4ts_cli - Win32 Release_TS</literal>
      项目文件。成功编译后会在 <filename class="directory">Release_TS\cli\</filename>
      或者 <filename class="directory">Debug_TS\cli\</filename>
      目录下找到 <filename>php.exe</filename> 文件。
     </simpara>
     <note>
      <simpara>
       如果想使用 PEAR 以及舒适的命令行安装程序，就非要用
       CLI-SAPI。有关 PEAR 和安装程序的更多信息见
       <ulink url="&url.php.pear;manual/">PEAR</ulink> 网站。
      </simpara>
     </note>
     <simpara>
      要编译 SAPI 模块（<filename>php4isapi.dll</filename>）来将 PHP
      和 Microsoft IIS 集成起来，将 active configuration
      设为 <filename>php4isapi-whatever-config</filename> 并编译所需要的 dll。.
     </simpara>
    </sect2>
   </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
