<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision: 1.3 $ -->
<!-- $Author: dallas $ -->
<!-- EN-Revision:1.5 Maintainer: dallas Status: ready -->
<sect1 id="install.windows.building">
 <title>从源程序编译</title>
 <para>
  本章讲述了在 Windows 下如何使用 Microsoft 的工具编译 PHP。要在
  CygWin 中编译 PHP，请参考 <xref linkend="install.unix"/>。
 </para>

 <sect2 id="install.windows.building.requirement">
  &reftitle.required;
  <para>
   要编译 PHP 需要 Microsoft 开发环境。推荐使用 Microsoft Visuaul C++
   6.0，不过 .NET 版也可以用。要释放下载的文件还需要一个解压缩工具（例如
   Winzip）。Windows XP 和更新的版本中已经内置了此功能。
  </para>
  <para>
   在开始之前，需要先下载：
  </para>
  <itemizedlist>
   <listitem>
    <simpara>
     PHP 站点中的 win32 编译工具
     <ulink url="&url.win32.buildtools;">&url.win32.buildtools;</ulink>。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     PHP 使用的 DNS 解析器的源代码：<ulink
     url="&url.win32.dnsresolver;">&url.win32.dnsresolver;</ulink>。用这个替代
     <filename>win32build.zip</filename> 中的 <filename>resolv.lib</filename>。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     如果计划把 PHP 编译成 Apache 的静态模块那还需要
     <ulink url="&url.apache.source;">Apache 源程序</ulink>。
    </simpara>
   </listitem>
  </itemizedlist>
  <simpara>
   最后，还需要 PHP 本身的源代码。可以通过<ulink url="&url.php.anoncvs;">匿名
   CVS</ulink> 得到最新的开发版本，一个<ulink
   url="&url.php.snapshots;">快照</ulink>或者最新发行版本的<ulink
   url="&url.php.downloads;">源程序</ulink>的打包文件。
  </simpara>
 </sect2>

 <sect2 id="install.windows.building.install">
  <title>放到一起</title>
  <para>
   下载了所有的包后需要将它们解压缩到适当的位置：
   <itemizedlist>
    <listitem>
     <simpara>
      建立一个工作目录作为解压缩后存放所有文件的地方，例如：<filename class="directory">C:\work</filename>。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      在工作目录（<filename class="directory">C:\work</filename>）下新建一个目录
      <filename>win32build</filename> 并将
      <filename>win32build.zip</filename> 解压缩到其中。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      在工作目录（<filename class="directory">C:\work</filename>）下新建一个目录
      <filename>bindlib_w32</filename> 并将
      <filename>bindlib_w32.zip</filename> 解压缩到其中。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      将下载的 PHP 源程序解压缩到工作目录（<filename class="directory">C:\work</filename>）中。
     </simpara>
    </listitem>
   </itemizedlist>
   经过以上步骤后目录结构应该如下：
  <screen>
<![CDATA[
+--C:\work
|  |
|  +--bindlib_w32
|  |  |
|  |  +--arpa
|  |  |
|  |  +--conf
|  |  |
|  |  +--...
|  |
|  +--php-5.x.x
|  |  |
|  |  +--build
|  |  |
|  |  +--...
|  |  |
|  |  +--win32
|  |  |
|  |  +--...
|  |
|  +--win32build
|  |  |
|  |  +--bin
|  |  |
|  |  +--include
|  |  |
|  |  +--lib
]]>
  </screen>
 </para>
 <para>
  如果不是用 <ulink url="&url.cygwin;">Cygwin</ulink>
  的话，还必须新建一个目录 <filename class="directory">c:\usr\local\lib</filename>
  并将 <filename>bison.simple</filename> 从
  <filename class="directory">c:\work\win32build\bin</filename>
  拷贝到 <filename class="directory">c:\usr\local\lib</filename> 中。
  </para>
 </sect2>

 <sect2 id="install.windows.building.resolvlib">
  <title>编译 resolv.lib</title>
  <para>
   必须编译 <filename>resolv.lib</filename>
   库。自己决定是需要调试信息（bindlib - Win32 Debug）还是不需要（bindlib
   - Win32 Release），但是要记住自己的选择，因为必须用同样的方式编译
   PHP，否则会出连接错误。编译适当的配置：
   <itemizedlist>
    <listitem>
     <simpara>
      图形界面用户，通过鼠标双击
      <filename>C:\work\bindlib_w32\bindlib.dsw</filename>
      运行 VC++。接着选择
      Build =&gt; Rebuild All。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      命令行用户，确认要么注册了 C++ 环境变量，要么运行了
      <command>vcvars.bat</command>，然后运行下面任意一行命令：
     </simpara>
     <itemizedlist>
      <listitem>
       <simpara>
        <command>msdev bindlib.dsp /MAKE "bindlib - Win32 Debug"</command>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <command>msdev bindlib.dsp /MAKE "bindlib - Win32 Release"</command>
       </simpara>
      </listitem>
     </itemizedlist>
    </listitem>
   </itemizedlist>
   到这一步，应该得到了一个可用的 <filename>resolv.lib</filename> 在
   <filename class="directory">c:\work\bindlib_w32\Debug</filename>
   或者 <filename>Release</filename> 目录下。将此文件拷贝到
   <filename class="directory">c:\work\win32build\lib</filename>
   目录下并覆盖同名的文件。
  </para>
 </sect2>

 <sect2 id="install.windows.building.new">
  <title>用新编译系统编译 PHP（仅适用于 PHP &gt;=5）</title>
  <para>
   本节讲解了怎样用新编译系统编译 PHP &gt;=5，此系统是基于 CLI
   的，并且非常类似于 PHP 的 Unix 编译系统。
  </para>
  <note>
   <para>
    此编译系统在 PHP 4 中不可用。请参考<xref
    linkend="install.windows.building.dsw"/>。
   </para>
  </note>
  <para>
   首先应该打开一个用于 Visual Studio
   的命令行提示符，应在开始菜单中能找到。正常的命令提示符可能不能用，因为没有设定所需的环境变量。输入类似
   <command>cd C:\work\php-5.x.x</command> 的命令进入 PHP
   源程序目录。现在可以开始配置 PHP 了。
  </para>
  <para>
   第二步是运行 <command>buildconf</command>
   批处理文件来扫描文件夹寻找 <filename>config.w32</filename>
   来建立配置脚本。默认时此命令还会搜索以下目录：<filename class="directory">pecl;
   ..\pecl; pecl\rpc; ..\pecl\rpc</filename>。自 PHP 5.1.0
   起，可以通过 <literal>--add-modules-dir</literal>
   参数来改变此行为（例如
   <command>buildconf --add-modules-dir=../php-gtk2
   --add-modules-dir=../pecl</command>）。
  </para>
  <para>
   第三步是配置。要查看可用的配置选项列表，输入
   <command>cscript /nologo configure.js --help</command>
   命令。选择了需要激活或禁止的选项之后，输入类似
   <command>cscript /nologo configure.js --disable-foo
   --enable-fun-ext</command> 的命令。使用 <literal>--enable-foo=shared</literal>
   将尝试将“foo”扩展库编译为共享的，可动态加载的模块。
  </para>
  <para>
   最后一步是编译。只需运行命令
   <command>nmake</command> 即可。所生成的文件（例如
   .exe 和 .dll）将会放在
   <filename class="directory">Release_TS</filename> 或
   <filename class="directory">Debug_TS</filename>
   目录下（如果编译的是线程安全版的话），或者是
   <filename class="directory">Release</filename> 或
   <filename class="directory">Debug</filename> 目录。
  </para>
  <para>
   作为可选项还可以运行 PHP 的测试套件，输入
   <command>nmake test</command> 命令。如果要做一个特定的测试，可以用
   'TESTS' 变量（例如 <command>nmake /D TESTS=ext/sqlite/tests test</command>
   将只执行 sqlite 测试）。要删除编译过程中生成的文件，可以用
   <command>nmake clean</command> 命令。
  </para>
  <para>
   有个很有用的选项来编译快照：<literal>--enable-snapshot-build</literal>。此选项添加了一个新的编译模式（<command>nmake build-snap</command>）。这将尝试编译每一个可用的扩展库（默认为共享模块方式），但是忽略个别的扩展库或 SAPI 中的编译错误。
  </para>
 </sect2>

 <sect2 id="install.windows.building.dsw">
  <title>用 DSW 文件编译 PHP（PHP 4）</title>
  <para>
   自 PHP 5 起不支持用 DSW 文件来编译
   PHP，因为有了一个更灵活的系统。不过还是可以用此方法，但要记住此系统并不经常维护，因此编译可能会有问题。不过这是在
   Windows 下编译 PHP 4 的唯一方法。
  </para>

  <sect3 id="install.windows.building.dsw.configure">
   <title>配置 MVC ++</title>
   <para>
    第一步是配置 MVC++ 来准备编译。启动
    Microsoft Visual C++，在菜单中选择 Tools =&gt; Options。在对话框中选择
    directories 标签。按顺序把下拉选项选为
    Executables，Includes 和 Library files。其内容应类似于：
    <itemizedlist>
     <listitem>
      <simpara>
       Executable files：<filename
       class="directory">C:\work\win32build\bin</filename>，Cygwin 用户：<filename>C:\cygwin\bin</filename>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Include files：<filename
       class="directory">C:\work\win32build\include</filename>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Library files：<filename
       class="directory">C:\work\win32build\lib</filename>
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
  </sect3>

  <sect3 id="install.windows.building.dsw.compile">
   <title>编译</title>
   <simpara>
    对于初学者最好的上手方法是编译 CGI 版本：
   </simpara>
   <itemizedlist>
    <listitem>
     <simpara>
      图形界面用户，运行 VC++，选择 File =&gt; Open Workspace 菜单并选择
      <filename>c:\work\php-4.x.x\win32\php4ts.dsw</filename>。接着选择
      Build =&gt; Set Active Configuration 菜单并选择想要的配置，要么是
      <literal>php4ts - Win32 Debug_TS</literal> 要么是
      <literal>php4ts - Win32 Release_TS</literal>。最后选择
      Build =&gt; Rebuild All。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      命令行用户，确认要么注册了 C++ 环境变量，要么运行了
      <command>vcvars.bat</command>，然后从
      <filename class="directory">c:\work\php-4.x.x\win32</filename>
      目录下运行下面任意一行命令：
     </simpara>
     <itemizedlist>
      <listitem>
       <simpara>
        <command>msdev php4ts.dsp /MAKE "php4ts - Win32 Debug_TS"</command>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <command>msdev php4ts.dsp /MAKE "php4ts - Win32 Release_TS"</command>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        到这一步，应该得到一个可用的
        <filename>php.exe</filename> 在
        <filename class="directory">c:\work\php-4.x.x.\Debug_TS</filename> 或
        <filename>Release_TS</filename> 目录下。
       </simpara>
      </listitem>
     </itemizedlist>
    </listitem>
   </itemizedlist>
   <simpara>
   有可能通过编辑 <filename>main/config.win32.h</filename>
   文件对编译做少量的定制。例如可以改变 &php.ini;
   文件的默认位置，内置的扩展库，以及扩展库的默认位置。
   </simpara>
   <simpara>
    下一步可能想要编译 CLI 版本，这是设计用于 <link
    linkend="features.commandline">PHP 的命令行方式</link>。步骤和编译
    CGI 版本相同，只除了要选择 <literal>php4ts_cli - Win32 Debug_TS</literal>
    或者 <literal>php4ts_cli - Win32 Release_TS</literal>
    项目文件。成功编译后会在 <filename class="directory">Release_TS\cli\</filename>
    或者 <filename class="directory">Debug_TS\cli\</filename>
    目录下找到 <filename>php.exe</filename> 文件。
   </simpara>
   <note>
    <simpara>
     如果想使用 PEAR 以及舒适的命令行安装程序，就非要用
     CLI-SAPI。有关 PEAR 和安装程序的更多信息见
     <ulink url="&url.php.pear;manual">PEAR</ulink> 网站。
    </simpara>
   </note>
   <simpara>
    要编译 SAPI 模块（<filename>php4isapi.dll</filename>）来将 PHP
    和 Microsoft IIS 集成起来，将 active configuration
    设为 <filename>php4isapi-whatever-config</filename> 并编译所需要的 dll。.
   </simpara>
  </sect3>
 </sect2>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
