<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision: 1.1 $ -->
<!-- $Author: dallas $ -->
<!-- EN-Revision:1.17 Maintainer: dallas Status: ready -->
<sect1 id="install.windows.iis">
 <title>Microsoft IIS／PWS</title>
 <para>
  本节包括针对 IIS（Microsoft Internet Information Server）的说明与提示。
 </para>

 &warn.install.cgi;

 <sect2 id="install.windows.iis.general">
  <title>PHP 与 IIS 安装的通用事项</title>
  <para>
   <itemizedlist>
    <listitem>
     <simpara>
      首先请阅读<link
      linkend="install.windows.manual">手工安装步骤</link>。不要跳过这一步，这里提供了将
      PHP 安装到 Windows 中的极其重要的信息。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      CGI 用户必须在 &php.ini; 中将
      <link linkend="ini.cgi.force-redirect">cgi.force_redirect</link>
      指令设为 <literal>0</literal>。其重要细节请阅读
      <link linkend="faq.installation.forceredirect">cgi.force_redirect
      的 FAQ</link>。此外，CGI 用户可能需要设定 <link
      linkend="ini.cgi.redirect-status-env">cgi.redirect_status_env</link>
      指令。在使用这些指令时，确保它们没有在 &php.ini; 中被注释掉。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      PHP 4 的 CGI 文件名是 <filename>php.exe</filename> 而在 PHP 5 中是
      <filename>php-cgi.exe</filename>。在 PHP 5 中，<filename>php.exe</filename>
      是 CLI 版本，不是 CGI。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      修改 Windows 的 <literal>PATH</literal> 环境变量以把
      PHP 目录包括进去。这样 PHP 的 DLL 文件，可执行文件和
      &php.ini; 就都可以保留在 PHP 目录中而不用把
      Windows 系统目录搞乱了。更多细节见 FAQ 中的<link
      linkend="faq.installation.addtopath">设定路径 PATH</link>。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      IIS 专用用户（通常为 IUSR_MACHINENAME）需要能够读取各个文件和目录的权限，例如
      &php.ini;，docroot 和 session 的 tmp 目录。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      确保在 &php.ini; 中正确设定了
      <link linkend="ini.extension-dir">extension_dir</link> 和
      <link linkend="ini.doc-root">doc_root</link> 指令的值。这些指令依赖于
      PHP 被安装的系统。在 PHP 4 中，extension_dir 是
      <filename>extensions</filename> 而在 PHP 5 中是
      <filename>ext</filename>。因此在 PHP 5 中 extensions_dir 的一个取值例子是
      <filename>"c:\php\ext"</filename>，IIS 的 doc_root 的取值例子是
      <filename>"c:\Inetpub\wwwroot"</filename>。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      PHP 扩展库的 DLL 文件，如 <filename>php_mysql.dll</filename> 和
      <filename>php_curl.dll</filename>，存放于 PHP 下载的 zip
      包中（自动安装包里没有）。在 PHP 5 中，很多扩展库都是
      PECL 的一部分，可以从“Collection of PECL modules”包中下载，例如
      <filename>php_zip.dll</filename> 和
      <filename>php_ssh2.dll</filename>。<ulink
      url="&url.php.downloads;">点击进入 PHP 下载页</ulink>。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      在定义应用程序扩展名映射时，应选中“检查文件是否存在”。以极小的性能为代价，IIS（或者
      PWS）会在调用 PHP 之前检查脚本文件是否存在并选出认证方法。这意味着 web
      服务器会提供一个有道理的 404 形式错误信息而不是一条 CGI
      错误说什么 PHP 没有输出任何数据。
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
 </sect2>

 <sect2 id="install.windows.iis.iis4">
  <title>Windows NT／200x／XP 和 IIS 4 或更高版本</title>

  <simpara>
   PHP 可以安装为 CGI 或者 ISAPI 模块。不管哪种，都需要启动
   Microsoft 管理控制台（也可能是“Internet 信息服务”，要么在
   Windows NT 4.0 Option Pack 或者在 Windows 2000/XP
   下的控制面板=&gt;管理工具）。然后右键点击 web
   服务器节点（通常为“默认网站”），并选择“属性”。
  </simpara>

  <para>
   如果想用 CGI 方式，按如下方法进行：
   <itemizedlist>
    <listitem>
     <simpara>
      选择“主目录”，“虚拟目录”或“目录”标签页，然后进行：
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      将执行权限改为“纯脚本”
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      点“配置”按钮，选择“映射”标签页。点击“添加”按钮，将“可执行文件”指向适当的
      CGI 文件名。例如 PHP 5 的值可能是：<filename>C:\php\php-cgi.exe</filename>。在“扩展名”中填入
      <literal>.php</literal>。选择“全部动作”（或者“限制为”留空），选中“脚本引擎”。然后点击“确定”。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      设定合适的目录安全性（在 Internet 信息服务中完成）。如果
      NT 服务器使用 NTFS 文件系统，给 I_USR_ 用户加上
      <filename>php.exe</filename>／<filename>php-cgi.exe</filename>
      文件所在目录的可执行权限（通过资源管理器完成）。
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
  <para>
   要用 ISAPI 模块方式，按如下方法进行：
   <itemizedlist>
    <listitem>
     <simpara>
      如果不想用 PHP 进行 HTTP 认证，应该跳过这一步。在“ISAPI
      筛选器”标签页中添加一个新的 ISAPI 筛选器。“筛选器名称”设为
      PHP，“可执行文件”设为
      <filename>php4isapi.dll</filename>／<filename>php5isapi.dll</filename> 的路径。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      选择“主目录”，“虚拟目录”或“目录”标签页，然后进行：
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      将执行权限改为“纯脚本”
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      点“配置”按钮，选择“映射”标签页。点击“添加”按钮，将“可执行文件”指向适当的
      ISAPI DLL。例如 PHP 5 的值可能是：<filename>C:\php\php5isapi.dll</filename>。在“扩展名”中填入
      <literal>.php</literal>。选择“全部动作”（或者“限制为”留空），选中“脚本引擎”。然后点击“确定”。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      完全停止 IIS（NET STOP iisadmin）
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      重新启动 IIS（NET START w3svc）
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
  <para>
   对于 IIS 6（2003 Server），打开 IIS 管理器，进入 Web
   服务扩展，点击“添加一个新的 Web 服务扩展”，“扩展名”中输入名称，例如
   PHP，再点击“添加”按钮，点击“浏览”选择要么 ISAPI 文件（<filename>php4isapi.dll</filename>
   或 <filename>php5isapi.dll</filename>）或者 CGI 文件（<filename>php.exe</filename>
   或 <filename>php-cgi.exe</filename>）作为“文件路径”后点“确定”，然后选中“设置扩展状态为允许”并点“确定”。
  </para>
  <para>
   要使用 <filename>index.php</filename> 作为默认文档，在“文档”标签页中选择“添加”。输入
   <filename>index.php</filename> 并点“确定”。用上下箭头按钮调整顺序。这和在
   Apache 中设定 DirectoryIndex 相似。
  </para>
  <para>
   对于每个要关联为 PHP 脚本的后缀都要重复以上步骤。<literal>.php</literal>
   是最常用的，此外为兼容一些遗留下来的老程序可能还需要加上 <literal>.php3</literal>。
  </para>
  <para>
   如果过些时候之后碰到 CPU 占用率达到 100%，则取消选中<literal>缓存
   ISAPI 应用程序</literal>（“主目录”下点“配置”按钮”）。
  </para>
 </sect2>

 <sect2 id="install.windows.iis.pws4">
  <title>Windows 和 PWS 4</title>
  <simpara>
   PWS 4 不支持 ISAPI，只能使用 PHP CGI。
  </simpara>
  <para>
   <itemizedlist>
    <listitem>
     <simpara>
      编辑包里附上的
      <filename>pws-php4cgi.reg</filename>／<filename>pws-php5cgi.reg</filename>
      文件（PHP 4 在 SAPI 目录下，PHP 5 在主目录下）改为自己的
      <filename>php.exe</filename>／<filename>php-cgi.exe</filename>
      文件的路径。反斜线应双写，例如：<literal>[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\w3svc\parameters\Script
      Map] ".php"="C:\\php\\php.exe"</literal>（如果用 PHP 5 则改为
      <literal>C:\\php\\php-cgi.exe</literal>）。然后将此注册表文件合并入系统；鼠标双击此文件即可。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      在 PWS 管理器中，右键点击需要加入 PHP 支持的目录并选择“属性”。选中“执行”，并确认。
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
 </sect2>

 <sect2 id="install.windows.iis.iis3">
  <title>Windows 和 PWS／IIS 3</title>
  <simpara>
   配置此服务器的推荐方法是使用随包发布的注册表文件（PHP 4
   是 SAPI 目录下的 <filename>pws-php4cgi.reg</filename>，PHP 5 是主目录下的
   <filename>pws-php5cgi.reg</filename>）。可能要编辑此文件已确保其中的
   PHP 安装目录和扩展库目录符合用户自己的设置。或者按以下步骤手工完成。
  </simpara>
  <warning>
   <para>
    以下步骤涉及到直接操作 Windows
    注册表。如果出错可能使系统不稳定，强烈建议先备份注册表。如果用户损坏了注册表
    PHP 开发组不负任何责任。
   </para>
  </warning>

  <para>
   <itemizedlist>
    <listitem>
     <simpara>
      运行 Regedit。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      找到：<literal>HKEY_LOCAL_MACHINE /System
      /CurrentControlSet /Services /W3Svc /Parameters
      /ScriptMap</literal>。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      在编辑菜单选择：<literal>新建->字符串值</literal>。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      输入 PHP 脚本想要使用的后缀，例如 <literal>.php</literal>。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      双击新建的字符串值并在“数值数据”栏里输入 <filename>php.exe</filename>
      的路径，例如 PHP 4 是 <filename>C:\php\php.exe "%s" %s</filename>，或者
      PHP 5 是 <filename>C:\php\php-cgi.exe "%s" %s</filename>。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      对每个要关联为 PHP 脚本的文件后缀名重复以上步骤。
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
  <para>
   以下步骤不影响 web 服务器安装，仅适用于想在命令行下运行 PHP
   脚本（例如运行
   <filename>C:\myscripts\test.php</filename>）或者在资源管理器窗口中双击文件名就运行程序。如果更希望双击
   PHP 文件名是将其调入文本编辑器，则跳过以下步骤。
  </para>
  <para>
   <itemizedlist>
    <listitem>
     <simpara>
      找到：<literal>HKEY_CLASSES_ROOT</literal>。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      在编辑菜单选择：<literal>新建->项</literal>。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      将新项命名为前一节设的后缀，例如：<literal>.php</literal>。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      选中新项，在右边栏双击“默认”并输入 <literal>phpfile</literal>。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      对每个在前一节设定的后缀都重复以上步骤。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      在 <literal>HKEY_CLASSES_ROOT</literal>
      下再创建另一个<literal>新建->项</literal> 并命名为 <literal>phpfile</literal>。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      选中新项 <literal>phpfile</literal>，在右边栏双击“默认”并输入
      <literal>PHP Script</literal>。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      右键点击 <literal>phpfile</literal>
      项并选择<literal>新建->项</literal>，命名为 <literal>Shell</literal>。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      右键点击 <literal>Shell</literal>
      项并选择<literal>新建->项</literal>，命名为 <literal>open</literal>。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      右键点击 <literal>open</literal>
      项并选择<literal>新建->项</literal>，命名为 <literal>command</literal>。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      选中新项 <literal>command</literal>，在右边栏双击“默认”并输入
      <filename>php.exe</filename>
      的路径，例如：<literal>c:\php\php.exe -q %1</literal>（不要忘了
      <literal>%1</literal>）。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      退出 Regedit。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      如果是 Windows 下的 PWS，重启动以重新加载注册表。
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
  <simpara>
   PWS 和 IIS 3 的用户现在就拥有了完全可运作的系统。IIS 3
   用户可以使用来自 Steven Genusa
   的漂亮<ulink url="&url.iiscfg;">工具</ulink>来配置脚本映射。
  </simpara>
 </sect2>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
