<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision$ -->
<!-- $Author$ -->
<!-- EN-Revision: n/a Maintainer: dallas Status: ready -->
<chapter xml:id="configuration" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>运行时配置</title>

 <sect1 xml:id="configuration.file">
  <title>配置文件</title>

  <simpara>
   配置文件（PHP 3 中是 <filename>php3.ini</filename>，自 PHP 4
   起是 &php.ini;）在 PHP 启动时被读取。对于服务器模块版本的 PHP，仅在 web
   服务器启动时读取一次。对于
   <acronym>CGI</acronym> 和 <acronym>CLI</acronym> 版本，每次调用都会读取。
  </simpara>
  <para>
   &php.ini; 的搜索路径如下（按顺序）：
   <itemizedlist>
    <listitem>
     <para>
      SAPI 模块所指定的位置（Apache 2 中的 <literal>PHPIniDir</literal>
      指令，CGI 和 CLI 中的 <literal>-c</literal>
      命令行选项，NSAPI 中的
      <literal>php_ini</literal> 参数，THTTPD 中的
      <literal>PHP_INI_PATH</literal> 环境变量）
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>HKEY_LOCAL_MACHINE\SOFTWARE\PHP\IniFilePath</literal>（Windows 注册表位置）
     </para>
    </listitem>
    <listitem>
     <para>
      <varname>PHPRC</varname> 环境变量
     </para>
    </listitem>
    <listitem>
     <para>
      当前工作目录（对于 CLI）
     </para>
    </listitem>
    <listitem>
     <para>
      web 服务器目录（对于 SAPI 模块）或 PHP 所在目录（Windows 下其它情况）
     </para>
    </listitem>
    <listitem>
     <para>
      Windows 目录（<filename class="directory">C:\windows</filename>
      或 <filename class="directory">C:\winnt</filename>），或
      <literal>--with-config-file-path</literal> 编译时选项指定的位置
     </para>
    </listitem>
   </itemizedlist>
  </para>
  <para>
   如果存在 <filename>php-SAPI.ini</filename>（SAPI 是当前所用的 SAPI
   名称，因此实际文件名为 <filename>php-cli.ini</filename> 或
   <filename>php-apache.ini</filename> 等），则会用它替代 &php.ini;。SAPI
   的名称可以用 <function>php_sapi_name</function> 来测定。
  </para>
  <note>
   <para>
    Apache web 服务器在启动时会把目录转到根目录，这将导致 PHP 尝试在根目录下读取
    &php.ini;，如果存在的话。
   </para>
  </note>
  <para>
   由扩展库处理的 &php.ini; 指令，其文档分别在各扩展库的页面。<link
   linkend="ini">内核配置选项</link>见附录。不过也许不是所有的 PHP
   指令都在手册中有文档说明。要得到自己的 PHP 版本中的配置指令完整列表，请阅读
   &php.ini; 文件，其中都有注释。此外，也许从 CVS 得到的<link
   xlink:href="&url.php.cvs.phpini;">最新版 &php.ini;</link> 也有帮助。
  </para>
  <para>
   <example>
    <title>&php.ini; 例子</title>
    <programlisting role="ini">
<![CDATA[
; any text on a line after an unquoted semicolon (;) is ignored
[php] ; section markers (text within square brackets) are also ignored
; Boolean values can be set to either:
;    true, on, yes
; or false, off, no, none
register_globals = off
track_errors = yes

; you can enclose strings in double-quotes
include_path = ".:/usr/local/lib/php"

; backslashes are treated the same as any other character
include_path = ".;c:\php\lib"
]]>
    </programlisting>
    <!-- TODO: add more details about values and expressions -->
   </example>
  </para>
  <para>
   自 PHP 5.1.0 起，有可能在 .ini 文件内引用已存在的 .ini
   变量。例如：<literal>open_basedir = ${open_basedir}
   ":/new/dir"</literal>。
  </para>
 </sect1>

 <sect1 xml:id="configuration.changes">
  <title>怎样修改配置设定</title>

  <sect2 xml:id="configuration.changes.apache">
   <title>PHP 运行于 Apache 模块方式</title>
   <simpara>
    当使用 PHP 作为 Apache 模块时，也可以用 Apache
    的配置文件（例如 &httpd.conf;）和 &htaccess;
    文件中的指令来修改 PHP 的配置设定。需要有“AllowOverride
    Options”或“AllowOverride All”权限才可以。
   </simpara>

   <para>
    在 PHP 4 和 PHP 5 中，有几个 Apache 指令可以使用户在 Apache
    配置文件内部修改 PHP 的配置。哪些指令属于
    <constant>PHP_INI_ALL</constant>，<constant>PHP_INI_PERDIR</constant>
    或 <constant>PHP_INI_SYSTEM</constant> 中的哪一个，请参考附录中的
    <link linkend="ini.list">php.ini 配置选项列表</link>。
   </para>

   <note>
    <simpara>
     在 PHP 3 中，每个 <filename>php3.ini</filename> 中的配置设定都有相应的
     Apache 指令，不过名字前要加上前缀“php3_”。
    </simpara>
   </note>

   <para>
    <variablelist>
     <varlistentry>
      <term>
       <systemitem role="directive">php_value</systemitem>
       <parameter>name</parameter>
       <parameter>value</parameter>
      </term>
      <listitem>
       <para>
        设定指定的值。只能用于
        <constant>PHP_INI_ALL</constant> 或 <constant>PHP_INI_PERDIR</constant>
        类型的指令。要清除先前设定的值，把 value 设为 <literal>none</literal>。
       </para>
       <note>
        <simpara>
         不要用 <systemitem role="directive">php_value</systemitem> 设定布尔值。应该用
         <systemitem role="directive">php_flag</systemitem>（见下面）。
        </simpara>
       </note>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <systemitem role="directive">php_flag</systemitem>
       <parameter>name</parameter>
       <parameter>on|off</parameter>
      </term>
      <listitem>
       <para>
        用来设定布尔值的配置指令。仅能用于
        <constant>PHP_INI_ALL</constant> 和
        <constant>PHP_INI_PERDIR</constant> 类型的指令。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <systemitem role="directive">php_admin_value</systemitem>
       <parameter>name</parameter>
       <parameter>value</parameter>
      </term>
      <listitem>
       <para>
        设定指定的指令的值。<emphasis>不能用于</emphasis> &htaccess;
        文件。任何用 <systemitem role="directive">php_admin_value</systemitem>
        设定的指令都不能被 &htaccess; 或 virtualhost
        中的指令覆盖。要清除先前设定的值，把 value 设为 <literal>none</literal>。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <systemitem role="directive">php_admin_flag</systemitem>
       <parameter>name</parameter>
       <parameter>on|off</parameter>
      </term>
      <listitem>
       <para>
        用来设定布尔值的配置指令。<emphasis>不能用于</emphasis> &htaccess;
        文件。任何用 <systemitem role="directive">php_admin_flag</systemitem>
        设定的指令都不能被 &htaccess; 或 virtualhost
        中的指令覆盖。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
   <para>
    <example>
     <title>Apache 配置例子</title>
     <programlisting role="ini">
<![CDATA[
<IfModule mod_php5.c>
  php_value include_path ".:/usr/local/lib/php"
  php_admin_flag safe_mode on
</IfModule>
<IfModule mod_php4.c>
  php_value include_path ".:/usr/local/lib/php"
  php_admin_flag safe_mode on
</IfModule>
<IfModule mod_php3.c>
  php3_include_path ".:/usr/local/lib/php"
  php3_safe_mode on
</IfModule>
]]>
     </programlisting>
    </example>
   </para>
   <caution>
    <para>
     PHP 常量不存在于 PHP 之外。例如在
     &httpd.conf; 中不能使用 PHP 常量如
     <constant>E_ALL</constant> 或 <constant>E_NOTICE</constant> 来设定
     <link linkend="ini.error-reporting">error_reporting</link>
     指令，因为其无意义，实际等于
     <emphasis>0</emphasis>。应该用相应的掩码值来替代。这些常量可以在
     &php.ini; 中使用。
    </para>
   </caution>
  </sect2>

  <sect2 xml:id="configuration.changes.windows">
   <title>通过 Windows 注册表修改 PHP 配置</title>
    <simpara>
     在 Windows 下运行 PHP 时，可以用 Windows
     注册表以目录为单位来修改配置。配置值存放于注册表项
     <literal>HKLM\SOFTWARE\PHP\Per Directory Values</literal>
     下面，子项对应于路径名。例如对于目录
     <literal>c:\inetpub\wwwroot</literal> 的配置值会存放于
     <literal>HKLM\SOFTWARE\PHP\Per Directory Values\c\inetpub\wwwroot</literal>
     项下面。其中的设定对于任何位于此目录及其任何子目录的脚本都有效。项中的值的名称是
     PHP 配置指令的名字，值的数据是字符串格式的指令值。值中的 PHP
     常量不被解析。不过只有可修改范围是 PHP_INI_USER
     的配置值可以用此方法设定，PHP_INI_PERDIR 的值就不行。
    </simpara>
  </sect2>

  <sect2 xml:id="configuration.changes.other">
   <title>其它接口下的 PHP</title>
   <para>
    无论怎样运行 PHP，都可以在脚本中通过 <function>ini_set</function>
    而在运行时修改某个值。更多信息见手册中
    <function>ini_set</function> 的页面。
   </para>
   <para>
    如果对自己系统中的配置设定及其当前值的完整列表感兴趣，可以运行
    <function>phpinfo</function> 函数并查看其结果的页面。也可以在运行时用
    <function>ini_get</function> 或
    <function>get_cfg_var</function> 取得个别配置指令的值。
   </para>
  </sect2>
 </sect1>

</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
