<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision: 1.1 $ -->
<!-- $Author: dallas $ -->
<!-- EN-Revision: 1.8 Maintainer: dallas Status: ready -->

<chapter id="install.pecl">
 <title>PECL 扩展库安装</title>

 <sect1 id="install.pecl.intro">
  <title>PECL 安装介绍</title>
  <simpara>
   PHP 扩展库可以通过不同方式安装。<ulink url="&url.pecl;">PECL</ulink>
   是位于 <ulink url="&url.php.pear;">PEAR</ulink> 结构之下的
   PHP 扩展库仓库，下面示范了怎样安装这些扩展。
  </simpara>
  <simpara>
   以下指南中假定 <literal>/your/phpsrcdir/</literal> 是 PHP
   源程序的路径，<literal>extname</literal> 是 PECL
   扩展库的名字。自己根据实际情况调整。此外还假定用户熟悉
   <ulink url="&url.php.pear.cli;">pear 命令</ulink>。
  </simpara>
  <simpara>
   共享扩展库可以通过将其包括在 &php.ini; 中用
   <link linkend="ini.extension">extension</link> PHP 指令安装。参见
   <link linkend="ini.extension-dir">extensions_dir</link>
   指令以及 <function>dl</function>。以下说明的安装方法不会自动配置
   PHP 包括这些扩展库，必须手工完成这一步。
  </simpara>
  <simpara>
   当编译 PHP 模块时，具有所需工具（autoconf，automake，libtool
   等）的合适版本很重要。所需工具和所需版本的详情见<ulink
   url="&url.php.anoncvs;">匿名 CVS 说明</ulink>。
  </simpara>
 </sect1>

 <sect1 id="install.pecl.downloads">
  <title>下载 PECL 扩展库</title>
  <simpara>
   下载 PECL 扩展库有几种方法，如：
  </simpara>
  <itemizedlist>
   <listitem>
    <simpara>
     <ulink url="&url.pecl;">&url.pecl;</ulink>
    </simpara>
    <simpara>
     这里列出的有更新记录，版本说明，需求，修订等信息。虽然不是每个
     PECL 扩展库都有单独的 web 页面，但大部分都有。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <literal>pear download extname</literal>
    </simpara>
    <simpara>
     <ulink url="&url.php.pear.cli;">pear 命令</ulink>也可以用来下载源文件。也可以指明具体的修正版。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <acronym>CVS</acronym>
    </simpara>
    <simpara>
     所有的 PECL 文件都在 <acronym>CVS</acronym> 中。其 web 页面见
     <ulink url="&url.php.cvs;pecl/">&url.php.cvs;pecl/</ulink>。要直接从
     <acronym>CVS</acronym> 中下载，用以下命令，其中用户
     <emphasis>cvsread</emphasis> 的密码是 <emphasis>phpfi</emphasis>：
    </simpara>
    <para>
     <screen>
$ cvs -d:pserver:cvsread@cvs.php.net:/repository login
$ cvs -d:pserver:cvsread@cvs.php.net:/repository co pecl/extname
     </screen>
    </para>
   </listitem>
   <listitem>
    <simpara>
     Windows 下载
    </simpara>
    <simpara>
     Windows 用户可以通过在 <ulink url="&url.php.downloads;">PHP
     下载</ulink>页面下载 <emphasis>Collection of PECL modules</emphasis>
     来找到已编译的 PECL 可执行程序，或下载
     <ulink url="&url.php.snapshots;">PECL Snapshot</ulink>。要在
     Windows 下编译 PHP，请阅读
     <ulink url="&url.php.win32.build.readme;">Win32 Build README</ulink>。
    </simpara>
   </listitem>
  </itemizedlist>
 </sect1>

 <sect1 id="install.pecl.windows">
  <title>Windows 用户的 PECL</title>
  <simpara>
   和其它任何 PHP 扩展库的 <acronym>DLL</acronym> 一样，把
   PECL 扩展库的 DLL 移动到 <link linkend="ini.extension-dir">extension_dir</link>
   目录并将其包括入 &php.ini; 来安装。例如：
  </simpara>
  <para>
   <screen>
extension=php_extname.dll
   </screen>
  </para>
  <simpara>
   然后重新启动 web 服务器。
  </simpara>
 </sect1>

 <sect1 id="install.pecl.pear">
  <title>用 PEAR 编译共享 PECL 扩展库</title>
  <simpara>
   PEAR 使建立共享 PHP 扩展库更容易。用
   <ulink url="&url.php.pear.cli;">pear 命令</ulink>这样做：
  </simpara>
  <para>
   <screen>
$ pear install extname
   </screen>
  </para>
  <simpara>
   这将下载 <emphasis>extname</emphasis> 的源代码并将其编译入系统。这将产生一个
   <filename>extname.so</filename> 文件，应将其包括入 &php.ini; 中。
  </simpara>
  <simpara>
   在系统 <emphasis>preferred_state</emphasis> 设定高于可用的
   <emphasis>extname</emphasis> 版本的情况下，例如设定为 stable
   而扩展库还在 beta 时，要么通过 <literal>pear config-set</literal>
   修改 <emphasis>preferred_state</emphasis>，或者指定一个 PECL 扩展库的特定版本。例如：
  </simpara>
  <para>
   <screen>
$ pear install extname-0.1.1
   </screen>
  </para>
  <simpara>
   不管怎样，pear 都会将此 <filename>extname.so</filename> 文件拷贝到
   <link linkend="ini.extension-dir">extensions directory</link>。据此调整 &php.ini;。
  </simpara>
 </sect1>

 <sect1 id="install.pecl.phpize">
  <title>用 phpize 编译共享 PECL 扩展库</title>
  <simpara>
   如果不能用 pear，例如从 <acronym>CVS</acronym> 编译共享
   PECL 扩展库，或者尚未发布的 PECL 包，那么也可以用 <literal>phpize</literal>
   命令来手工创建共享扩展库。假定源程序文件名字为
   <filename>extname.tgz</filename> 并下载到了当前目录下，考虑下面的命令：
  </simpara>
  <para>
   <screen>
<![CDATA[
$ pear download extname
$ gzip -d < extname.tgz | tar -xvf -
$ cd extname
$ phpize
$ ./configure && make
]]>
   </screen>
  </para>
  <simpara>
   如果成功，这将创建 <filename>extname.so</filename> 并放置于
   <filename>extname/</filename> 源程序目录下的
   <filename>modules/</filename> 与／或 <filename>.libs/</filename>
   目录中。将此共享扩展库（<filename>extname.so</filename>）移动到
   PHP 的 <link linkend="ini.extension-dir">extensions directory</link>
   下并据此调整 &php.ini;。
  </simpara>
 </sect1>

 <sect1 id="install.pecl.static">
  <title>将 PECL 扩展库静态编译入 PHP</title>
  <simpara>
   要将扩展库静态编译到 PHP 中，将扩展库源程序放入 PHP
   源程序中的 <filename>ext/</filename> 目录中去。例如：
  </simpara>
  <para>
   <screen>
<![CDATA[
$ cd /your/phpsrcdir/ext
$ pear download extname
$ gzip -d < extname.tgz | tar -xvf -
$ mv extname-x.x.x extname
$ rm package.xml
]]>
   </screen>
  </para>
  <simpara>
   这将产生以下目录：
  </simpara>
  <para>
   <screen>
    /your/phpsrcdir/ext/extname
   </screen>
  </para>
  <simpara>
   然后正常编译 PHP：
  </simpara>
  <para>
   <screen>
$ cd /your/phpsrcdir
$ rm configure
$ ./buildconf --force
$ ./configure --help
$ ./configure --with-extname --enable-someotherext --with-foobar
$ make
$ make install
   </screen>
  </para>
  <note>
   <simpara>
    要运行“buildconf”脚本，需要 autoconf 2.13 和 automake 1.4+（更新版本的
    autoconf 也许能工作，但不被支持）。
   </simpara>
  </note>
  <simpara>
   是否用 <literal>--enable-extname</literal> 或 <literal>--with-extname</literal>
   取决于扩展库。通常不需要外部库文件的扩展库使用
   <literal>--enable</literal>。要确认的话，在 buildconf 之后运行：
  </simpara>
  <para>
   <screen>
$ ./configure --help | grep extname
   </screen>
  </para>
 </sect1>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
