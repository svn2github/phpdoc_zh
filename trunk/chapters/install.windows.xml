<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision: 1.8 $ -->
<!-- $Author: dallas $ -->
<!-- EN-Revision: 1.28 Maintainer: dallas Status: ready -->
  <sect1 id="install.windows">
   <title>Windows 系统下的安装</title>
   <para>
    本节内容适用于 Windows 98/Me 以及 Windows NT/2000/XP。PHP
    不能在16位平台例如 Windows 3.1 下运行。有时我们把支持 PHP 的 Windows 平台称为
    Win32。自 PHP 4.3.0 开始不再支持 Windows 95。
   </para>
   <para>
    有两种方法安装 PHP for Windows：<link
    linkend="install.windows.manual">手工安装</link>或者使用
    <link linkend="install.windows.installer">InstallShield</link> 安装。
   </para>
   <para>
    如果你有 Microsoft Visual Studio，也可以<link
    linkend="install.windows.build">编译</link> PHP 的源程序。
   </para>
   <para>
    一旦在 Windows 系统下安装好 PHP 之后，你可能需要<link
    linkend="install.windows.extensions">加载各种扩展库</link>以实现更多的功能。
   </para>
   
   <sect2 id="install.windows.installer">
    <title>Windows InstallShield</title>
    
    <para>
     Windows版的 PHP 安装程序可以从 <ulink url="&url.php.downloads;">&url.php.downloads;</ulink> 获得，此程序将安装
     <literal>PHP</literal> 的 <emphasis>CGI 版本</emphasis>，并且自动配置好 IIS，PWS 和 Xitami 三种 Web 服务器。
    </para>

    <note> 
     <para> 
      此外注意，尽管 InstallShield installer 是一种使 <literal>PHP</literal>
      运行起来的简单方法，但是有很多限制，例如不支持自动设置扩展库。只有下载
      zip 压缩包才包含了所有支持的扩展库。
     </para> 
    </note> 

    <simpara>
     安装好你选用的 <acronym>HTTP</acronym> 服务器并且确定工作正常。
    </simpara>
    
    <simpara>
     运行可执行的安装程序并按照安装向导的提示进行安装。安装程序支持两种安装方法
     － 标准，尽量提供最佳默认参数，高级，在安装过程中提问。
    </simpara>
    
    <simpara>
     安装向导收集足够的信息来配置 &php.ini; 文件并且配置 Web 服务器来使用
     PHP。在 NT Workstation 下的 IIS 和 PWS
     中，会列出服务器上所有节点的脚本映射，你可以在这些节点中选择哪些加入 PHP 的脚本映射。
    </simpara>

    <simpara>
     一旦安装结束，安装程序会提示是否需要重新启动系统。重启动服务器或者开始使用 PHP。
    </simpara>
    
    <warning>
     <para>
      注意，这样安装的 PHP 并不安全。如果你想要更安全的安装
      PHP，最好手工进行，并且小心地配置每个选项。自动进行的安装程序只是提供一个可以马上使用的
      PHP，并不意味着可以用在在线的服务器上。
     </para>
    </warning>
   
   </sect2>
   
   <sect2 id="install.windows.manual">
    <title>手工安装步骤</title>
    <simpara>
     本安装指南帮你手工安装和配置 PHP 到你的 Windows Webserver。你需要从
     <ulink url="&url.php.downloads;">&url.php.downloads;</ulink> 下载一个包含可执行版本的
     zip 包。本指南的原始版本由 &link.bob; 编辑，位于：<ulink
     url="&url.win32install;">&url.win32install;</ulink>。
    </simpara>
    <para>
     本指南提供以下的手工安装支持：
     <itemizedlist>
      <listitem>
       <para>
        Personal Web Server 3，4 或更新版本
       </para>
      </listitem>
      <listitem>
       <para>
        Internet Information Server 3，4 或更新版本
       </para>
      </listitem>
      <listitem>
       <para>
        Apache 1.3.x
       </para>
      </listitem> 
      <listitem>
       <para>
        OmniHTTPd 2.0b1 及以上版本
       </para>
      </listitem>
      <listitem>
       <para>
        Oreilly Website Pro
       </para>
      </listitem>
      <listitem>
       <para>
        Xitami
       </para>
      </listitem>
      <listitem>
       <para>
        Netscape Enterprise Server，iPlanet
       </para>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     PHP 4 for Windows 有两种方式 － CGI 版的可执行文件（php.exe），以及一些
     SAPI 模块（例如：php4isapi.dll）。后一种是 PHP 4
     新提供的方式，提供了显著的性能增长以及一些新功能。还有一个
     CLI 版本在<link linkend="features.commandline">PHP
     的命令行模式</link>一章中有进一步说明。
    </para>
    <warning>
     <simpara>
      SAPI 模块在 4.1 版中有了显著的增强，但是，在一些老系统中，你也许会遇到可能的服务器错误或者其他的模块例如 ASP 失败。
     </simpara>
    </warning>
    <simpara>
     如果你选择了其中一个 SAPI 模块并且是在 Windows 95 下使用，要确认从<ulink
     url="&url.dcom.update;">微软的 DCOM 页面</ulink>下载安装了 DCOM 更新。对于
     ISAPI 模块，需要 ISAPI 4.0 兼容的Web 服务器（在 IIS 4.0，PWS 4.0 以及 IIS 5.0
     下测试通过）。不支持 IIS 3.0。如果需要本地 PHP 支持，你需要下载和安装
     Windows NT 4.0 Option Pack With IIS 4.0。
    </simpara>
    <para>
     不论何种 Web 服务器，都需要先进行以下步骤：
     <itemizedlist>
      <listitem>
       <simpara>
        将 PHP 压缩包释放到你选择的目录中。<filename>c:\php\</filename>
        就不错。你可能不想用中间有空格的路径（例如：C:\Program Files\PHP
        就不太好），如果这样做有些 Web 服务器会崩溃。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        你需要确认 PHP 使用的 DLL 文件能被找到。具体涉及到哪些 DLL
        文件是根据你用哪种 Web 服务器和你是用 CGI 方式还是服务器模块方式使用
        PHP 来决定的。<filename>php4ts.dll</filename> 是一定要用的。如果你用服务器模块（例如
        ISAPI 或者 Apache）那你需要 <filename>sapi</filename> 目录下相关的 DLL 文件。如果你用了任何
        PHP 扩展库那你也需要那些 DLL 文件。为了确保 DLL
        文件能被找到，你可以要么把这些文件拷贝到 system 目录下（例如
        <filename>winnt\system32</filename> 或者
        <filename>windows\system</filename>），要么确认这些文件和
        PHP 的主要执行文件或者 Web 服务器使用的 DLL 文件在同一个目录下（例如
        <filename>php.exe</filename>，<filename>php4apache.dll</filename>）。 
       </simpara>
       <para>
        PHP 可执行文件，SAPI 模块和一些扩展库要依靠外部的 DLL
        文件来执行。需要确认这些 DLL 文件所在目录在 Windows
        的路径中。例如，如果你在 &php.ini; 中加载了
        <literal>php_oci8.dll</literal>，那你需要确认 Oracle
        目录包括在路径中以使 PHP 能够找到 <literal>oci.dll</literal>。
       </para> 
       <para> 
        最好把以下文件拷贝到你的 system 目录中，system
        目录通常为：
        <simplelist>
         <member>
          <filename>c:\windows\system</filename> for Windows 9x/ME
         </member>
         <member>
          <filename>c:\winnt\system32</filename> for Windows NT/2000
         </member>
         <member>
          <filename>c:\windows\system32</filename> for Windows XP
         </member>
        </simplelist>
        需要拷贝的文件是：
        <simplelist>
         <member>
          <filename>php4ts.dll</filename>，如果已经存在，则覆盖之。
         </member>
         <member>
          PHP发行包中 &apos;dlls&apos;
          目录下的所有文件。如果这些文件已经安装在你的系统中，仅在不能正确运行时才覆盖它们（在覆盖前，最好备份原来的文件，或者把原来的文件移动到别的文件夹中
          － 以防出错）。
         </member>
        </simplelist>
       </para>
       <para>
        下载最新版的 Microsoft Data Access Components（MDAC），尤其是使用
        Windows 9x/NT4 时。MDAC 位于 <ulink url="&url.mdac;">&url.mdac;</ulink>。
       </para>
      </listitem>
      <listitem>
       <para>
        拷贝你选中的 ini 文件（见下面）到你的 &apos;%WINDOWS%&apos; 目录下，如果使用的是
        Windows 9x/Me，或者到 &apos;%SYSTEMROOT%&apos; 目录下，如果使用的是
        Windows NT/2000/XP 并且改名为 &php.ini;。典型的 &apos;%WINDOWS%&apos;
        或者 &apos;%SYSTEMROOT%&apos; 目录为：
        <simplelist>
         <member><filename>c:\windows</filename> for Windows 9x/ME/XP</member>
         <member><filename>c:\winnt</filename> 或 <filename>c:\winnt40</filename> for NT/2000 servers</member>
        </simplelist>
       </para>  
       <para>
        在 PHP 的 zip 包中提供了两个版本的 ini 文件，<filename>php.ini-dist</filename>
        和 <filename>php.ini-optimized</filename>。我们建议你使用
        <filename>php.ini-optimized</filename>，因为我们优化了此文件中的默认设置以达到更佳性能与安全。最好仔细研究所有的
        <link linkend="configuration.file">ini 设置</link>并且自己手工设置每一项参数。如果你想达到最佳的安全性，那这正是为你准备的。当然了，PHP
        在默认的 ini 文件下也一样运行得很好。
       </para>
      </listitem>
      <listitem>
       <para>
        编辑你的新 &php.ini; 文件：
        <itemizedlist>
         <listitem>
          <simpara>
           你需要修改 'extension_dir' 设置以指向你安装 PHP 的目录，或者你放置那些
           <filename>php_*.dll</filename> 文件的目录。请注意最后有一个反斜线。例如：<filename>c:\php\extensions\</filename>
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           如果你使用 OmniHTTPd，不要进行这一步。设置 'doc_root' 指向你 Webserver 的
           document_root。例如：<filename>c:\apache\htdocs</filename>
           或者 <filename>c:\webroot</filename>
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           选择哪些扩展库你希望在 PHP 启动时加载。阅读 <link
           linkend="install.windows.extensions">Windows
           扩展库</link>部分学习如何加载，以及哪些是已经加载了的。注意在新安装
           PHP 时，建议先不要加载任何扩展库，先确认 PHP 运行正常之后再在 &php.ini; 中加载它们。
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           PHP 发行包的 <filename>browscap</filename> 目录下提供了一个
           <filename>browscap.ini</filename> 文件，你可以用它覆盖系统中原有的。在
           PWS 和 IIS 中，该文件在 Windows 9x/Me 下位于
           <filename>c:\windows\system\inetsrv\browscap.ini</filename>，在
           NT/2000 下位于 <filename>c:\winnt\system32\inetsrv\browscap.ini</filename>，在
           XP 下位于 <filename>c:\windows\system32\inetsrv\browscap.ini</filename>。
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           注意 Windows 版中的 <filename>mibs</filename> 目录包括了 SNMP
           的支持文件。该目录应该被移动到：<filename>DRIVE:\usr\mibs</filename>（<filename>DRIVE</filename>
           是安装了 PHP 的盘符）。
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           如果你在 Windows NT，2000 或者 XP 下使用了 NTFS，确认运行 Webserver 的用户对于
           &php.ini; 有读的权限（例如使其对所有人可读）。
          </simpara>
         </listitem>
        </itemizedlist>
       </para>
      </listitem>
      <listitem>
       <para>
        在 PWS 下给 webroot 执行的权限：
        <itemizedlist>
         <listitem>
          <simpara>
           启动“个人 Web 管理器”（PWS Web Manager）
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           选中“&lt;Home&gt;”，点击“编辑属性(E)”
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           选中“执行”（Execute）多选框
          </simpara>
         </listitem>
        </itemizedlist>
       </para>
      </listitem>
      

     </itemizedlist>
    </para>
   </sect2>

   <sect2 id="install.windows.build">
    <title>编译源程序</title>
    <para>
     开始之前，很值得回答一下这个问题：“为什么在 Windows 下编译这么难？”两个原因：
    </para>
    <orderedlist>
     <listitem>
      <simpara>
       Windows 下还没有愿意免费共享代码的开发人员群体。直接结果就是没有足够的投资去建立支持这种开发方式的体系。大体上，尽量做到的可用资源都是从
       UNIX 下的工具来的。不要奇怪这种传统不时会出现。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       下面几乎所有的说明都是“看过就忘”的类型。所以坐稳当并且尽可能忠实地按照说明来做。
      </simpara>
     </listitem>
    </orderedlist>

    <sect3 id="install.windows.build.requirement">
     &reftitle.required;
     <para>
      要编译 <literal>PHP</literal> 你需要 Microsoft 开发环境。推荐使用
      Microsoft Visuaul C++
      6.0。要释放下载的文件还需要一个解压缩工具（例如：Winzip）。如果你还没有解压缩的工具，可以从
      <ulink url="&url.infozip;">InfoZip</ulink> 免费下载一个。
     </para>
     <para>
      在开始之前，你需要下载...
     </para>
     <itemizedlist>
      <listitem>
       <simpara>
        PHP 站点中 <ulink url="&url.win32.buildtools;">&url.win32.buildtools;</ulink>
        的 win32 编译工具。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        PHP 使用的 DNS 解析器的源代码：<ulink
        url="&url.win32.dnsresolver;">&url.win32.dnsresolver;</ulink>。用这个替代
        <filename>win32build.zip</filename> 中的 <filename>resolv.lib</filename>。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        如果你计划把 PHP 编译成 Apache 的静态模块那你还需要
        <ulink url="&url.apache.source;">Apache 源程序</ulink>。
       </simpara>
      </listitem>
     </itemizedlist>
     <simpara>
      最后，你还需要 PHP 4 的源代码。你可以通过<ulink
      url="&url.php.anoncvs;">匿名 CVS</ulink> 得到最新的开发版本，一个<ulink
      url="&url.php.snapshots;">快照</ulink>或者最新发行版本的<ulink
      url="&url.php.downloads;">源程序</ulink>的打包文件。
     </simpara>
    </sect3>

    <sect3 id="install.windows.build.install">
     <title>放到一起</title>
     <para>
      下载了所有的包后需要将他们解压缩到适当的位置。
      <itemizedlist>
       <listitem>
        <simpara>
         建立一个工作目录作为解压缩后存放所有文件的地方，例如：<filename>c:\work</filename>。
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         在你的工作目录（<filename>c:\work</filename>）下新建一个目录
         <filename>win32build</filename> 并将 <filename>win32build.zip</filename>
         解压缩到其中。
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         在你的工作目录（<filename>c:\work</filename>）下新建一个目录
         <filename>bindlib_w32</filename> 并将 <filename>bindlib_w32.zip</filename>
         解压缩到其中。
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         将下载的 PHP 源程序解压缩到工作目录（<filename>c:\work</filename>）中。
        </simpara>
       </listitem>
      </itemizedlist>
      经过这些步骤后你的目录结构应该如下：
      <informalexample>
       <programlisting>
<![CDATA[  

+--c:\work  
|  |  
|  +--bindlib_w32  
|  |  |  
|  |  +--arpa  
|  |  |  
|  |  +--conf  
|  |  |  
|  |  +--...  
|  |  
|  +--php-4.x.x  
|  |  |  
|  |  +--build  
|  |  |  
|  |  +--...  
|  |  |  
|  |  +--win32  
|  |  |  
|  |  +--...  
|  |  
|  +--win32build  
|  |  |  
|  |  +--bin  
|  |  |  
|  |  +--include  
|  |  |  
|  |  +--lib  
  
]]>  
       </programlisting>  
      </informalexample>  
      新建一个目录 <filename>c:\usr\local\lib</filename>。将
      <filename>c:\work\win32build\bin</filename> 中的
      <filename>bison.simple</filename> 拷贝到
      <filename>c:\usr\local\lib</filename>中去。
     </para>  
     <note>  
      <simpara>  
       <ulink url="&url.cygwin;">Cygwin</ulink> 用户应该忽略最后一步。正确安装的
       Cygwin 环境已经提供了 <filename>bison.simple</filename> 和
       <filename>bison.exe</filename> 文件。
      </simpara>  
     </note>  
    </sect3>  
  
    <sect3 id="install.windows.build.configure">  
     <title>配置 MVC ++</title>  
     <para>  
      下一步是配置 MVC ++ 来准备编译。运行 Microsoft Visual
      C++，在菜单中选择 Tools =&gt; Options。在对话框中，选择
      directories 标签。依次将下拉框改为 Executables，Includes 和
      Library files。将其修改为：
      <itemizedlist>
       <listitem>
        <simpara>
         Executable files: <filename>c:\work\win32build\bin</filename>，
         Cygwin 用户：<filename>cygwin\bin</filename>
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Include files: <filename>c:\work\win32build\include</filename>
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Library files: <filename>c:\work\win32build\lib</filename>
        </simpara>
       </listitem>
      </itemizedlist>
     </para>
    </sect3>

    <sect3 id="install.windows.build.resolvlib">
     <title>Build resolv.lib</title>
     <para>
      必须编译 <filename>resolv.lib</filename> 库。自己决定是需要调试信息（bindlib
      - Win32 Debug）还是不需要（bindlib - Win32 Release）。编译适当的配置：
      <itemizedlist>
       <listitem>
        <simpara>
         图形界面用户，运行 VC++，选择 File =&gt; Open Workspace，找到
         <filename>c:\work\bindlib_w32</filename> 目录并选择
         <filename>bindlib.dsw</filename> 文件。
         菜单并选择 bindlib。接着选择 Build =&gt; Set Active Configuration
         菜单并选择需要的配置。最后选择 Build =&gt; Rebuild All。
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         命令行用户，确认你要么注册了 C++ 环境变量，要么运行了
         <command>vcvars.bat</command>，然后运行下面任意一个：
        </simpara>
        <itemizedlist>
         <listitem>
          <simpara>
           <userinput>msdev bindlib.dsp /MAKE "bindlib - Win32 Debug"</userinput>
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           <userinput>msdev bindlib.dsp /MAKE "bindlib - Win32 Release"</userinput>
          </simpara>
         </listitem>
        </itemizedlist>
       </listitem>
      </itemizedlist>
      到这一步，你应该得到一个 <filename>resolv.lib</filename> 在你的
      <filename>c:\work\bindlib_w32\Debug</filename> 或者 <filename>Release</filename>
      目录下。拷贝此文件到 <filename>c:\work\win32build\lib</filename>
      目录下并且覆盖同名的文件。
     </para>
    </sect3>

    <sect3 id="install.windows.build.compile">
     <title>编译</title>
     <simpara>
      对于初学者最好的上手方法是编译 CGI 版本。
     </simpara>
     <itemizedlist>
      <listitem>
       <simpara>
        图形界面用户，运行 VC++，选择 File =&gt; Open Workspace 菜单并选择
        <filename>c:\work\php-4.x.x\win32\php4ts.dsw</filename>。接着选择
        Build =&gt; Set Active Configuration 菜单并选择想要的配置，要么
        <literal>php4ts - Win32 Debug_TS</literal> 或者是
        <literal>php4ts - Win32 Release_TS</literal>。最后选择
        Build =&gt; Rebuild All。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        命令行用户，确认你要么注册了 C++ 环境变量，要么运行了
        <command>vcvars.bat</command>，然后在
        <filename>c:\work\php-4.x.x\win32</filename> 目录下运行下面任意一个命令：
       </simpara>
       <itemizedlist>
        <listitem>
         <simpara>
          <userinput>msdev php4ts.dsp /MAKE "php4ts - Win32 Debug_TS"</userinput>
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <userinput>msdev php4ts.dsp /MAKE "php4ts - Win32 Release_TS"</userinput>
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          到这一步，你应该得到一个可用的 <filename>php.exe</filename> 在你的
          <filename>c:\work\php-4.x.x.\Debug_TS</filename> 或者
          <filename>Release_TS</filename> 目录下。
         </simpara>
        </listitem>
       </itemizedlist>
      </listitem>
     </itemizedlist>
     <simpara>
      有可能通过编辑 <filename>main/config.win32.h.in</filename>
      文件对编译做少量的定制。例如你可以修改内置的扩展库，或者
      &php.ini; 文件的位置。
     </simpara>
     <simpara>
      下一步你可能想要编译 CLI 版本，这是设计用于
      <link linkend="features.commandline">PHP 的命令行方式</link>。步骤和编译
      CGI 版本相同，只除了要选择 <literal>php4ts_cli - Win32 Debug_TS</literal>
      或者 <literal>php4ts_cli - Win32 Release_TS</literal>
      工程文件。在成功编译之后你会在 <filename>Release_TS\cli\</filename>
      或者 <filename>Debug_TS\cli\</filename> 目录下发现 <filename>php.exe</filename> 文件。
     </simpara>
     <note>
      <simpara>
       如果你想使用 PEAR 或者舒适的命令行安装程序，就非要用 CLI-SAPI。有关
       PEAR 和安装程序的更多信息见 <ulink url="&url.php.pear;manual/">PEAR</ulink>
       网站文档。
      </simpara>
     </note>
     <simpara>
      要编译 SAPI 模块（<filename>php4isapi.dll</filename>）来将 PHP 和
      Microsoft IIS 集成起来，将激活的配置设为
      <filename>php4isapi-whatever-config</filename> 并编译所需要的 dll。
     </simpara>
    </sect3>
   </sect2>
   
   <sect2 id="install.windows.extensions">
    <title>Windows 扩展库的安装</title>
    <para>
     在安装好 PHP 和 Webserver 之后，你可能想安装一些扩展库以增加功能。下表说明了一些可用的扩展库。你可以通过去掉
     &php.ini; 中 'extension=php_*.dll' 前面的注释来选择哪些扩展库在
     PHP 启动时被加载。你也可以在程序中用 <function>dl</function> 函数动态加载。
    </para>
    <para>
     PHP 4 扩展库的 DLL 文件开头都是 'php_'（PHP 3 中是 'php3_' ）。这避免了
     PHP 扩展库和它们的支持库混淆。
    </para>
    <note>
     <para>
       在PHP 4.3.1 版中 BCMath，Calendar，COM，Ctype，FTP，MySQL，ODBC，Overload，PCRE，Session，Tokenizer，WDDX，XML
       和 Zlib 的支持都是<emphasis>内置</emphasis>的。不需要加载任何扩展库就可以使用这些函数。你可以查看自己的版本中的
       <filename>README.txt</filename> 或者 <filename>install.txt</filename> 文件哪些模块是内置的。
     </para>
    </note>

    <note>
     <para>
      一些扩展库需要其它的 DLL 文件支持才能运行。有几个在发行包的 &apos;dlls&apos;
      目录下。但是有一些，例如 Oracla（php_oci8.dll）所需要的 DLL 文件并没有包括在发行包中。
     </para>

     <para>
      把 &apos;DLLs&apos; 目录下绑定的 DLL 文件拷贝到 Windows 路径中的目录中。安全的地方有：
      <simplelist>
       <member>c:\windows\system for Windows 9x/Me</member>
       <member>c:\winnt\system32 for Windows NT/2000</member>
       <member>c:\windows\system32 for Windows XP</member>
      </simplelist>
      如果这些文件已经安装在你的系统中，仅在不能正确运行时才覆盖它们（在覆盖前，最好备份原来的文件，或者把原来的文件移动到别的文件夹中 － 以防出错)。
     </para>
    </note>

    <para>
     <table>
      <title>PHP 扩展库</title>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>库名</entry>
         <entry>说明</entry>
         <entry>注意</entry>
        </row>
       </thead>
       <tbody>
  <row>
   <entry>php_bz2.dll</entry>
   <entry><link linkend="ref.bzip2">bzip2</link> 压缩函数库</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php_calendar.dll</entry>
   <entry><link linkend="ref.calendar">Calendar</link> 转换函数库</entry>
   <entry>自 PHP 4.0.3 起内置</entry>
  </row>
  <row>
   <entry>php_cpdf.dll</entry>
   <entry><link linkend="ref.cpdf">ClibPDF</link> 函数库</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php_crack.dll</entry>
   <entry><link linkend="ref.crack">Crack</link> 函数库</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php3_crypt.dll</entry>
   <entry>加密函数库</entry>
   <entry>未知</entry>
  </row>
  <row>
   <entry>php_ctype.dll</entry>
   <entry><link linkend="ref.ctype">ctype</link> 族函数库</entry>
   <entry>自 PHP 4.3.0 起内置</entry>
  </row>
  <row>
   <entry>php_curl.dll</entry>
   <entry><link linkend="ref.curl">CURL</link>，客户端 URL 函数库</entry>
   <entry>需要：libeay32.dll，ssleay32.dll（已包含）</entry>
  </row>
  <row>
   <entry>php_cybercash.dll</entry>
   <entry><link linkend="ref.cybercash">Cybercash</link> 支付函数库</entry>
   <entry>PHP &lt;= 4.2.0</entry>
  </row>
  <row>
   <entry>php_db.dll</entry>
   <entry><link linkend="ref.dbm">DBM</link> 函数库</entry>
   <entry>不赞成使用。用 DBA 代替（php_dba.dll）</entry>
  </row>
  <row>
   <entry>php_dba.dll</entry>
   <entry><link linkend="ref.dba">DBA</link>：数据库（dbm-style）抽象层函数库</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php_dbase.dll</entry>
   <entry><link linkend="ref.dbase">dBase</link> 函数库</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php3_dbm.dll</entry>
   <entry>Berkeley DB2 库</entry>
   <entry>未知</entry>
  </row>
  <row>
   <entry>php_dbx.dll</entry>
   <entry><link linkend="ref.dbx">dbx</link> 函数库</entry>
   <entry></entry>
  </row>
  <row>
   <entry>php_domxml.dll</entry>
   <entry><link linkend="ref.domxml">DOM XML</link> 函数库</entry>
   <entry>PHP &lt;= 4.2.0，需要：libxml2.dll（已包含）</entry>
  </row>
  <row>
   <entry>php_dotnet.dll</entry>
   <entry><link linkend="ref.dotnet">.NET</link> 函数库</entry>
   <entry>PHP &lt;= 4.1.1</entry>
  </row>
  <row>
   <entry>php_exif.dll</entry>
   <entry>从 JPEG <link linkend="function.read-exif-data">读取 EXIF</link> 头信息</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php_fbsql.dll</entry>
   <entry><link linkend="ref.fbsql">FrontBase</link> 函数库</entry>
   <entry>PHP &lt;= 4.2.0</entry>
  </row>
  <row>
   <entry>php_fdf.dll</entry>
   <entry><link linkend="ref.fdf">FDF</link>：表单数据格式化函数库.</entry>
   <entry>需要：fdftk.dll （已包含）</entry>
  </row>
  <row>
   <entry>php_filepro.dll</entry>
   <entry><link linkend="ref.filepro">filePro</link> 函数库</entry>
   <entry>只读访问</entry>
  </row>
  <row>
   <entry>php_ftp.dll</entry>
   <entry><link linkend="ref.ftp">FTP</link> 函数库</entry>
   <entry>自 PHP 4.0.3 起内置</entry>
  </row>
  <row>
   <entry>php_gd.dll</entry>
   <entry><link linkend="ref.image">GD</link> 库图像处理函数库</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php_gd2.dll</entry>
   <entry><link linkend="ref.image">GD2</link> 库图像函数库</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php_gettext.dll</entry>
   <entry><link linkend="ref.gettext">Gettext</link> 函数库</entry>
   <entry>
    PHP &lt;= 4.2.0 需要：gnu_gettext.dll（已包含），PHP &gt;= 4.2.3
    需要 libintl-1.dll（已包含）
   </entry>
  </row>
  <row>
   <entry>php_hyperwave.dll</entry>
   <entry><link linkend="ref.hyperwave">HyperWave</link> 函数库</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php_iconv.dll</entry>
   <entry><link linkend="ref.iconv">ICONV</link> 字符集转换</entry>
   <entry>需要：iconv-1.3.dll（已包含），PHP &gt;=4.2.1 需要 iconv.dll</entry>
  </row>
  <row>
   <entry>php_ifx.dll</entry>
   <entry><link linkend="ref.ifx">Informix</link> 函数库</entry>
   <entry>需要：Informix 库文件</entry>
  </row>
  <row>
   <entry>php_iisfunc.dll</entry>
   <entry>IIS 管理函数库</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php_imap.dll</entry>
   <entry><link linkend="ref.imap">IMAP</link> POP3 和 NNTP 函数库</entry>
   <entry>PHP 3：php3_imap4r1.dll</entry>
  </row>
  <row>
   <entry>php_ingres.dll</entry>
   <entry><link linkend="ref.ingres">Ingres II</link> 函数库</entry>
   <entry>需要：Ingres II 库文件</entry>
  </row>
  <row>
   <entry>php_interbase.dll</entry>
   <entry><link linkend="ref.ibase">InterBase</link> 函数库</entry>
   <entry>需要：gds32.dll（已包含）</entry>
  </row>
  <row>
   <entry>php_java.dll</entry>
   <entry><link linkend="ref.java">Java</link> 函数库</entry>
   <entry>PHP &lt;= 4.0.6 需要：jvm.dll（已包含）</entry>
  </row>
  <row>
   <entry>php_ldap.dll</entry>
   <entry><link linkend="ref.ldap">LDAP</link> 函数库</entry>
   <entry>
    PHP &lt;= 4.2.0 需要：libsasl.dll（已包含），PHP &gt;= 4.3.0
    需要 libeay32.dll，ssleay32.dll（已包含）
   </entry>
  </row>
  <row>
   <entry>php_mbstring.dll</entry>
   <entry><link linkend="ref.mbstring">多字节字符串</link>函数库</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php_mcrypt.dll</entry>
   <entry><link linkend="ref.mcrypt">Mcrypt 加密</link>函数库</entry>
   <entry>需要：libmcrypt.dll</entry>
  </row>
  <row>
   <entry>php_mhash.dll</entry>
   <entry><link linkend="ref.mhash">Mhash</link> 函数库</entry>
   <entry>PHP &gt;= 4.3.0 需要：libmhash.dll（已包含）</entry>
  </row>
  <row>
   <entry>php_mime_magic.dll</entry>
   <entry><link linkend="ref.mime-magic">Mimetype</link> 函数库</entry>
   <entry>需要：<filename>magic.mime</filename>（已包含）</entry>
  </row>
  <row>
   <entry>php_ming.dll</entry>
   <entry><link linkend="ref.ming">Ming</link> 函数库 － Flash 支持</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php_msql.dll</entry>
   <entry><link linkend="ref.msql">mSQL</link> 函数库</entry>
   <entry>需要：msql.dll（已包含）</entry>
  </row>
  <row>
   <entry>php3_msql1.dll</entry>
   <entry>mSQL 1 客户端</entry>
   <entry>未知</entry>
  </row>
  <row>
   <entry>php3_msql2.dll</entry>
   <entry>mSQL 2 客户端</entry>
   <entry>未知</entry>
  </row>
  <row>
   <entry>php_mssql.dll</entry>
   <entry><link linkend="ref.mssql">MSSQL</link> 函数库</entry>
   <entry>需要：ntwdblib.dll（已包含）</entry>
  </row>
  <row>
   <entry>php3_mysql.dll</entry>
   <entry><link linkend="ref.mysql">MySQL</link> 函数库</entry>
   <entry>自 PHP 4 起内置</entry>
  </row>
  <row>
   <entry>php3_nsmail.dll</entry>
   <entry>Netscape 邮件函数库</entry>
   <entry>未知</entry>
  </row>
  <row>
   <entry>php3_oci73.dll</entry>
   <entry>Oracle 函数库</entry>
   <entry>未知</entry>
  </row>
  <row>
   <entry>php_oci8.dll</entry>
   <entry><link linkend="ref.oci8">Oracle 8</link> 函数库</entry>
   <entry>需要：Oracle 8 客户端库文件</entry>
  </row>
  <row>
   <entry>php_openssl.dll</entry>
   <entry><link linkend="ref.openssl">OpenSSL</link> 函数库</entry>
   <entry>需要：libeay32.dll（已包含）</entry>
  </row>
  <row>
   <entry>php_oracle.dll</entry>
   <entry><link linkend="ref.oracle">Oracle</link> 函数库</entry>
   <entry>需要：Oracle 7 客户端库文件</entry>
  </row>
  <row>
   <entry>php_overload.dll</entry>
   <entry><link linkend="ref.overload">对象重载</link>函数库</entry>
   <entry>自 PHP 4.3.0 内置</entry>
  </row>
  <row>
   <entry>php_pdf.dll</entry>
   <entry><link linkend="ref.pdf">PDF</link> 函数库</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php_pgsql.dll</entry>
   <entry><link linkend="ref.pgsql">PostgreSQL</link> 函数库</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php_printer.dll</entry>
   <entry><link linkend="ref.printer">Printer</link> 函数库</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php_shmop.dll</entry>
   <entry><link linkend="ref.shmop">共享内存</link>函数库</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php_snmp.dll</entry>
   <entry><link linkend="ref.snmp">SNMP</link> 函数库</entry>
   <entry>仅在 NT 下使用！</entry>
  </row>
  <row>
   <entry>php_sockets.dll</entry>
   <entry><link linkend="ref.sockets">Socket</link> 函数库</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php_sybase_ct.dll</entry>
   <entry><link linkend="ref.sybase">Sybase</link> 函数库</entry>
   <entry>需要：Sybase 客户端库文件</entry>
  </row>
  <row>
   <entry>php_tokenizer.dll</entry>
   <entry><link linkend="ref.tokenizer">Tokenizer</link> 函数库</entry>
   <entry>自 PHP 4.3.0 起内置</entry>
  </row>
  <row>
   <entry>php_w32api.dll</entry>
   <entry><link linkend="ref.w32api">W32api</link> 函数库</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php_xmlrpc.dll</entry>
   <entry><link linkend="ref.xmlrpc">XML-RPC</link> 函数库</entry>
   <entry>PHP &gt;= 4.2.1 需要：iconv.dll（已包含）</entry>
  </row>
  <row>
   <entry>php_xslt.dll</entry>
   <entry><link linkend="ref.xslt">XSLT</link> 函数库</entry>
   <entry>需要：sablot.dll，expat.dll（已包含）</entry>
  </row>
  <row>
   <entry>php_yaz.dll</entry>
   <entry><link linkend="ref.yaz">YAZ</link> 函数库</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php_zlib.dll</entry>
   <entry><link linkend="ref.zlib">ZLib</link> 压缩函数库</entry>
   <entry>自 PHP 4.3.0 起内置</entry>
  </row>
       </tbody>
      </tgroup>
     </table>
    </para>
   </sect2>
  </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
