<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision: 1.9 $ -->
<!-- $Author: dallas $ -->
<!-- EN-Revision: 1.29 Maintainer: dallas Status: ready -->
  <sect1 id="install.windows">
   <title>Windows 系统下的安装</title>
   <para>
    本节内容适用于 Windows 98/Me 以及 Windows NT/2000/XP。PHP
    不能在16位平台例如 Windows 3.1 下运行。有时我们把支持 PHP 的 Windows 平台称为
    Win32。自 PHP 4.3.0 开始不再支持 Windows 95。
   </para>
   <para>
    有两种方法安装 PHP for Windows：<link
    linkend="install.windows.manual">手工安装</link>或者使用
    <link linkend="install.windows.installer">InstallShield</link> 安装。
   </para>
   <para>
    如果你有 Microsoft Visual Studio，也可以<link
    linkend="install.windows.build">编译</link> PHP 的源程序。
   </para>
   <para>
    一旦在 Windows 系统下安装好 PHP 之后，你可能需要<link
    linkend="install.windows.extensions">加载各种扩展库</link>以实现更多的功能。
   </para>

   <sect2 id="install.windows.installer">
    <title>Windows InstallShield</title>

    <para>
     Windows版的 PHP 安装程序可以从 <ulink url="&url.php.downloads;">&url.php.downloads;</ulink> 获得，此程序将安装
     <literal>PHP</literal> 的 <emphasis>CGI 版本</emphasis>，并且自动配置好 IIS，PWS 和 Xitami 三种 Web 服务器。
    </para>

    <note>
     <para>
      此外注意，尽管 InstallShield installer 是一种使 <literal>PHP</literal>
      运行起来的简单方法，但是有很多限制，例如不支持自动设置扩展库。只有下载
      zip 压缩包才包含了所有支持的扩展库。
     </para>
    </note>

    <simpara>
     安装好你选用的 <acronym>HTTP</acronym> 服务器并且确定工作正常。
    </simpara>

    <simpara>
     运行可执行的安装程序并按照安装向导的提示进行安装。安装程序支持两种安装方法
     － 标准，尽量提供最佳默认参数，高级，在安装过程中提问。
    </simpara>

    <simpara>
     安装向导收集足够的信息来配置 &php.ini; 文件并且配置 Web 服务器来使用
     PHP。在 NT Workstation 下的 IIS 和 PWS
     中，会列出服务器上所有节点的脚本映射，你可以在这些节点中选择哪些加入 PHP 的脚本映射。
    </simpara>

    <simpara>
     一旦安装结束，安装程序会提示是否需要重新启动系统。重启动服务器或者开始使用 PHP。
    </simpara>

    <warning>
     <para>
      注意，这样安装的 PHP 并不安全。如果你想要更安全的安装
      PHP，最好手工进行，并且小心地配置每个选项。自动进行的安装程序只是提供一个可以马上使用的
      PHP，并不意味着可以用在在线的服务器上。
     </para>
    </warning>

   </sect2>

   <sect2 id="install.windows.manual">
    <title>手工安装步骤</title>
    <simpara>
     本安装指南帮你手工安装和配置 PHP 到你的 Windows Webserver。本指南的原始版本由
     &link.bob; 编译，位于
     <ulink url="&url.win32install;">&url.win32install;</ulink>。你需要从
     <ulink url="&url.php.downloads;">&url.php.downloads;</ulink> 下载一个包含可执行版本的
     zip 包。
    </simpara>
    <para>
     PHP 4 的 Windows 版有三种方式 - CGI 可执行程序（php.exe），CLI
     可执行程序（sapi/php.exe） 和其它一些 SAPI 模块：
     <simplelist>
      <member>
       <filename>php4apache.dll</filename> - Apache 1.3.x 模块
      </member>
      <member>
       <filename>php4apache2.dll</filename> - Apache 2.0.x 模块
      </member>
      <member>
       <filename>php4isapi.dll</filename> - ISAPI 兼容服务器的 ISAPI
       模块，例如 IIS 4.0/PWS 4.0 或更新版本
      </member>
      <member>
       <filename>php4nsapi.dll</filename> - Netscape/iPlanet 模块
      </member>
     </simplelist>
     最后一种是 PHP 4
     新提供的方式，提供了显著的性能增长以及一些新功能。还有一个
     CLI 版本在<link linkend="features.commandline">PHP
     的命令行模式</link>一章中有进一步说明。
    </para>
    <warning>
     <simpara>
      SAPI 模块在 4.1 版中有了显著的增强，但是，在一些老系统中，你也许会遇到可能的服务器错误或者其他的模块例如 ASP 失败。
     </simpara>
    </warning>
    <note>
     <title>DCOM and MDAC requirements</title>
     <para>
      如果你选择了其中一个 SAPI 模块并且是在 <emphasis>Windows 95</emphasis> 下使用，要确认从<ulink
      url="&url.dcom.update;">微软的 DCOM 页面</ulink>下载安装了 DCOM
      更新。如果使用 <emphasis>Windows 9x/NT4</emphasis>，需要下载最新版本的
      Microsoft Data Access Components (MDAC)，位于
      <ulink url="&url.mdac;">&url.mdac;</ulink>。
     </para>
    </note>
    <para>
     不论何种 Web 服务器，都需要先进行以下步骤：
     <itemizedlist>
      <listitem>
       <simpara>
        将 PHP 压缩包释放到你选择的目录中。<filename>c:\</filename>
        就不错。压缩包会被释放到一个类似
        <filename>php-4.3.1-Win32</filename> 的新目录中，该目录最好被改名为
        <filename>php</filename>。为方便以及版本无关起见，以下步骤中假定
        PHP 位于 <filename>c:\php</filename>
        中。可以选择其它的路径但最好不要用中间有空格的路径（例如：C:\Program Files\PHP
        就不太好），如果这样做有些 Web 服务器会崩溃。解压缩后的
        PHP 目录结构看上去像这样：
       </simpara>
      </listitem>
     </itemizedlist>
     <informalexample>
      <programlisting>
<![CDATA[
c:\php
   |
   +--cli
   |  |
   |  |-php.exe           -- CLI 可执行程序 - 仅用于命令行脚本
   |
   |
   +--dlls                -- 支持扩展库的 dll --> Windows 系统目录
   |  |
   |  |-expat.dll
   |  |
   |  |-fdftk.dll
   |  |
   |  |-...
   |
   +--extensions          -- PHP 扩展库的 dll
   |  |
   |  |-php_bz2.dll
   |  |
   |  |-php_cpdf.dll
   |  |
   |  |-..
   |
   +--mibs                -- SNMP 的支持文件
   |
   |
   +--openssl             -- Openssl 的支持文件
   |
   |
   +--pdf-related         -- PDF 的支持文件
   |
   |
   +--sapi                -- SAPI dlls
   |  |
   |  |-php4apache.dll
   |  |
   |  |-php4apache2.dll
   |  |
   |  |-php4isapi.dll
   |  |
   |  |-..
   |
   |-install.txt
   |
   |-..
   |
   |-php.exe              -- CGI 可执行程序
   |
   |-..
   |
   |-php.ini-dist
   |
   |-php.ini-recommended
   |
   |-php4ts.dll           -- 主 dll --> Windows 系统目录
   |
   |-...
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     CGI 程序 - <filename>C:/php/php.exe</filename> -，CLI 程序
     - <filename>c:\php\cli\php.exe</filename> -，和 SAPI 模块
     - <filename>c:\php\sapi\*.dll</filename> - 依赖于主 dll
     <filename>c:\php\php4ts.dll</filename>。必须确认此
     dll 可以被 PHP 找到。寻找此 dll 的顺序如下：
     <simplelist>
      <member>
       调用 <filename>php.exe</filename> 的目录。如果是用
       SAPI 模块则为 webserver 调用 dll 的目录（例如 <filename>php4apache.dll</filename>）。
      </member>
      <member>
       Windows 路径环境变量 PATH 中的任何目录。
      </member>
     </simplelist>
     <itemizedlist>
      <listitem>
       <para>
        最好是无论使用何种接口（CGI 或者
        SAPI）都确保 <filename>php4ts.dll</filename>
        可用，因此必须将此文件放到 Windows 路径中。最好的位置是
        Windows 的 system 目录：
        <simplelist>
         <member>
          <filename>c:\windows\system</filename> for Windows 9x/ME
         </member>
         <member>
          <filename>c:\winnt\system32</filename> for Windows NT/2000 或者
          <filename>c:\winnt40\system32</filename> for Windows NT/2000 服务器版
         </member>
         <member>
          <filename>c:\windows\system32</filename> for Windows XP
         </member>
        </simplelist>
        如果计划在 <filename>c:\php\sapi</filename> 目录下使用
        SAPI 模块而不想把 dll 文件拷贝到 Windows 的 system
        目录，则可以将 <filename>php4ts.dll</filename>
        拷贝到 sapi 目录下：<filename>c:\php\sapi</filename>。
       </para>
      </listitem>
      <listitem>
       <para>
        下一步是设定有效的 PHP 配置文件，&php.ini;。压缩包中包括两个 ini
        文件，<filename>php.ini-dist</filename> 和
        <filename>php.ini-recommended</filename>。建议使用
        <filename>php.ini-recommended</filename>，因为此文件对默认设置作了性能和安全上的优化。仔细阅读此文件中的说明并研究
        <link linkend="configuration.file">ini 设置</link>
        一章来亲自人工设定每个项目。如果要达到最佳的安全效果，则最好用这个文件，尽管
        PHP 在默认的 ini 文件下也工作的很好。将选择的 ini
        文件拷贝到 PHP 能够找到的目录下并改名为
        &php.ini;。PHP 默认在 Windows 目录下搜索 &php.ini;：
        <simplelist>
         <member>
          在 Windows 9x/ME/XP 下将选择的 ini 文件拷贝到
          <filename> %WINDIR%</filename>，通常为 <filename>c:\windows</filename>。
         </member>
         <member>
          在 Windows NT/2000 下将选择的 ini 文件拷贝到
          <filename> %WINDIR%</filename> 或 <filename>%SYSTEMROOT%</filename>
          下，通常为 <filename>c:\winnt</filename> 或
          <filename>c:\winnt40</filename> 对应于服务器版本。
         </member>
        </simplelist>
       </para>
      </listitem>
      <listitem>
       <simpara>
        如果在 Windows NT，2000 或 XP 中使用了
        NTFS，确保运行 webserver 的用户名对
        &php.ini; 有读取的权限（例如使其对 Everyone 可读）。
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     以下步骤为可选项。
     <itemizedlist>
      <listitem>
       <para>
        编辑 &php.ini; 文件。如果计划用
        <link linkend="install.omnihttpd">OmniHTTPd</link>，不要进行下一步。将
        <link linkend="ini.doc-root">doc_root</link>
        指向 webserver 的 document_root。例如：
        <informalexample>
         <programlisting role="ini">
<![CDATA[
doc_root = c:\inetpub        // for IIS/PWS
doc_root = c:\apache\htdocs // for Apache
]]>  
         </programlisting>
        </informalexample>
       </para>
      </listitem>
      <listitem>
       <simpara>
        选择在 PHP 启动时需要加载的扩展库。如何设定以及那些已经内置请阅读
        <link linkend="install.windows.extensions">Windows
        扩展</link>一章。注意在新安装之后建议先确定 PHP
        在没有任何扩展时运行正常然后再在 &php.ini; 中加载任何扩展库。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        在 PWS 和 IIS 下，可以设定
        <link linkend="ini.browscap">browscap</link> 配置其指向
        <filename>c:\windows\system\inetsrv\browscap.ini</filename>（Windows 9x/Me）或
        <filename>c:\winnt\system32\inetsrv\browscap.ini</filename>（Windows NT/2000）或
        <filename>c:\windows\system32\inetsrv\browscap.ini</filename>（Windows XP）。
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     按照这些指示已经完成了 Windows 下设定 PHP
     的基本步骤。下一步是选择 webserver 并使其运行 PHP。对于以下
     webserver 有安装指南：
     <itemizedlist>
      <listitem>
       <simpara>
        .. <link linkend="install.iis">Windows 服务器系列</link>，Personal
        Web server (PWS) 3 和 4 或更新版；Internet Information Server (IIS) 3
        和 4 或更新版。
       </simpara>
      </listitem>

      <listitem>
       <simpara>
        .. Apache
        服务器。<link linkend="install.apache.windows">Apache 1.3.x</link> 和
        <link linkend="install.apache2.windows">Apache 2.x</link>。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        .. <link linkend="install.netscape.windows">Netscape/iPlanet</link> 服务器。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        .. <link linkend="install.omnihttpd">OmniHTTPd</link> 服务器。
       </simpara>
      </listitem>

      <listitem>
       <simpara>
        .. <link linkend="install.oreilly">Oreilly Website Pro</link> 服务器。
       </simpara>
      </listitem>

      <listitem>
       <simpara>
        .. <link linkend="install.sambar">Sambar</link> 服务器。
       </simpara>
      </listitem>

      <listitem>
       <simpara>
        .. <link linkend="install.xitami">Xitami</link> 服务器。
       </simpara>
      </listitem>

     </itemizedlist>
    </para>
   </sect2>

   <sect2 id="install.windows.build">
    <title>编译源程序</title>
    <para>
     开始之前，很值得回答一下这个问题：“为什么在 Windows 下编译这么难？”两个原因：
    </para>
    <orderedlist>
     <listitem>
      <simpara>
       Windows 下还没有愿意免费共享代码的开发人员群体。直接结果就是没有足够的投资去建立支持这种开发方式的体系。大体上，尽量做到的可用资源都是从
       UNIX 下的工具来的。不要奇怪这种传统不时会出现。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       下面几乎所有的说明都是“看过就忘”的类型。所以坐稳当并且尽可能忠实地按照说明来做。
      </simpara>
     </listitem>
    </orderedlist>

    <sect3 id="install.windows.build.requirement">
     &reftitle.required;
     <para>
      要编译 <literal>PHP</literal> 你需要 Microsoft 开发环境。推荐使用
      Microsoft Visuaul C++
      6.0。要释放下载的文件还需要一个解压缩工具（例如：Winzip）。如果你还没有解压缩的工具，可以从
      <ulink url="&url.infozip;">InfoZip</ulink> 免费下载一个。
     </para>
     <para>
      在开始之前，你需要下载...
     </para>
     <itemizedlist>
      <listitem>
       <simpara>
        PHP 站点中 <ulink url="&url.win32.buildtools;">&url.win32.buildtools;</ulink>
        的 win32 编译工具。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        PHP 使用的 DNS 解析器的源代码：<ulink
        url="&url.win32.dnsresolver;">&url.win32.dnsresolver;</ulink>。用这个替代
        <filename>win32build.zip</filename> 中的 <filename>resolv.lib</filename>。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        如果你计划把 PHP 编译成 Apache 的静态模块那你还需要
        <ulink url="&url.apache.source;">Apache 源程序</ulink>。
       </simpara>
      </listitem>
     </itemizedlist>
     <simpara>
      最后，你还需要 PHP 4 的源代码。你可以通过<ulink
      url="&url.php.anoncvs;">匿名 CVS</ulink> 得到最新的开发版本，一个<ulink
      url="&url.php.snapshots;">快照</ulink>或者最新发行版本的<ulink
      url="&url.php.downloads;">源程序</ulink>的打包文件。
     </simpara>
    </sect3>

    <sect3 id="install.windows.build.install">
     <title>放到一起</title>
     <para>
      下载了所有的包后需要将他们解压缩到适当的位置。
      <itemizedlist>
       <listitem>
        <simpara>
         建立一个工作目录作为解压缩后存放所有文件的地方，例如：<filename>c:\work</filename>。
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         在你的工作目录（<filename>c:\work</filename>）下新建一个目录
         <filename>win32build</filename> 并将 <filename>win32build.zip</filename>
         解压缩到其中。
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         在你的工作目录（<filename>c:\work</filename>）下新建一个目录
         <filename>bindlib_w32</filename> 并将 <filename>bindlib_w32.zip</filename>
         解压缩到其中。
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         将下载的 PHP 源程序解压缩到工作目录（<filename>c:\work</filename>）中。
        </simpara>
       </listitem>
      </itemizedlist>
      经过这些步骤后你的目录结构应该如下：
      <informalexample>
       <programlisting>
<![CDATA[

+--c:\work
|  |
|  +--bindlib_w32
|  |  |
|  |  +--arpa
|  |  |
|  |  +--conf
|  |  |
|  |  +--...
|  |
|  +--php-4.x.x
|  |  |
|  |  +--build
|  |  |
|  |  +--...
|  |  |
|  |  +--win32
|  |  |
|  |  +--...
|  |
|  +--win32build
|  |  |
|  |  +--bin
|  |  |
|  |  +--include
|  |  |
|  |  +--lib

]]>
       </programlisting>
      </informalexample>
      新建一个目录 <filename>c:\usr\local\lib</filename>。将
      <filename>c:\work\win32build\bin</filename> 中的
      <filename>bison.simple</filename> 拷贝到
      <filename>c:\usr\local\lib</filename>中去。
     </para>
     <note>
      <simpara>
       <ulink url="&url.cygwin;">Cygwin</ulink> 用户应该忽略最后一步。正确安装的
       Cygwin 环境已经提供了 <filename>bison.simple</filename> 和
       <filename>bison.exe</filename> 文件。
      </simpara>
     </note>
    </sect3>

    <sect3 id="install.windows.build.configure">
     <title>配置 MVC ++</title>
     <para>
      下一步是配置 MVC ++ 来准备编译。运行 Microsoft Visual
      C++，在菜单中选择 Tools =&gt; Options。在对话框中，选择
      directories 标签。依次将下拉框改为 Executables，Includes 和
      Library files。将其修改为：
      <itemizedlist>
       <listitem>
        <simpara>
         Executable files: <filename>c:\work\win32build\bin</filename>，
         Cygwin 用户：<filename>cygwin\bin</filename>
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Include files: <filename>c:\work\win32build\include</filename>
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Library files: <filename>c:\work\win32build\lib</filename>
        </simpara>
       </listitem>
      </itemizedlist>
     </para>
    </sect3>

    <sect3 id="install.windows.build.resolvlib">
     <title>Build resolv.lib</title>
     <para>
      必须编译 <filename>resolv.lib</filename> 库。自己决定是需要调试信息（bindlib
      - Win32 Debug）还是不需要（bindlib - Win32 Release）。编译适当的配置：
      <itemizedlist>
       <listitem>
        <simpara>
         图形界面用户，运行 VC++，选择 File =&gt; Open Workspace，找到
         <filename>c:\work\bindlib_w32</filename> 目录并选择
         <filename>bindlib.dsw</filename> 文件。
         菜单并选择 bindlib。接着选择 Build =&gt; Set Active Configuration
         菜单并选择需要的配置。最后选择 Build =&gt; Rebuild All。
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         命令行用户，确认你要么注册了 C++ 环境变量，要么运行了
         <command>vcvars.bat</command>，然后运行下面任意一个：
        </simpara>
        <itemizedlist>
         <listitem>
          <simpara>
           <userinput>msdev bindlib.dsp /MAKE "bindlib - Win32 Debug"</userinput>
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           <userinput>msdev bindlib.dsp /MAKE "bindlib - Win32 Release"</userinput>
          </simpara>
         </listitem>
        </itemizedlist>
       </listitem>
      </itemizedlist>
      到这一步，你应该得到一个 <filename>resolv.lib</filename> 在你的
      <filename>c:\work\bindlib_w32\Debug</filename> 或者 <filename>Release</filename>
      目录下。拷贝此文件到 <filename>c:\work\win32build\lib</filename>
      目录下并且覆盖同名的文件。
     </para>
    </sect3>

    <sect3 id="install.windows.build.compile">
     <title>编译</title>
     <simpara>
      对于初学者最好的上手方法是编译 CGI 版本。
     </simpara>
     <itemizedlist>
      <listitem>
       <simpara>
        图形界面用户，运行 VC++，选择 File =&gt; Open Workspace 菜单并选择
        <filename>c:\work\php-4.x.x\win32\php4ts.dsw</filename>。接着选择
        Build =&gt; Set Active Configuration 菜单并选择想要的配置，要么
        <literal>php4ts - Win32 Debug_TS</literal> 或者是
        <literal>php4ts - Win32 Release_TS</literal>。最后选择
        Build =&gt; Rebuild All。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        命令行用户，确认你要么注册了 C++ 环境变量，要么运行了
        <command>vcvars.bat</command>，然后在
        <filename>c:\work\php-4.x.x\win32</filename> 目录下运行下面任意一个命令：
       </simpara>
       <itemizedlist>
        <listitem>
         <simpara>
          <userinput>msdev php4ts.dsp /MAKE "php4ts - Win32 Debug_TS"</userinput>
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <userinput>msdev php4ts.dsp /MAKE "php4ts - Win32 Release_TS"</userinput>
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          到这一步，你应该得到一个可用的 <filename>php.exe</filename> 在你的
          <filename>c:\work\php-4.x.x.\Debug_TS</filename> 或者
          <filename>Release_TS</filename> 目录下。
         </simpara>
        </listitem>
       </itemizedlist>
      </listitem>
     </itemizedlist>
     <simpara>
      有可能通过编辑 <filename>main/config.win32.h</filename>
      文件对编译做少量的定制。例如你可以修改内置的扩展库，或者
      &php.ini; 文件的位置。
     </simpara>
     <simpara>
      下一步你可能想要编译 CLI 版本，这是设计用于
      <link linkend="features.commandline">PHP 的命令行方式</link>。步骤和编译
      CGI 版本相同，只除了要选择 <literal>php4ts_cli - Win32 Debug_TS</literal>
      或者 <literal>php4ts_cli - Win32 Release_TS</literal>
      工程文件。在成功编译之后你会在 <filename>Release_TS\cli\</filename>
      或者 <filename>Debug_TS\cli\</filename> 目录下发现 <filename>php.exe</filename> 文件。
     </simpara>
     <note>
      <simpara>
       如果你想使用 PEAR 或者舒适的命令行安装程序，就非要用 CLI-SAPI。有关
       PEAR 和安装程序的更多信息见 <ulink url="&url.php.pear;manual/">PEAR</ulink>
       网站文档。
      </simpara>
     </note>
     <simpara>
      要编译 SAPI 模块（<filename>php4isapi.dll</filename>）来将 PHP 和
      Microsoft IIS 集成起来，将激活的配置设为
      <filename>php4isapi-whatever-config</filename> 并编译所需要的 dll。
     </simpara>
    </sect3>
   </sect2>

   <sect2 id="install.windows.extensions">
    <title>Windows 扩展库的安装</title>
    <para>
     在安装好 PHP 和 Webserver 之后，你可能想安装一些扩展库以增加功能。你可以通过编辑
     &php.ini; 来选择哪些扩展库在
     PHP 启动时被加载。你也可以在程序中用 <function>dl</function> 函数动态加载。
    </para>
    <para>
     PHP 4 扩展库的 DLL 文件开头都是 'php_'（PHP 3 中是 'php3_' ）。这避免了
     PHP 扩展库和它们的支持库混淆。
    </para>
    <note>
     <para>
       在PHP 4.3.1 版中 BCMath，Calendar，COM，Ctype，FTP，MySQL，ODBC，Overload，PCRE，Session，Tokenizer，WDDX，XML
       和 Zlib 的支持都是<emphasis>内置</emphasis>的。不需要加载任何扩展库就可以使用这些函数。你可以通过自己的版本中的
       <filename>README.txt</filename> 或者 <filename>install.txt</filename>
       文件或者<link linkend ="install.extensions.overview">此表格</link>来查看哪些模块是内置的。
     </para>
    </note>
    <para>
     编辑 &php.ini; 文件：
     <itemizedlist>
      <listitem>
       <para>
        需要修改
        <link linkend ="ini.extension-dir">extension_dir</link>
        设置将其指向扩展库所在的目录，或者放置
        <filename>php_*.dll</filename> 文件的目录。不要忘记最后的斜线，例如：
        <informalexample>
         <programlisting role="ini">
<![CDATA[
extension_dir = c:/php/extensions/
]]>
         </programlisting>
        </informalexample>
       </para>
      </listitem>
     <listitem>
      <para>
       通过取消 &php.ini; 文件中
       'extension=php_*.dll' 行前面的注释来激活相应的扩展库。只要删除最前面的
       ; 号就可以加载与其对应的扩展库。
       <example>
        <title>激活 <link linkend="ref.bzip2">Bzip2</link> 扩展</title>
         <programlisting role="ini">
<![CDATA[
// 将下面这一行从：
;extension=php_bz2.dll
// 改成
extension=php_bz2.dll
]]>
         </programlisting>
        </example>
       </para>
      </listitem>
      <listitem>
       <para>
        某些扩展库需要附加的 dll 文件才能工作。其中一部分可以在压缩包中找到，在
        <filename>c:\php\dlls\</filename> 目录下，但有一些，例如
        Oracle（<filename>php_oci8.dll</filename>）需要的 dll
        没有在压缩包中绑定。将绑定的 dll 从
        <filename>c:\php\dlls</filename> 目录拷贝到 Windows 路径中，例如：
        <simplelist>
         <member>c:\windows\system for Windows 9x/Me</member>
         <member>c:\winnt\system32 for Windows NT/2000</member>
         <member>c:\windows\system32 for Windows XP</member>
        </simplelist>
        如果这些文件已经安装在你的系统中，仅在不能正常工作的情况下覆盖它们（在覆盖之前，最好先将其备份，或者移动到其它目录 - 以防出错）。
       </para>
      </listitem>
     </itemizedlist>
    </para>

    <para>
     下表说明了一些可用的扩展库和所需要的附加 dll 文件。
     <table id="install.extensions.overview">
      <title>PHP 扩展库</title>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>库名</entry>
         <entry>说明</entry>
         <entry>注意</entry>
        </row>
       </thead>
       <tbody>
  <row>
   <entry>php_bz2.dll</entry>
   <entry><link linkend="ref.bzip2">bzip2</link> 压缩函数库</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php_calendar.dll</entry>
   <entry><link linkend="ref.calendar">Calendar</link> 转换函数库</entry>
   <entry>自 PHP 4.0.3 起内置</entry>
  </row>
  <row>
   <entry>php_cpdf.dll</entry>
   <entry><link linkend="ref.cpdf">ClibPDF</link> 函数库</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php_crack.dll</entry>
   <entry><link linkend="ref.crack">Crack</link> 函数库</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php3_crypt.dll</entry>
   <entry>加密函数库</entry>
   <entry>未知</entry>
  </row>
  <row>
   <entry>php_ctype.dll</entry>
   <entry><link linkend="ref.ctype">ctype</link> 族函数库</entry>
   <entry>自 PHP 4.3.0 起内置</entry>
  </row>
  <row>
   <entry>php_curl.dll</entry>
   <entry><link linkend="ref.curl">CURL</link>，客户端 URL 函数库</entry>
   <entry>需要：libeay32.dll，ssleay32.dll（已包含）</entry>
  </row>
  <row>
   <entry>php_cybercash.dll</entry>
   <entry><link linkend="ref.cybercash">Cybercash</link> 支付函数库</entry>
   <entry>PHP &lt;= 4.2.0</entry>
  </row>
  <row>
   <entry>php_db.dll</entry>
   <entry><link linkend="ref.dbm">DBM</link> 函数库</entry>
   <entry>不赞成使用。用 DBA 代替（php_dba.dll）</entry>
  </row>
  <row>
   <entry>php_dba.dll</entry>
   <entry><link linkend="ref.dba">DBA</link>：数据库（dbm-style）抽象层函数库</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php_dbase.dll</entry>
   <entry><link linkend="ref.dbase">dBase</link> 函数库</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php3_dbm.dll</entry>
   <entry>Berkeley DB2 库</entry>
   <entry>未知</entry>
  </row>
  <row>
   <entry>php_dbx.dll</entry>
   <entry><link linkend="ref.dbx">dbx</link> 函数库</entry>
   <entry></entry>
  </row>
  <row>
   <entry>php_domxml.dll</entry>
   <entry><link linkend="ref.domxml">DOM XML</link> 函数库</entry>
   <entry>PHP &lt;= 4.2.0，需要：libxml2.dll（已包含）</entry>
  </row>
  <row>
   <entry>php_dotnet.dll</entry>
   <entry><link linkend="ref.dotnet">.NET</link> 函数库</entry>
   <entry>PHP &lt;= 4.1.1</entry>
  </row>
  <row>
   <entry>php_exif.dll</entry>
   <entry>从 JPEG <link linkend="function.read-exif-data">读取 EXIF</link> 头信息</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php_fbsql.dll</entry>
   <entry><link linkend="ref.fbsql">FrontBase</link> 函数库</entry>
   <entry>PHP &lt;= 4.2.0</entry>
  </row>
  <row>
   <entry>php_fdf.dll</entry>
   <entry><link linkend="ref.fdf">FDF</link>：表单数据格式化函数库.</entry>
   <entry>需要：fdftk.dll （已包含）</entry>
  </row>
  <row>
   <entry>php_filepro.dll</entry>
   <entry><link linkend="ref.filepro">filePro</link> 函数库</entry>
   <entry>只读访问</entry>
  </row>
  <row>
   <entry>php_ftp.dll</entry>
   <entry><link linkend="ref.ftp">FTP</link> 函数库</entry>
   <entry>自 PHP 4.0.3 起内置</entry>
  </row>
  <row>
   <entry>php_gd.dll</entry>
   <entry><link linkend="ref.image">GD</link> 库图像处理函数库</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php_gd2.dll</entry>
   <entry><link linkend="ref.image">GD2</link> 库图像函数库</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php_gettext.dll</entry>
   <entry><link linkend="ref.gettext">Gettext</link> 函数库</entry>
   <entry>
    PHP &lt;= 4.2.0 需要：gnu_gettext.dll（已包含），PHP &gt;= 4.2.3
    需要 libintl-1.dll（已包含）
   </entry>
  </row>
  <row>
   <entry>php_hyperwave.dll</entry>
   <entry><link linkend="ref.hyperwave">HyperWave</link> 函数库</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php_iconv.dll</entry>
   <entry><link linkend="ref.iconv">ICONV</link> 字符集转换</entry>
   <entry>需要：iconv-1.3.dll（已包含），PHP &gt;=4.2.1 需要 iconv.dll</entry>
  </row>
  <row>
   <entry>php_ifx.dll</entry>
   <entry><link linkend="ref.ifx">Informix</link> 函数库</entry>
   <entry>需要：Informix 库文件</entry>
  </row>
  <row>
   <entry>php_iisfunc.dll</entry>
   <entry>IIS 管理函数库</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php_imap.dll</entry>
   <entry><link linkend="ref.imap">IMAP</link> POP3 和 NNTP 函数库</entry>
   <entry>PHP 3：php3_imap4r1.dll</entry>
  </row>
  <row>
   <entry>php_ingres.dll</entry>
   <entry><link linkend="ref.ingres">Ingres II</link> 函数库</entry>
   <entry>需要：Ingres II 库文件</entry>
  </row>
  <row>
   <entry>php_interbase.dll</entry>
   <entry><link linkend="ref.ibase">InterBase</link> 函数库</entry>
   <entry>需要：gds32.dll（已包含）</entry>
  </row>
  <row>
   <entry>php_java.dll</entry>
   <entry><link linkend="ref.java">Java</link> 函数库</entry>
   <entry>PHP &lt;= 4.0.6 需要：jvm.dll（已包含）</entry>
  </row>
  <row>
   <entry>php_ldap.dll</entry>
   <entry><link linkend="ref.ldap">LDAP</link> 函数库</entry>
   <entry>
    PHP &lt;= 4.2.0 需要：libsasl.dll（已包含），PHP &gt;= 4.3.0
    需要 libeay32.dll，ssleay32.dll（已包含）
   </entry>
  </row>
  <row>
   <entry>php_mbstring.dll</entry>
   <entry><link linkend="ref.mbstring">多字节字符串</link>函数库</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php_mcrypt.dll</entry>
   <entry><link linkend="ref.mcrypt">Mcrypt 加密</link>函数库</entry>
   <entry>需要：libmcrypt.dll</entry>
  </row>
  <row>
   <entry>php_mhash.dll</entry>
   <entry><link linkend="ref.mhash">Mhash</link> 函数库</entry>
   <entry>PHP &gt;= 4.3.0 需要：libmhash.dll（已包含）</entry>
  </row>
  <row>
   <entry>php_mime_magic.dll</entry>
   <entry><link linkend="ref.mime-magic">Mimetype</link> 函数库</entry>
   <entry>需要：<filename>magic.mime</filename>（已包含）</entry>
  </row>
  <row>
   <entry>php_ming.dll</entry>
   <entry><link linkend="ref.ming">Ming</link> 函数库 － Flash 支持</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php_msql.dll</entry>
   <entry><link linkend="ref.msql">mSQL</link> 函数库</entry>
   <entry>需要：msql.dll（已包含）</entry>
  </row>
  <row>
   <entry>php3_msql1.dll</entry>
   <entry>mSQL 1 客户端</entry>
   <entry>未知</entry>
  </row>
  <row>
   <entry>php3_msql2.dll</entry>
   <entry>mSQL 2 客户端</entry>
   <entry>未知</entry>
  </row>
  <row>
   <entry>php_mssql.dll</entry>
   <entry><link linkend="ref.mssql">MSSQL</link> 函数库</entry>
   <entry>需要：ntwdblib.dll（已包含）</entry>
  </row>
  <row>
   <entry>php3_mysql.dll</entry>
   <entry><link linkend="ref.mysql">MySQL</link> 函数库</entry>
   <entry>自 PHP 4 起内置</entry>
  </row>
  <row>
   <entry>php3_nsmail.dll</entry>
   <entry>Netscape 邮件函数库</entry>
   <entry>未知</entry>
  </row>
  <row>
   <entry>php3_oci73.dll</entry>
   <entry>Oracle 函数库</entry>
   <entry>未知</entry>
  </row>
  <row>
   <entry>php_oci8.dll</entry>
   <entry><link linkend="ref.oci8">Oracle 8</link> 函数库</entry>
   <entry>需要：Oracle 8 客户端库文件</entry>
  </row>
  <row>
   <entry>php_openssl.dll</entry>
   <entry><link linkend="ref.openssl">OpenSSL</link> 函数库</entry>
   <entry>需要：libeay32.dll（已包含）</entry>
  </row>
  <row>
   <entry>php_oracle.dll</entry>
   <entry><link linkend="ref.oracle">Oracle</link> 函数库</entry>
   <entry>需要：Oracle 7 客户端库文件</entry>
  </row>
  <row>
   <entry>php_overload.dll</entry>
   <entry><link linkend="ref.overload">对象重载</link>函数库</entry>
   <entry>自 PHP 4.3.0 内置</entry>
  </row>
  <row>
   <entry>php_pdf.dll</entry>
   <entry><link linkend="ref.pdf">PDF</link> 函数库</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php_pgsql.dll</entry>
   <entry><link linkend="ref.pgsql">PostgreSQL</link> 函数库</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php_printer.dll</entry>
   <entry><link linkend="ref.printer">Printer</link> 函数库</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php_shmop.dll</entry>
   <entry><link linkend="ref.shmop">共享内存</link>函数库</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php_snmp.dll</entry>
   <entry><link linkend="ref.snmp">SNMP</link> 函数库</entry>
   <entry>仅在 NT 下使用！</entry>
  </row>
  <row>
   <entry>php_sockets.dll</entry>
   <entry><link linkend="ref.sockets">Socket</link> 函数库</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php_sybase_ct.dll</entry>
   <entry><link linkend="ref.sybase">Sybase</link> 函数库</entry>
   <entry>需要：Sybase 客户端库文件</entry>
  </row>
  <row>
   <entry>php_tokenizer.dll</entry>
   <entry><link linkend="ref.tokenizer">Tokenizer</link> 函数库</entry>
   <entry>自 PHP 4.3.0 起内置</entry>
  </row>
  <row>
   <entry>php_w32api.dll</entry>
   <entry><link linkend="ref.w32api">W32api</link> 函数库</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php_xmlrpc.dll</entry>
   <entry><link linkend="ref.xmlrpc">XML-RPC</link> 函数库</entry>
   <entry>PHP &gt;= 4.2.1 需要：iconv.dll（已包含）</entry>
  </row>
  <row>
   <entry>php_xslt.dll</entry>
   <entry><link linkend="ref.xslt">XSLT</link> 函数库</entry>
   <entry>需要：sablot.dll，expat.dll（已包含）</entry>
  </row>
  <row>
   <entry>php_yaz.dll</entry>
   <entry><link linkend="ref.yaz">YAZ</link> 函数库</entry>
   <entry>无</entry>
  </row>
  <row>
   <entry>php_zlib.dll</entry>
   <entry><link linkend="ref.zlib">ZLib</link> 压缩函数库</entry>
   <entry>自 PHP 4.3.0 起内置</entry>
  </row>
       </tbody>
      </tgroup>
     </table>
    </para>
   </sect2>
  </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
