<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision: 1.26 $ -->
<!-- $Author: dallas $ -->
<!-- EN-Revision: 1.118 Maintainer: dallas Status: ready -->
 <chapter id="configuration">
  <title>运行时配置</title>

  <sect1 id="configuration.file">
   <title>配置文件</title>

   <simpara>
    当 PHP 启动时会读取配置文件（在 PHP 3 中称为
    <filename>php3.ini</filename>，在 PHP 4 中简化为
    &php.ini;）。对于服务器模块版本的 PHP 仅在 web 服务器启动时读取一次。对于
    <acronym>CGI</acronym> 和 <acronym>CLI</acronym>
    版本，每次调用都会读取。
   </simpara>
   <para>
    &php.ini; 的默认位置是在编译时决定的（见<link
    linkend="faq.installation.phpini">常见问题 - 安装</link>），但是对于
    <acronym>CGI</acronym> 和 <acronym>CLI</acronym>
    版本可以通过命令行开关
    <literal>-c</literal> 来改变，见
    PHP 的<link
    linkend="features.commandline">命令行方式</link>一章。也可以用环境变量
    <varname>PHPRC</varname> 来设定寻找
    &php.ini; 文件的其它路径。
   </para>
   <note>
    <para>
     Apache 服务器在启动时将目录更改到根目录，致使
     PHP 会尝试在根目录下读取 &php.ini;，如果存在的话。
    </para>
   </note>
   <para>
The &php.ini; directives handled by extensions are documented respectively
on the pages of the extensions themselfs. The <link linkend="ini">list of
the core directives</link> is available in the appendix. Probably not all
the PHP directives are documented in the manual though. For a completel list
of directives available in your PHP version, please read your well commented
&php.ini; file. Alternatively, you may find the
<ulink url="&url.php.cvs.phpini;">the latest &php.ini;</ulink> from CVS
helpful too.
   </para>
   <para>
    <example>
     <title>&php.ini; 例子</title>
     <programlisting role="ini">
<![CDATA[
; any text on a line after an unquoted semicolon (;) is ignored
[php] ; section markers (text within square brackets) are also ignored
; Boolean values can be set to either:
;    true, on, yes
; or false, off, no, none
register_globals = off
track_errors = yes

; you can enclose strings in double-quotes
include_path = ".:/usr/local/lib/php"

; backslashes are treated the same as any other character
include_path = ".;c:\php\lib"
]]>
</programlisting>
<!-- TODO: add more details about values and expressions -->
    </example>
   </para>
  </sect1>

  <sect1 id="configuration.changes">
   <title>怎样改变配置选项</title>

   <sect2 id="configuration.changes.apache">
    <title>以 Apache 模块方式运行 PHP</title>
    <simpara>
     当以 Apache 的模块方式运行 PHP 时，也可以通过 Apache
     的配置文件（例如 &httpd.conf;）和
     &htaccess;
     文件中的指令来修改 PHP 的配置选项。这样做需要“AllowOverride
     Options”或“AllowOverride All”权限。
    </simpara>

    <para>
     在 PHP 4 和 PHP 5 中，有几个 Apache 指令可以允许在 Apache
     的配置文件中修改 PHP 的配置。要得到哪些指令分别属于
     <constant>PHP_INI_ALL</constant>，<constant>PHP_INI_PERDIR</constant> 或
     <constant>PHP_INI_SYSTEM</constant>
     的列表，请看 <function>ini_set</function> 文档中的表格。
    </para>

    <note>
     <simpara>
      在 PHP 3 中，也有和
      <filename>php3.ini</filename> 中选项相对应的
      Apache 指令，只不过加上前缀“php3_”。
     </simpara>
    </note>

    <para>
     <variablelist>
      <varlistentry>
       <term>
        <systemitem role="directive">php_value</systemitem>
        <parameter>name</parameter>
        <parameter>value</parameter>
       </term>
       <listitem>
        <para>
         设定指定指令的值。仅能用于
         <constant>PHP_INI_ALL</constant> 和 <constant>PHP_INI_PERDIR</constant>
         类型的指令。要清除上一个设定的值，将值设为 <literal>none</literal>。
        </para>
        <note>
         <simpara>
          不要用 <systemitem role="directive">php_value</systemitem> 来设定布尔值。应该用
          <systemitem role="directive">php_flag</systemitem>（见下面）来替代。
         </simpara>
        </note>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <systemitem role="directive">php_flag</systemitem>
        <parameter>name</parameter>
        <parameter>on|off</parameter>
       </term>
       <listitem>
        <para>
         用于设定布尔值类型的配置指令。仅能用于
         <constant>PHP_INI_ALL</constant> 和 <constant>PHP_INI_PERDIR</constant>
         类型的指令。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <systemitem role="directive">php_admin_value</systemitem>
        <parameter>name</parameter>
        <parameter>value</parameter>
       </term>
       <listitem>
        <para>
         设定指定指令的值。<emphasis>不能用于</emphasis> &htaccess; 文件中。任何在
         <systemitem role="directive">php_admin_value</systemitem>
         中设定的值不能被 &htaccess; 或者 virtualhost
         中的指令覆盖。要清除上一个设定的值，将值设为 <literal>none</literal>。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <systemitem role="directive">php_admin_flag</systemitem>
        <parameter>name</parameter>
        <parameter>on|off</parameter>
       </term>
       <listitem>
        <para>
         用于设定布尔值类型的配置指令。<emphasis>不能用于</emphasis> &htaccess; 文件中。任何在
         <systemitem role="directive">php_admin_flag</systemitem>
         中设定的值不能被 &htaccess; 或者 virtualhost 中的指令覆盖。
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
    <para>
     <example>
      <title>Apache 配置例子</title>
      <programlisting role="ini">
<![CDATA[
<IfModule mod_php5.c>
  php_value include_path ".:/usr/local/lib/php"
  php_admin_flag safe_mode on
</IfModule>
<IfModule mod_php4.c>
  php_value include_path ".:/usr/local/lib/php"
  php_admin_flag safe_mode on
</IfModule>
<IfModule mod_php3.c>
  php3_include_path ".:/usr/local/lib/php"
  php3_safe_mode on
</IfModule>
]]>
      </programlisting>
     </example>
    </para>

    <caution>
     <para>
      PHP 常量不存在于 PHP 之外。例如，在 &httpd.conf;
      中可以使用 PHP 常量如
      <constant>E_ALL</constant> 或者 <constant>E_NOTICE</constant>
      来设定
      <link linkend="ini.error-reporting">error_reporting</link>
      指令的值，但它们其实没有意义并被认为是
      <emphasis>0</emphasis>。应该使用相应的位掩码。这些常量可以在
      &php.ini; 中使用。
     </para>
    </caution>
   </sect2>

   <sect2 id="configuration.changes.windows">
    <title>通过修改 Windows 注册表来改变 PHP 配置</title>
     <simpara>
      在 Windows 下运行 PHP 时，可以通过 Windows
      注册表来修改每个目录的配置选项。配置的值存放于注册表的
      <literal>HKLM\SOFTWARE\PHP\Per Directory Values</literal>
      下面根据每个路径起名的子键中。例如对于路径
      <literal>c:\inetpub\wwwroot</literal> 的配置值存放于
      <literal>HKLM\SOFTWARE\PHP\Per Directory
      Values\c\inetpub\wwwroot</literal>。对于目录的设置将会在任何在此目录及其子目录下运行的脚本激活。对应键名应该和
      PHP 配置选项相同并且具有字符串值。值中的
      PHP 常量不会被解析。
    </simpara>
   </sect2>

   <sect2 id="configuration.changes.other">
    <title>其它 PHP 接口</title>

    <para>
Regardless of how you run PHP, you can change certain values at runtime
of your scripts through <function>ini_set</function>. See the documentation
on the <function>ini_set</function> page for more information.
    </para>
    <para>
     If you are interested in a complete list of configuration settings
on your system with their current values, you can execute the
<function>phpinfo</function> function, and review the resulting
page. You can also access the values of individual configuration
directives at runtime using <function>ini_get</function> or
<function>get_cfg_var</function>.
    </para>
   </sect2>

  </sect1>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
