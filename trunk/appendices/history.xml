<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision: 1.2 $ -->
<!-- $AUTHOR$ -->
<!-- EN-Revision: 1.13 Maintainer: class007 Status: working -->
<appendix id="history">
 <title>PHP 及其相关工程的历史</title>
 <para>
  PHP 在过去的几年里走过了漫长的道路。
  成长为处理 Web 的最卓越的语言并非易事。如果您对 PHP 如何发展到今天很感兴趣，那么，请继续读下去吧。
 </para>
 
 <sect1 id="history.php">
  <title> PHP 的历史</title>
  
  <sect2 id="history.phpfi">
   <title>PHP/FI</title>
   <para>
    PHP 继承自一个老的工程，名叫 PHP/FI。PHP/FI 在
    1995年由 Rasmus Lerdorf 创建，最初只是一套简单的 Perl 脚本，
    用来跟踪访问他主页的人们的信息。它给这一套脚本取名为“Personal Home Page
    Tools”。随着更多功能需求的增加，Rasmus 写了一个更大的
    C 语言的实现，它可以访问数据库，可以让用户开发简单的动态
    Web 程序。Rasmus 公开了 PHP/FI 的源代码，以便每个人都可以使用它，
    同时大家也可以修正它的Bug并且改进它的源代码。
   </para>
   <para>
    PHP/FI，一个专为个人主页/表单提供解释程序的程序，
    已经包含了今天 PHP 的一些基本功能。它有着 Perl 样式的变量，自动解释
    表单变量，并可以嵌入 HTML。语法本身与 Perl 很相似，但是它很有限，很
    简单，还稍微有些不协调。
   </para>
   <para>
    到1997年，PHP/FI 2.0，也就是它的 C 语言实现的第二版在全世界已经
    有几千个用户（估计）和大约 50,000 个域名安装，大约是 Internet
    所有域名的 1%。但是那时只有几个人在为该工程撰写少量当代码，它
    仍然只是一个人的工程。
   </para>
   <para>
    PHP/FI 2.0 在经历了数个beta版本的发布后于1997年11月发布了官方正式
    版本。不久，PHP 3.0 的第一个 alpha 版本的发布，PHP 从此走向了成功。
   </para>
  </sect2>

  <sect2 id="history.php3">
   <title>PHP 3</title>
   <para>
    PHP 3.0 是类似于当今 PHP 语法结构的第一个版本。Andi Gutmans
    和 Zeev Suraski 在开发他们的商业程序时，发现 PHP/FI 2.0 功能明显不足，
    于是他们重写了代码。这就是 PHP 3.0。
    经过Andi, Rasmus 和 Zeev 一系列的努力，考虑到 PHP/FI 已存在的用户群，
    他们决定联合发布 PHP 3.0 作为 PHP/FI 2.0 的官方后继版本。而 PHP/FI 2.0
    的进一步开发几乎终止了。
   </para>
   <para>
    PHP 3.0 的一个最强大的功能是它的可扩展性。除了给最终用户提供
    数据库、协议和 API 的基础结构，它的可扩展性还吸引了大量的开发人员
    加入并提交新的模块。后来证实，这是 PHP 3.0 取得巨大成功的关键。
    PHP 3.0 中的其它关键功能包括面向对象的支持和更强大和协调的语法结构。
   </para>
   <para>
    这个全新的语言伴随着一个新的名称发布。它从 PHP/FI 2.0 的名称中移去了
    暗含“本语言只限于个人使用”的部分。它被命名为简单的缩写“PHP”。这是一种
    递归的缩写，它的全称是――PHP: Hypertext Preprocessor。
   </para>
   <para>
    1998 年末，PHP 的安装人数几近10,000，有大约100,000个网站报告他们使用了PHP。
    在 PHP 3.0 的顶峰，Internet 上 10% 的 Web 服务器上都安装了它。
   </para>
   <para>
   约九个月的公开测试后，官方于1998年6月正式发布 PHP 3.0。
   </para>
  </sect2>

  <sect2 id="history.php4">
   <title>PHP 4</title>
   <para>
    By the winter of 1998, shortly after PHP 3.0 was officially
    released, Andi Gutmans and Zeev Suraski had begun working
    on a rewrite of PHP's core. The design goals were to improve
    performance of complex applications, and improve the
    modularity of PHP's code base. Such applications were made
    possible by PHP 3.0's new features and support for a wide
    variety of third party databases and APIs, but PHP 3.0 was
    not designed to handle such complex applications efficiently.
   </para>
   <para>
    The new engine, dubbed 'Zend Engine' (comprised of their
    first names, Zeev and Andi), met these design goals
    successfully, and was first introduced in mid 1999. PHP 4.0,
    based on this engine, and coupled with a wide range of
    additional new features, was officially released in May
    2000, almost two years after its predecessor, PHP 3.0.
    In addition to the highly improved performance of this
    version, PHP 4.0 included other key features such as
    support for many more Web servers, HTTP sessions, output
    buffering, more secure ways of handling user input and
    several new language constructs.
   </para>
   <para>
    PHP 4 is currently the latest released version of PHP. Work
    has already begun on modifying and improving the Zend Engine
    to integrate the features which were designed for PHP 5.0.
   </para>
   <para>
    Today, PHP is being used by hundreds of thousands of developers
    (estimated), and several million sites report as having it
    installed, which accounts for over 20% of the domains on the
    Internet.
   </para>
   <para>
    PHP's development team includes dozens of developers, as well
    as dozens others working on PHP-related projects such as PEAR
    and the documentation project.
   </para>
  </sect2>
 </sect1>
 
 <sect1 id="history.php.related">
  <title>History of PHP related projects</title>
  
  <!-- Hope Stig and/or Egon can do this
  
  <sect2 id="history.phpdoc">
   <title>PHP Documentation Project</title>
   <para>
   </para>
  </sect2>
  
  -->

  <sect2 id="history.pear">
   <title>PEAR</title>
   <para>
    PEAR, the PHP Extension and Application Repository (originally,
    PHP Extension and Add-on Repository) is PHP's version of
    foundation classes, and may grow in the future to be one
    of the key ways to distribute both PHP and C-based PHP
    extensions among developers.
   </para>
   <para>
    PEAR was born in discussions held in the PHP Developers'
    Meeting (PDM) held in January 2000 in Tel Aviv. It was
    created by Stig S. Bakken, and is dedicated to his first-born
    daughter, Malin Bakken.
   </para>
   <para>
    Since early 2000, PEAR has grown to be a big, significant
    project with a large number of developers working on
    implementing common, reusable functionality for the
    benefit of the entire PHP community. PEAR today includes
    a wide variety of infrastructure foundation classes
    for database access, content caching, mathematical
    calculations, eCommerce and much more.
   </para>
  </sect2>

  <sect2 id="history.phpqa">
   <title>PHP Quality Assurance Initiative</title>
   <para>
    The PHP Quality Assurance Initiative was set up in the
    summer of 2000 in response to criticism that PHP releases
    were not being tested well enough for production
    environments. The team now consists of a core group of
    developers with a good understanding of the PHP code
    base. These developers spend a lot of their time
    localizing and fixing bugs within PHP. In addition
    there are many other team members who test and
    provide feedback on these fixes using a wide variety
    of platforms.
   </para>
  </sect2>

  <sect2 id="history.phpgtk">
   <title>PHP-GTK</title>
   <para>
    PHP-GTK is the PHP solution for writing client side
    GUI applications. Andrei Zmievski remembers the planing
    and creation process of PHP-GTK:
   </para>
   <blockquote>
    <para>
     GUI programming has always been of my interests, and I found
     that Gtk+ is a very nice toolkit, except that programming with
     it in C is somewhat tedious. After witnessing PyGtk and GTK-Perl
     implementations, I decided to see if PHP could be made to
     interface with Gtk+, even minimally. Starting in August of 2000,
     I began to have a bit more free time so that is when I started
     experimenting. My main guideline was the PyGtk implementation
     as it was fairly feature complete and had a nice object-oriented
     interface. James Henstridge, the author of PyGtk, provided very
     helpful advice during those initial stages.
    </para>
    <para>
     Hand-writing the interfaces to all the Gtk+ functions was out of
     the question, so I seized upon the idea of code-generator, similar
     to how PyGtk did it. The code generator is a PHP program that reads
     a set of .defs file containing the Gtk+ classes, constants, and
     methods information and generates C code that interfaces PHP with
     them. What cannot be generated automatically can be written by
     hand in .overrides file.
    </para>
    <para>
     Working on the code generator and the infrastructure took some
     time, because I could spend little time on PHP-GTK during the
     fall of 2000. After I showed PHP-GTK to Frank Kromann, he got
     interested and started helping me out with code generator work
     and Win32 implementation. When we wrote the first Hello World
     program and fired it up, it was extremely exciting. It took a
     couple more months to get the project to a presentable condition
     and the initial version was released on March 1, 2001. The
     story promptly hit SlashDot.
    </para>
    <para>
     Sensing that PHP-GTK might be extensive, I set up separate
     mailing lists and CVS repositories for it, as well as the
     gtk.php.net website with the help of Colin Viebrock. The
     documentation would also need to be done and James Moore
     came in to help with that.
    </para>
    <para>
     Since its release PHP-GTK has been gaining popularity. We
     have our own documentation team, the manual keeps improving,
     people start writing extensions for PHP-GTK, and more and
     more exciting applications with it.
    </para>
   </blockquote>
  </sect2>
 </sect1>

 <sect1 id="history.php.books">
  <title>Books about PHP</title>
  <para>
   As PHP grew, it began to be recognized as a world-wide popular
   development platform. One of the most interesting ways of
   seeing this trend was by observing the books about PHP that
   came out throughout the years.
  </para>
  <para>
   To the best of our knowledge, the first book dedicated to
   PHP was 'php- dynamische webauftritte professionell realisieren'
   - a German book published in 1999, authored by Egon Schmid,
   Christian Cartus and Richard Blume. The first book in English
   about PHP was published shortly afterwards, and was 'Core
   PHP Programming' by Leon Atkinson. Both of these books covered
   PHP 3.0.
  </para>
  <para>
   While these two books were the first of their kind - they were
   followed by a large number of books from a host of authors and
   publishers. There are over 40 books in English, 50 books in
   German, and over 20 books in French! In addition, you can find
   books about PHP in many other languages, including Spanish,
   Korean, Japanese and Hebrew.
  </para>
  <para>
   Clearly, this large number of books, written by different
   authors, published by many publishers, and their availability
   in so many languages - are a strong testimony for PHP's
   world-wide success.
  </para>
 </sect1>
 
 <sect1 id="history.php.publications">
  <title>Publications about PHP</title>
  <para>
   To the best of our knowledge, the first article about PHP in
   a hard-copy magazine was published in the French Informatiques
   Magazine, towards the end of 1998, and covered PHP 3.0. As with
   books, this was the first in a series of many articles published
   about PHP in various prominent magazines.
  </para>
  <para>
   Articles about PHP appeared in Dr. Dobbs, Linux Enterprise,
   Linux Magazine and many more. Articles about migrating ASP-based
   applications to PHP under Windows even appear on Microsoft's
   very own MSDN!
  </para>
 </sect1>

</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
