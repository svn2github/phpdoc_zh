<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision: 1.4 $ -->
<!-- $Author: dallas $ -->
<!-- EN-Revision:1.5 Maintainer: dallas Status: ready -->
<appendix id="wrappers">
 <title>支持的协议／封装协议列表</title>
 <para>
  以下是 PHP 内置用于文件系统函数例如
  <function>fopen</function> 和 <function>copy</function>
  的 URL 风格协议列表。除了这些封装协议之外，从
  PHP 4.3 起，你还可以用 PHP 脚本和
  <function>stream_register_wrapper</function>
  写自己的封装协议。
 </para>

 <section id="wrappers.http">
  <title>HTTP 和 HTTPS</title>
  <simpara>PHP 3，PHP 4。自 PHP 4.3 起支持 https://</simpara>

  <itemizedlist>
   <listitem><simpara>http://example.com</simpara></listitem>
   <listitem><simpara>http://user:password@example.com</simpara></listitem>
   <listitem><simpara>https://example.com</simpara></listitem>
   <listitem><simpara>https://user:password@example.com</simpara></listitem>
  </itemizedlist>

  <simpara>
   允许通过 HTTP 1.0 使用 HTTP GET 方法对文件／资源进行只读访问。Host:
   报头也会通过请求发送出去以支持基于域名的虚拟主机。如果你在 ini
   文件或者流上下文配置了 <link linkend="ini.user-agent">user_agent</link>
   字符串，也会被包括在请求报头中。
  </simpara>
  <simpara>
   自 PHP 4.0.5 起支持重定向。如果使用较早版本的 PHP 则需要在 URL 末尾包括一个斜线。
  </simpara>
  <simpara>
   流允许访问资源的<emphasis>正文</emphasis>，报头部分保存在
   <parameter>$http_response_header</parameter> 变量中。自
   PHP 4.3 起，可以用
   <function>stream_get_meta_data</function> 得到报头。
  </simpara>
  <simpara>
   HTTP 连接是只读的，不能将数据写入或者拷贝文件到 HTTP 资源。
  </simpara>
  <note>
   <simpara>
    自 PHP 4.3 起开始支持 HTTPS，需要在编译时加入 OpenSSL 的支持。
   </simpara>
  </note>
 </section>

 <section id="wrappers.ftp">
  <title>FTP 和 FTPS</title>
  <simpara>PHP 3，PHP 4。自 PHP 4.3 起支持 ftps://</simpara>

  <itemizedlist>
   <listitem><simpara>ftp://example.com/pub/file.txt</simpara></listitem>
   <listitem><simpara>ftp://user:password@example.com/pub/file.txt</simpara></listitem>
   <listitem><simpara>ftps://example.com/pub/file.txt</simpara></listitem>
   <listitem><simpara>ftps://user:password@example.com/pub/file.txt</simpara></listitem>
  </itemizedlist>

  <simpara>
   允许对已有文件进行只读访问以及通过 FTP 建立新文件。如果服务器不支持被动模式的
   ftp，则连接会失败。
  </simpara>
  <simpara>
   可以用读或者写的方式打开文件，但不能同时是读写。如果 ftp
   服务器上已经存在远程文件而你试图用写的方式打开，则连接会失败。如果你想通过
   ftp 更新已有的文件，用 <function>ftp_connect</function>。
  </simpara>
  <simpara>
   ftps:// 是 PHP 4.3 引进的。它和 ftp:// 相同，但是尝试和
   ftp 服务器建立一个安全连接。如果服务器不支持 SSL，则会返回一个普通的未加密的
   ftp 连接。
  </simpara>
  <note>
   <simpara>
    自 PHP 4.3 起开始支持 FTPS，需要在编译时加入 OpenSSL 的支持。
   </simpara>
  </note>

 </section>

 <section id="wrappers.php">
  <title>PHP 输入／输出流</title>
  <simpara>PHP 3.0.13 及以上版本，自 PHP 4.3 起支持 php://output</simpara>

  <itemizedlist>
   <listitem><simpara>php://stdin</simpara></listitem>
   <listitem><simpara>php://stdout</simpara></listitem>
   <listitem><simpara>php://stderr</simpara></listitem>
   <listitem><simpara>php://output</simpara></listitem>
  </itemizedlist>

  <simpara>
   php://stdin，php://stdout 和 php://stderr 允许访问
   PHP 进程相应的输入或者输出流。
  </simpara>
  <simpara>
   php://output 允许向输出缓冲机制写入数据，和
   <function>print</function> 与 <function>echo</function> 的方式相同。
  </simpara>
  <simpara>
   php://stdin 是只读的，反之 php://stdout，php://stderr
   和 php://output 是只写的。
  </simpara>
 </section>

 <section id="wrappers.compression">
  <title>压缩流</title>
  <simpara>zlib: PHP 4.0.4 - PHP 4.2.3（仅用于带 fopencookie 的系统）</simpara>
  <simpara>PHP 4.3 及以上版本支持 compress.zlib:// 和 compress.bzip2://</simpara>

  <itemizedlist>
   <listitem><simpara>zlib:</simpara></listitem>
   <listitem><simpara>compress.zlib://</simpara></listitem>
   <listitem><simpara>compress.bzip2://</simpara></listitem>
  </itemizedlist>

  <simpara> 
   zlib: 和 <function>gzopen</function> 的工作方式相象，只除了流可以用于
   <function>fread</function> 和其它文件系统函数。自 PHP 4.3
   起已不赞成使用，因为可能会和包含有“:”字符的文件名混淆，用 compress.zlib:// 代替。
  </simpara>

  <simpara>
   compress.zlib:// 和 compress.bzip2:// 各自等同于
   <function>gzopen</function> 和 <function>bzopen</function>，并且可以在不支持
   fopencookie 的系统中使用。
  </simpara>
 </section>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
