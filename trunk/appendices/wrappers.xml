<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- $Author$ -->
<!-- $EN-Revision: 305081 $ -->
<appendix xml:id="wrappers"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>支持的协议／封装协议列表</title>
  <para>以下是 PHP 内置用于文件系统函数例如 
  <function>fopen</function>和 
  <function>copy</function>的 URL 风格协议列表。除了这些封装协议之外，从 PHP 4.3 起，还可以用 PHP 脚本和 
  <function>stream_wrapper_register</function>写自己的封装协议。</para>
  <note>
    <simpara>The URL syntax used to describe a wrapper only supports the scheme://... syntax. scheme:/ and scheme: syntaxes are not supported.</simpara>
  </note>
  <para>List of context options is available in the chapter 
  <xref linkend="context" />.</para>
  <section xml:id="wrappers.file">
    <title>文件系统</title>
    <simpara>所有版本的 PHP。自 PHP 4.3.0 以来明确使用 
    <filename>file://</filename>。</simpara>
    <itemizedlist>
      <listitem>
        <simpara>
          <filename>/path/to/file.ext</filename>
        </simpara>
      </listitem>
      <listitem>
        <simpara>
          <filename>relative/path/to/file.ext</filename>
        </simpara>
      </listitem>
      <listitem>
        <simpara>
          <filename>fileInCwd.ext</filename>
        </simpara>
      </listitem>
      <listitem>
        <simpara>
          <filename>C:/path/to/winfile.ext</filename>
        </simpara>
      </listitem>
      <listitem>
        <simpara>
          <filename>C:\path\to\winfile.ext</filename>
        </simpara>
      </listitem>
      <listitem>
        <simpara>
          <filename>\\smbserver\share\path\to\winfile.ext</filename>
        </simpara>
      </listitem>
      <listitem>
        <simpara>
          <filename>file:///path/to/file.ext</filename>
        </simpara>
      </listitem>
    </itemizedlist>
    <simpara>
    <filename>file://</filename>是 PHP 默认的描述本地文件系统的封装协议。指定相对路径 (相对路径名不开始于 /、\、\\ 或 Windows 盘符) 时，该路径是相对于当前的工作目录。在很多情况下工作目录就是当前执行的脚本所在的目录，除非它被改变。使用 CLI sapi 时，默认是调用该脚本时终端所处的目录。</simpara>
    <simpara>某些函数，例如 
    <function>fopen</function>和 
    <function>file_get_contents</function>，会自动搜索 
    <literal>include_path</literal>作为相对路径。</simpara>
    <para>
      <table>
        <title>封装协议摘要</title>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>属性</entry>
              <entry>支持</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>受限于 
              <link linkend="ini.allow-url-fopen">allow_url_fopen</link>。</entry>
              <entry>否</entry>
            </row>
            <row>
              <entry>允许读取</entry>
              <entry>是</entry>
            </row>
            <row>
              <entry>允许写入</entry>
              <entry>是</entry>
            </row>
            <row>
              <entry>允许附加</entry>
              <entry>是</entry>
            </row>
            <row>
              <entry>允许同时读写</entry>
              <entry>是</entry>
            </row>
            <row>
              <entry>支持 
              <function>stat</function></entry>
              <entry>是</entry>
            </row>
            <row>
              <entry>支持 
              <function>unlink</function></entry>
              <entry>是</entry>
            </row>
            <row>
              <entry>支持 
              <function>rename</function></entry>
              <entry>是</entry>
            </row>
            <row>
              <entry>支持 
              <function>mkdir</function></entry>
              <entry>是</entry>
            </row>
            <row>
              <entry>支持 
              <function>rmdir</function></entry>
              <entry>是</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </para>
  </section>
  <section xml:id="wrappers.socket">
    <title>Socket</title>
    <para>本节包含支持可工作于套接字的封装协议的上下文选项，如 
    <literal>tcp</literal>，
    <literal>http</literal>或 
    <literal>ftp</literal>。</para>
    <para>自 PHP 5.1.0 起只支持一个选项，
    <literal>bindto</literal>，可用来指定 IP 地址（可以是 IPv4 或 IPv6）和／或 PHP 将用来访问网络的端口号。语法是 
    <literal>ip:port</literal>（如果想让系统自动选择可以将 IP 或端口号设为 
    <literal>0</literal>）。</para>
    <note>
      <para>因 FTP 在正常运行时创建两个套接字连接，此时不能在 
      <literal>bindto</literal>选项中指定端口号。因此对于 FTP wrapper 只支持一种语法 
      <literal>ip:0</literal>。</para>
    </note>
    <example>
      <title>怎样使用 bindto 选项的一些例子</title>
      <programlisting role="php">
        <![CDATA[
<?php
// connect to the internet using the '192.168.0.100' IP
$opts = array('socket' =>
            array('bindto' => '192.168.0.100:0'));


// connect to the internet using the '192.168.0.100' IP and port '7000'
$opts = array('socket' =>
            array('bindto' => '192.168.0.100:7000'));


// connect to the internet using port '7000'
$opts = array('socket' =>
            array('bindto' => '0:7000'));


// create the context...
$context = stream_context_create($opts);

// ...and use it to fetch the data
echo file_get_contents('http://www.example.com', false, $context);

?>
]]>
</programlisting>
    </example>
  </section>
  <section xml:id="wrappers.http">
  <title>HTTP 和 HTTPS</title>
  <simpara>PHP 3, PHP 4, PHP 5。自 PHP 4.3.0 起支持 
  <filename>https://</filename></simpara>
  <itemizedlist>
    <listitem>
      <simpara>
        <filename>http://example.com</filename>
      </simpara>
    </listitem>
    <listitem>
      <simpara>
        <filename>http://example.com/file.php?var1=val1&amp;var2=val2</filename>
      </simpara>
    </listitem>
    <listitem>
      <simpara>
        <filename>http://user:password@example.com</filename>
      </simpara>
    </listitem>
    <listitem>
      <simpara>
        <filename>https://example.com</filename>
      </simpara>
    </listitem>
    <listitem>
      <simpara>
        <filename>https://example.com/file.php?var1=val1&amp;var2=val2</filename>
      </simpara>
    </listitem>
    <listitem>
      <simpara>
        <filename>https://user:password@example.com</filename>
      </simpara>
    </listitem>
  </itemizedlist>
  <simpara>允许通过 HTTP 1.0 使用 HTTP GET 方法对文件／资源进行只读访问。
  <literal>Host:</literal>报头也会通过请求发送出去以支持基于域名的虚拟主机。如果在 ini 文件或者流上下文配置了 
  <link linkend="ini.user-agent">user_agent</link>字符串，也会被包括在请求报头中。</simpara>&amp;warn.ssl-non-standard; 
  <simpara>自 PHP 4.0.5 起支持重定向。如果使用较早版本的 PHP 则需要在 URL 末尾包括一个斜线。如果一定要知道文档所在的资源的 url（在所有重定向被处理过之后），则需要处理从流返回的一系列响应报头信息。</simpara>
  <informalexample>
    <programlisting role="php">
      <![CDATA[
<?php
$url = 'http://www.example.com/redirecting_page.php';

$fp = fopen($url, 'r');

/* 在 PHP 4.3.0 之前使用 $http_response_header
   而不是 stream_get_meta_data() */
$meta_data = stream_get_meta_data($fp);
foreach($meta_data['wrapper_data'] as $response) {

  /* 重定向到何处? */
  if (substr(strtolower($response), 0, 18) == 'content-location: ') {
    /* 把要重定向的链接赋值给 $url */
    $url = substr($response, 18);
  }
}
?>
]]>
</programlisting>
  </informalexample>
  <simpara>流允许访问资源的
  <emphasis>正文</emphasis>，报头部分保存在 
  <varname>$http_response_header</varname>变量中。自 PHP 4.3.0 起，可以用 
  <function>stream_get_meta_data</function>得到报头。</simpara>
  <simpara>HTTP 连接是只读的，不能将数据写入或者拷贝文件到 HTTP 资源。</simpara>
  <note>
    <simpara>自 PHP 4.3.0 起开始支持 HTTPS，需要在编译时加入 OpenSSL 的支持。</simpara>
  </note>
  <para>
    <table>
      <title>Wrapper Summary</title>
      <tgroup cols="2">
        <thead>
          <row>
            <entry>属性</entry>
            <entry>支持</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>受限于 
            <link linkend="ini.allow-url-fopen">allow_url_fopen</link></entry>
            <entry>是</entry>
          </row>
          <row>
            <entry>允许读取</entry>
            <entry>是</entry>
          </row>
          <row>
            <entry>允许写入</entry>
            <entry>否</entry>
          </row>
          <row>
            <entry>允许附加</entry>
            <entry>否</entry>
          </row>
          <row>
            <entry>允许同时读写</entry>
            <entry>无效</entry>
          </row>
          <row>
            <entry>支持 
            <function>stat</function></entry>
            <entry>否</entry>
          </row>
          <row>
            <entry>支持 
            <function>unlink</function></entry>
            <entry>否</entry>
          </row>
          <row>
            <entry>支持 
            <function>rename</function></entry>
            <entry>否</entry>
          </row>
          <row>
            <entry>支持 
            <function>mkdir</function></entry>
            <entry>否</entry>
          </row>
          <row>
            <entry>支持 
            <function>rmdir</function></entry>
            <entry>否</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  </para>
  <para>
    <table>
      <title>上下文选项</title>
      <tgroup cols="3">
        <thead>
          <row>
            <entry>名称</entry>
            <entry>用法</entry>
            <entry>默认值</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <literal>method</literal>
            </entry>
            <entry>
            <constant>GET</constant>、
            <constant>POST</constant>或任何其它被远程服务器支持的 HTTP 方式。</entry>
            <entry>
              <constant>GET</constant>
            </entry>
          </row>
          <row>
            <entry>
              <literal>header</literal>
            </entry>
            <entry>请求中要发送的附加的头信息。此选项中的值将覆盖其它值（例如 
            <literal>User-agent:</literal>，
            <literal>Host:</literal>和 
            <literal>Authentication:</literal>）。</entry>
            <entry></entry>
          </row>
          <row>
            <entry>
              <literal>user_agent</literal>
            </entry>
            <entry>在 User-Agent: 头信息中要发送的值。此值仅用于
            <emphasis>没有</emphasis>在上面 
            <literal>header</literal>的上下文选项中指定 user-agent 时。</entry>
            <entry>&amp;php.ini; 设置：
            <literal>user_agent</literal></entry>
          </row>
          <row>
            <entry>
              <literal>content</literal>
            </entry>
            <entry>头信息之后要发送的附加数据。典型用于 POST 或 PUT 请求。</entry>
            <entry></entry>
          </row>
          <row>
            <entry>
              <literal>proxy</literal>
            </entry>
            <entry>以 URI 格式指定的代理服务器（例如 
            <literal>tcp://proxy.example.com:5100</literal>）。HTTPS 代理（通过 HTTP 代理服务器）仅在 PHP 5.1.0 或更高版本可用。</entry>
            <entry></entry>
          </row>
          <row>
            <entry>
              <literal>request_fulluri</literal>
            </entry>
            <entry>设置为 &amp;true; 时，建立请求时整个 URI 将被使用。(即 
            <literal>GET http://www.example.com/path/to/file.html HTTP/1.0</literal>)。 而这是一个非标准请求格式，某些代理服务器需要它。</entry>
            <entry>&amp;false;</entry>
          </row>
          <row>
            <entry>
              <literal>max_redirects</literal>
            </entry>
            <entry>连续重定向的最大值。取值为 
            <literal>1</literal>或更小的值表示不跟随重定向。PHP 5.1.0 新加的。</entry>
            <entry>20</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  </para>
  <note>
    <title>底层的套接字流（socket stream）上下文选项</title>
    <simpara>有可能通过
    <link linkend="transports.inet">底层传输（underlying transport）</link>支持附加的上下文选项。对于 
    <literal>http://</literal>流，参考 
    <literal>tcp://</literal>传输的上下文选项。对于 
    <literal>https://</literal>流，参考 
    <literal>ssl://</literal>传输的上下文选项。</simpara>
  </note></section>
  <section xml:id="wrappers.ftp">
    <title>FTP 和 FTPS</title>
    <simpara>PHP 3，PHP 4，PHP 5。自 PHP 4.3.0 起支持 
    <filename>ftps://</filename></simpara>
    <itemizedlist>
      <listitem>
        <simpara>
          <filename>ftp://example.com/pub/file.txt</filename>
        </simpara>
      </listitem>
      <listitem>
        <simpara>
          <filename>ftp://user:password@example.com/pub/file.txt</filename>
        </simpara>
      </listitem>
      <listitem>
        <simpara>
          <filename>ftps://example.com/pub/file.txt</filename>
        </simpara>
      </listitem>
      <listitem>
        <simpara>
          <filename>ftps://user:password@example.com/pub/file.txt</filename>
        </simpara>
      </listitem>
    </itemizedlist>
    <simpara>允许对已有文件进行只读访问以及通过 FTP 建立新文件。如果服务器不支持被动模式的 ftp，则连接会失败。</simpara>
    <simpara>可以用读或者写的方式打开文件，但不能同时是读写。如果 ftp 服务器上已经存在远程文件而试图用写的方式打开但又没有指定 
    <literal>overwrite</literal>的上下文选项，则连接会失败。如果想通过 ftp 更新已有的文件，则在上下文中指定 
    <literal>overwrite</literal>选项并用写的方式打开。还可以用 
    <link linkend="ref.ftp">FTP 扩展</link>。</simpara>
    <note>
      <title>追加文件</title>
      <simpara>自 PHP 5.0.0 起可以通过 
      <literal>ftp://</literal>URL 协议来追加文件。在之前的版本试图通过 
      <literal>ftp://</literal>来追加文件会导致失败。</simpara>
    </note>
    <simpara>
    <filename>ftps://</filename>是 PHP 4.3.0 引进的。它和 
    <filename>ftp://</filename>相同，但是尝试和 ftp 服务器建立一个安全连接。如果服务器不支持 SSL，则会返回一个普通的未加密的 ftp 连接。</simpara>
    <note>
      <simpara>自 PHP 4.3.0 起开始支持 FTPS，需要在编译时加入 OpenSSL 的支持。</simpara>
    </note>
    <para>
      <table>
        <title>Wrapper Summary</title>
        <tgroup cols="3">
          <thead>
            <row>
              <entry>属性</entry>
              <entry>PHP 4</entry>
              <entry>PHP 5</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>受限于 
              <link linkend="ini.allow-url-fopen">allow_url_fopen</link>。</entry>
              <entry>是</entry>
              <entry>是</entry>
            </row>
            <row>
              <entry>允许读取</entry>
              <entry>是</entry>
              <entry>是</entry>
            </row>
            <row>
              <entry>允许写入</entry>
              <entry>是（仅允许写入新文件）</entry>
              <entry>是（允许使用 
              <parameter>overwrite</parameter>参数覆盖新文件）</entry>
            </row>
            <row>
              <entry>允许附加</entry>
              <entry>否</entry>
              <entry>是（
              <literal>PHP 5.0.0</literal>或更新版本）</entry>
            </row>
            <row>
              <entry>允许同时读写</entry>
              <entry>否</entry>
              <entry>否</entry>
            </row>
            <row>
              <entry>支持 
              <function>stat</function></entry>
              <entry>否</entry>
              <entry>PHP 5.0.0：仅在 
              <function>filesize</function>，
              <function>filetype</function>，
              <function>file_exists</function>，
              <function>is_file</function>和 
              <function>is_dir</function>中支持。PHP 5.1.0：
              <function>filemtime</function>。</entry>
            </row>
            <row>
              <entry>支持 
              <function>unlink</function></entry>
              <entry>否</entry>
              <entry>是</entry>
            </row>
            <row>
              <entry>支持 
              <function>rename</function></entry>
              <entry>否</entry>
              <entry>是</entry>
            </row>
            <row>
              <entry>支持 
              <function>mkdir</function></entry>
              <entry>否</entry>
              <entry>是</entry>
            </row>
            <row>
              <entry>支持 
              <function>rmdir</function></entry>
              <entry>否</entry>
              <entry>是</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </para>
    <para>
      <table>
        <title>上下文选项（自 PHP 5.0 起）</title>
        <tgroup cols="3">
          <thead>
            <row>
              <entry>名称</entry>
              <entry>用法</entry>
              <entry>默认值</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
                <literal>overwrite</literal>
              </entry>
              <entry>允许覆盖远程服务器上已存在的文件。仅适用于写入模式（上传）。</entry>
              <entry>&amp;false;（禁用）</entry>
            </row>
            <row>
              <entry>
                <literal>resume_pos</literal>
              </entry>
              <entry>开始传输的文件偏移量。仅适用于读取模式（下载）。</entry>
              <entry>0（文件头）</entry>
            </row>
            <row>
              <entry>
              <literal>proxy</literal>(PHP 5.1.0 或更高版本)</entry>
              <entry>通过 HTTP 代理服务器对 FTP 发出请求 仅能进行文件读取操作。 例如：
              <literal>tcp://squid.example.com:8000</literal></entry>
              <entry />
            </row>
          </tbody>
        </tgroup>
      </table>
    </para>
    <note>
      <title>底层套接字流上下文选项（Underlying socket stream context options）</title>
      <simpara>有可能通过
      <link linkend="transports.inet">底层传输（underlying transport）</link>支持附加的上下文选项。对于 
      <literal>ftp://</literal>流，参考 
      <literal>tcp://</literal>传输的上下文选项。对于 
      <literal>ftps://</literal>流，参考 
      <literal>ssl://</literal>传输的上下文选项。</simpara>
    </note>
  </section>
  <section xml:id="wrappers.php">
    <title>PHP 输入／输出流</title>
    <simpara>PHP 3.0.13 及以上版本，自 PHP 4.3.0 起支持 
    <filename>php://output</filename>和 
    <filename>php://input</filename>，自 PHP 5.0.0 起支持 
    <filename>php://filter</filename>。</simpara>
    <itemizedlist>
      <listitem>
        <simpara>
          <filename>php://stdin</filename>
        </simpara>
      </listitem>
      <listitem>
        <simpara>
          <filename>php://stdout</filename>
        </simpara>
      </listitem>
      <listitem>
        <simpara>
          <filename>php://stderr</filename>
        </simpara>
      </listitem>
      <listitem>
        <simpara>
          <filename>php://output</filename>
        </simpara>
      </listitem>
      <listitem>
        <simpara>
          <filename>php://input</filename>
        </simpara>
      </listitem>
      <listitem>
        <simpara>
          <filename>php://filter</filename>
        </simpara>
      </listitem>
    </itemizedlist>
    <simpara>
    <filename>php://stdin</filename>，
    <filename>php://stdout</filename>和 
    <filename>php://stderr</filename>允许访问 PHP 进程相应的输入或者输出流。</simpara>
    <simpara>
    <filename>php://output</filename>允许向输出缓冲机制写入数据，和 
    <function>print</function>与 
    <function>echo</function>的方式相同。</simpara>
    <simpara>
    <filename>php://input</filename>允许读取 POST 的原始数据。和 
    <varname>$HTTP_RAW_POST_DATA</varname>比起来，它给内存带来的压力较小，并且不需要任何特殊的 &amp;php.ini; 设置。
    <filename>php://input</filename>不能用于 
    <literal>enctype=&quot;multipart/form-data&quot;</literal>。</simpara>
    <simpara>
    <filename>php://stdin</filename>和 
    <filename>php://input</filename>是只读的，同时 
    <filename>php://stdout</filename>，
    <filename>php://stderr</filename>和 
    <filename>php://output</filename>是只写的。</simpara>
    <simpara>
    <filename>php://filter</filename>是一种设计用来允许过滤器程序在打开时成为流的封装协议。这对于单独具有完整功能的文件函数例如 
    <function>readfile</function>，
    <function>file</function>和 
    <function>file_get_contents</function>很有用，否则就没有机会在读取内容之前将过滤器应用于流之上。</simpara>
    <simpara>
    <filename>php://filter</filename>的目标接受随后的“参数”作为其“路径”的一部分。</simpara>
    <itemizedlist>
      <listitem>
        <para>
        <literal>/resource=&lt;stream to be filtered&gt;</literal>(
        <emphasis>required</emphasis>) 此参数必须位于 
        <filename>php://filter</filename>的末尾并且需要指向向要过滤的流。 
        <informalexample>
          <programlisting role="php">
            <![CDATA[
<?php
/* This is equivalent to simply:
   readfile("http://www.example.com");
   since 否 filters are actually specified */

readfile("php://filter/resource=http://www.example.com");
?>
]]>
</programlisting>
        </informalexample></para>
      </listitem>
      <listitem>
        <para>
        <literal>/read=&lt;filter list to apply to read chain&gt;</literal>(
        <emphasis>optional</emphasis>) 本参数接受一个或多个过滤器的名字，用管道字符 
        <literal>|</literal>分隔。 
        <informalexample>
          <programlisting role="php">
            <![CDATA[
<?php
/* This will output the contents of
   www.example.com entirely in uppercase */
readfile("php://filter/read=string.toupper/resource=http://www.example.com");

/* This will do the same as above
   but will also ROT13 encode it */
readfile("php://filter/read=string.toupper|string.rot13/resource=http://www.example.com");
?>
]]>
</programlisting>
        </informalexample></para>
      </listitem>
      <listitem>
        <para>
        <literal>/write=&lt;filter list to apply to write chain&gt;</literal>(
        <emphasis>optional</emphasis>) 本参数接受一个或多个过滤器的名字，用管道字符 
        <literal>|</literal>分隔。 
        <informalexample>
          <programlisting role="php">
            <![CDATA[
<?php
/* 下面的语句将使用 rot13 过滤器过滤 "Hello World"
   字符串，并写入当前目录下的 example.txt */
file_put_contents("php://filter/write=string.rot13/resource=example.txt","Hello World");
?>
]]>
</programlisting>
        </informalexample></para>
      </listitem>
      <listitem>
        <simpara>
        <literal>/&lt;filter list to apply to both chains&gt;</literal>(
        <emphasis>optional</emphasis>) 任何没有被 
        <literal>read=</literal>或 
        <literal>write=</literal>指定的过滤器会被同时应用于读写链。</simpara>
      </listitem>
    </itemizedlist>
    <para>
      <table>
        <title>封装协议摘要（对于 
        <literal>php://filter</literal>，是指被过滤的封装器摘要。）</title>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>属性</entry>
              <entry>支持</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>受限于 
              <link linkend="ini.allow-url-fopen">allow_url_fopen</link>。</entry>
              <entry>否</entry>
            </row>
            <row>
              <entry>允许读取</entry>
              <entry>仅在 
              <literal>php://stdin</literal>和 
              <literal>php://input</literal>中允许。</entry>
            </row>
            <row>
              <entry>允许写入</entry>
              <entry>仅在 
              <literal>php://stdout</literal>, 
              <literal>php://stderr</literal>, 和 
              <literal>php://output</literal>中允许。</entry>
            </row>
            <row>
              <entry>允许附加</entry>
              <entry>仅在 
              <literal>php://stdout</literal>, 
              <literal>php://stderr</literal>, 和 
              <literal>php://output</literal>中允许 (与写入相同)。</entry>
            </row>
            <row>
              <entry>允许同时读写</entry>
              <entry>否。这些封装器是单向的。</entry>
            </row>
            <row>
              <entry>支持 
              <function>stat</function></entry>
              <entry>否</entry>
            </row>
            <row>
              <entry>支持 
              <function>unlink</function></entry>
              <entry>否</entry>
            </row>
            <row>
              <entry>支持 
              <function>rename</function></entry>
              <entry>否</entry>
            </row>
            <row>
              <entry>支持 
              <function>mkdir</function></entry>
              <entry>否</entry>
            </row>
            <row>
              <entry>支持 
              <function>rmdir</function></entry>
              <entry>否</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </para>
  </section>
  <section xml:id="wrappers.compression">
    <title>压缩流</title>
    <simpara>
    <filename>zlib:</filename>PHP 4.0.4 - PHP 4.2.3（仅用于带 fopencookie 的系统）</simpara>
    <simpara>PHP 4.3.0 及以上版本支持 
    <filename>compress.zlib://</filename>和 
    <filename>compress.bzip2://</filename></simpara>
    <itemizedlist>
      <listitem>
        <simpara>
          <filename>zlib:</filename>
        </simpara>
      </listitem>
      <listitem>
        <simpara>
          <filename>compress.zlib://</filename>
        </simpara>
      </listitem>
      <listitem>
        <simpara>
          <filename>compress.bzip2://</filename>
        </simpara>
      </listitem>
    </itemizedlist>
    <simpara>
    <filename>zlib:</filename>和 
    <function>gzopen</function>的工作方式相象，只除了流可以用于 
    <function>fread</function>和其它文件系统函数。自 
    <literal>PHP 4.3.0</literal>起已不赞成使用，因为可能会和包含有“:”字符的文件名混淆，用 
    <filename>compress.zlib://</filename>代替。</simpara>
    <simpara>
    <filename>compress.zlib://</filename>和 
    <filename>compress.bzip2://</filename>各自等同于 
    <function>gzopen</function>和 
    <function>bzopen</function>，并且可以在不支持 fopencookie 的系统中使用。</simpara>
    <para>
      <table>
        <title>封装协议摘要</title>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>属性</entry>
              <entry>支持</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>受限于 
              <literal>allow_url_fopen</literal>。</entry>
              <entry>否</entry>
            </row>
            <row>
              <entry>允许读取</entry>
              <entry>是</entry>
            </row>
            <row>
              <entry>允许写入</entry>
              <entry>是</entry>
            </row>
            <row>
              <entry>允许附加</entry>
              <entry>是</entry>
            </row>
            <row>
              <entry>允许同时读写</entry>
              <entry>否</entry>
            </row>
            <row>
              <entry>支持 
              <function>stat</function></entry>
              <entry>否，请使用 
              <literal>file://</literal>封装器统计压缩文件。</entry>
            </row>
            <row>
              <entry>支持 
              <function>unlink</function></entry>
              <entry>否，请使用 
              <literal>file://</literal>封装器删除压缩文件。</entry>
            </row>
            <row>
              <entry>支持 
              <function>rename</function></entry>
              <entry>否</entry>
            </row>
            <row>
              <entry>支持 
              <function>mkdir</function></entry>
              <entry>否</entry>
            </row>
            <row>
              <entry>支持 
              <function>rmdir</function></entry>
              <entry>否</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </para>
  </section>
  <section xml:id="wrappers.glob">
    <title>Glob</title>
    <simpara>The 
    <filename>glob:</filename>stream wrapper is available since PHP 5.3.0.</simpara>
    <example>
      <title>Basic usage</title>
      <programlisting role="php">
        <![CDATA[
<?php
// Loop over all *.php files in ext/spl/examples/ directory
// and print the filename and its size
$it = new DirectoryIterator("glob://ext/spl/examples/*.php");
foreach($it as $f) {
    printf("%s: %.1FK\n", $f->getFilename(), $f->getSize()/1024);
}
?>
]]>
</programlisting>
      <screen>
        <![CDATA[
tree.php: 1.0K
findregex.php: 0.6K
findfile.php: 0.7K
dba_dump.php: 0.9K
nocvsdir.php: 1.1K
phar_from_dir.php: 1.0K
ini_groups.php: 0.9K
directorytree.php: 0.9K
dba_array.php: 1.1K
class_tree.php: 1.8K
]]>
</screen>
    </example>
    <para>
      <table>
        <title>Wrapper Summary</title>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>Attribute</entry>
              <entry>Supported</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>Restricted by 
              <link linkend="ini.allow-url-fopen">allow_url_fopen</link></entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Restricted by 
              <link linkend="ini.allow-url-include">allow_url_include</link></entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Allows Reading</entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Allows Writing</entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Allows Appending</entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Allows Simultaneous Reading and Writing</entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Supports 
              <function>stat</function></entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Supports 
              <function>unlink</function></entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Supports 
              <function>rename</function></entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Supports 
              <function>mkdir</function></entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Supports 
              <function>rmdir</function></entry>
              <entry>No</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </para>
  </section>
  <section xml:id="wrappers.phar">
    <title>Phar</title>
    <simpara>The 
    <filename>phar://</filename>stream wrapper is available since PHP 5.3.0. See 
    <link linkend="phar.using.stream">Phar stream wrapper</link>for detailed description.</simpara>
    <para>
      <table>
        <title>Wrapper Summary</title>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>Attribute</entry>
              <entry>Supported</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>Restricted by 
              <link linkend="ini.allow-url-fopen">allow_url_fopen</link></entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Restricted by 
              <link linkend="ini.allow-url-include">allow_url_include</link></entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Allows Reading</entry>
              <entry>Yes</entry>
            </row>
            <row>
              <entry>Allows Writing</entry>
              <entry>Yes</entry>
            </row>
            <row>
              <entry>Allows Appending</entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Allows Simultaneous Reading and Writing</entry>
              <entry>Yes</entry>
            </row>
            <row>
              <entry>Supports 
              <function>stat</function></entry>
              <entry>Yes</entry>
            </row>
            <row>
              <entry>Supports 
              <function>unlink</function></entry>
              <entry>Yes</entry>
            </row>
            <row>
              <entry>Supports 
              <function>rename</function></entry>
              <entry>Yes</entry>
            </row>
            <row>
              <entry>Supports 
              <function>mkdir</function></entry>
              <entry>Yes</entry>
            </row>
            <row>
              <entry>Supports 
              <function>rmdir</function></entry>
              <entry>Yes</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </para>
  </section>
  <section xml:id="wrappers.ssh2">
    <title>Secure Shell 2</title>
    <simpara>
    <filename>ssh2.shell://</filename>
    <filename>ssh2.exec://</filename>
    <filename>ssh2.tunnel://</filename>
    <filename>ssh2.sftp://</filename>
    <filename>ssh2.scp://</filename>PHP 4.3.0 及以上版本 (PECL)</simpara>
    <itemizedlist>
      <listitem>
        <simpara>
          <filename>ssh2.shell://user:pass@example.com:22/xterm</filename>
        </simpara>
      </listitem>
      <listitem>
        <simpara>
          <filename>ssh2.exec://user:pass@example.com:22/usr/local/bin/somecmd</filename>
        </simpara>
      </listitem>
      <listitem>
        <simpara>
          <filename>ssh2.tunnel://user:pass@example.com:22/192.168.0.1:14</filename>
        </simpara>
      </listitem>
      <listitem>
        <simpara>
          <filename>ssh2.sftp://user:pass@example.com:22/path/to/filename</filename>
        </simpara>
      </listitem>
    </itemizedlist>
    <note>
      <title>该封装器默认没有启用</title>
      <simpara>要使用 
      <filename>ssh2.*://</filename>封装器，必须安装 
      <link xlink:href="&amp;url.pecl.package;ssh2">SSH2</link>扩展。可以到 
      <link xlink:href="&amp;url.pecl;">PECL</link>下载。</simpara>
    </note>
    <simpara>除了接受传统 URI 的登录信息外，ssh2 封装器也重用主机 URL 的一部分的连接资源。</simpara>
    <example>
      <title>为活动连接打开流</title>
      <programlisting role="php">
        <![CDATA[
<?php
$session = ssh2_connect('example.com', 22);
ssh2_auth_pubkey_file($session, 'username', '/home/username/.ssh/id_rsa.pub',
                                            '/home/username/.ssh/id_rsa', 'secret');
$stream = fopen("ssh2.tunnel://$session/remote.example.com:1234", 'r');
?>
]]>
</programlisting>
    </example>
    <para>
      <table>
        <title>封装协议摘要</title>
        <tgroup cols="6">
          <thead>
            <row>
              <entry>属性</entry>
              <entry>ssh2.shell</entry>
              <entry>ssh2.exec</entry>
              <entry>ssh2.tunnel</entry>
              <entry>ssh2.sftp</entry>
              <entry>ssh2.scp</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>受限于 
              <link linkend="ini.allow-url-fopen">allow_url_fopen</link>。</entry>
              <entry>是</entry>
              <entry>是</entry>
              <entry>是</entry>
              <entry>是</entry>
              <entry>是</entry>
            </row>
            <row>
              <entry>允许读取</entry>
              <entry>是</entry>
              <entry>是</entry>
              <entry>是</entry>
              <entry>是</entry>
              <entry>是</entry>
            </row>
            <row>
              <entry>允许写入</entry>
              <entry>是</entry>
              <entry>是</entry>
              <entry>是</entry>
              <entry>是</entry>
              <entry>否</entry>
            </row>
            <row>
              <entry>允许附加</entry>
              <entry>否</entry>
              <entry>否</entry>
              <entry>否</entry>
              <entry>是 (若服务器支持)</entry>
              <entry>否</entry>
            </row>
            <row>
              <entry>允许同时读写</entry>
              <entry>是</entry>
              <entry>是</entry>
              <entry>是</entry>
              <entry>是</entry>
              <entry>否</entry>
            </row>
            <row>
              <entry>支持 
              <function>stat</function></entry>
              <entry>否</entry>
              <entry>否</entry>
              <entry>否</entry>
              <entry>是</entry>
              <entry>否</entry>
            </row>
            <row>
              <entry>支持 
              <function>unlink</function></entry>
              <entry>否</entry>
              <entry>否</entry>
              <entry>否</entry>
              <entry>是</entry>
              <entry>否</entry>
            </row>
            <row>
              <entry>支持 
              <function>rename</function></entry>
              <entry>否</entry>
              <entry>否</entry>
              <entry>否</entry>
              <entry>是</entry>
              <entry>否</entry>
            </row>
            <row>
              <entry>支持 
              <function>mkdir</function></entry>
              <entry>否</entry>
              <entry>否</entry>
              <entry>否</entry>
              <entry>是</entry>
              <entry>否</entry>
            </row>
            <row>
              <entry>支持 
              <function>rmdir</function></entry>
              <entry>否</entry>
              <entry>否</entry>
              <entry>否</entry>
              <entry>是</entry>
              <entry>否</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </para>
    <para>
      <table>
        <title>上下文选项</title>
        <tgroup cols="3">
          <thead>
            <row>
              <entry>名称</entry>
              <entry>用法</entry>
              <entry>默认</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
                <literal>session</literal>
              </entry>
              <entry>可重用预连接的 ssh2 连接资源</entry>
              <entry />
            </row>
            <row>
              <entry>
                <literal>sftp</literal>
              </entry>
              <entry>可重用预分配的 sftp 连接资源</entry>
              <entry />
            </row>
            <row>
              <entry>
                <literal>methods</literal>
              </entry>
              <entry>要使用的 Key exchange, hostkey, cipher, compression, 和 MAC 方法</entry>
              <entry />
            </row>
            <row>
              <entry>
                <literal>callbacks</literal>
              </entry>
              <entry></entry>
              <entry></entry>
            </row>
            <row>
              <entry>
                <literal>username</literal>
              </entry>
              <entry>连接的用户名</entry>
              <entry></entry>
            </row>
            <row>
              <entry>
                <literal>password</literal>
              </entry>
              <entry>密码认证时需要的密码</entry>
              <entry></entry>
            </row>
            <row>
              <entry>
                <literal>pubkey_file</literal>
              </entry>
              <entry>认证需要的 public key 文件名</entry>
              <entry></entry>
            </row>
            <row>
              <entry>
                <literal>privkey_file</literal>
              </entry>
              <entry>认证需要的 private key 文件名</entry>
              <entry></entry>
            </row>
            <row>
              <entry>
                <literal>env</literal>
              </entry>
              <entry>要设置的环境变量的数组</entry>
              <entry></entry>
            </row>
            <row>
              <entry>
                <literal>term</literal>
              </entry>
              <entry>当分配一个控制台时使用的终端类型</entry>
              <entry></entry>
            </row>
            <row>
              <entry>
                <literal>term_width</literal>
              </entry>
              <entry>当分配一个控制台时终端的宽度</entry>
              <entry></entry>
            </row>
            <row>
              <entry>
                <literal>term_height</literal>
              </entry>
              <entry>当分配一个控制台时终端的高度</entry>
              <entry></entry>
            </row>
            <row>
              <entry>
                <literal>term_units</literal>
              </entry>
              <entry>与 term_width 和 term_height 一同使用的单元</entry>
              <entry>
                <constant>SSH2_TERM_UNIT_CHARS</constant>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </para>
  </section>
  <section xml:id="wrappers.rar"
           xreflabel="rar:// wrapper">
    <title>Rar</title>
    <simpara>
    <filename>rar://</filename>Available since PECL rar 3.0.0</simpara>
    <itemizedlist>
      <listitem>
        <simpara>
          <filename>rar://&lt;url encoded archive name&gt;[*][#[&lt;url encoded entry name&gt;]]</filename>
        </simpara>
      </listitem>
    </itemizedlist>
    <note>
      <title>This wrapper is not enabled by default</title>
      <simpara>In order to use the 
      <filename>rar://</filename>wrapper, you must install the 
      <link xlink:href="&amp;url.pecl.package;rar">rar</link>extension available from 
      <link xlink:href="&amp;url.pecl;">PECL</link>.</simpara>
    </note>
    <simpara>The wrapper takes the url encoded path to the RAR archive (relative or absolute), an optional asterik (
    <literal>*</literal>), an optional number sign (
    <literal>#</literal>) and an optional url encoded entry name, as stored in the archive. Specifying an entry name requires the number sign; a leading forward slash in the entry name is optional.</simpara>
    <simpara>This wrapper can open both files and directories. When opening directories, the asterisk sign forces the directory entries names to be returned unencoded. If it&#39;s not specified, they will be returned url encoded ? the reason for this is to allow the wrapper to be correctly used with built-in functionality like the 
    <type>RecursiveDirectoryIterator</type>in the presence of file names that seem like url encoded data.</simpara>
    <simpara>If the pound sign and the entry name part are not included, the root of the archive will be displayed. This differs from regular directories in that the resulting stream will not contain information such as the modification time, as the root directory is not stored in an inidivual entry in the archive. The usage of the the wrapper with 
    <type>RecursiveDirectoryIterator</type>requires the number sign to be included in the URL when accessing the root, so that the URLs of the children may be constructed correctly.</simpara>
    <para>
      <example>
      <title>Traversing a RAR archive</title>
      <programlisting role="php">
        <![CDATA[
<?php

class MyRecDirIt extends RecursiveDirectoryIterator {
    function current() {
        return rawurldecode($this->getSubPathName()) .
                        (is_dir(parent::current())?" [DIR]":"");
        }
}

$f = "rar://" . rawurlencode(dirname(__FILE__)) .
        DIRECTORY_SEPARATOR . 'dirs_and_extra_headers.rar#';

$it = new RecursiveTreeIterator(new MyRecDirIt($f));

foreach ($it as $s) {
        echo $s, "\n";
}
?>
]]>
</programlisting>&amp;example.outputs.similar; 
      <screen>
        <![CDATA[
|-allow_everyone_ni [DIR]
|-file1.txt
|-file2_?.txt
|-with_streams.txt
\-? [DIR]
  |-?\%2Fempty%2E [DIR]
  | \-?\%2Fempty%2E\file7.txt
  |-?\empty [DIR]
  |-?\file3.txt
  |-?\file4_?.txt
  \-?\?_2 [DIR]
    |-?\?_2\file5.txt
    \-?\?_2\file6_?.txt
]]>
</screen></example>
    </para>
    <para>
      <example>
      <title>Opening an encrypted file (header encryption)</title>
      <programlisting role="php">
        <![CDATA[
<?php
$stream = fopen("rar://" .
    rawurlencode(dirname(__FILE__)) . DIRECTORY_SEPARATOR .
    'encrypted_headers.rar' . '#encfile1.txt', "r", false,
        stream_context_create(
                array(
                        'rar' =>
                                array(
                                        'open_password' => 'samplepassword'
                                )
                        )
                )
        );
var_dump(stream_get_contents($stream));
/* creation and last access date is opt-in in WinRAR, hence most
 * files don't have them */
var_dump(fstat($stream));
?>
]]>
</programlisting>&amp;example.outputs.similar; 
      <screen>
        <![CDATA[
string(26) "Encrypted file 1 contents."
Array
(
    [0] => 0
    [1] => 0
    [2] => 33206
    [3] => 1
    [4] => 0
    [5] => 0
    [6] => 0
    [7] => 26
    [8] => 0
    [9] => 1259550052
    [10] => 0
    [11] => -1
    [12] => -1
    [dev] => 0
    [ino] => 0
    [mode] => 33206
    [nlink] => 1
    [uid] => 0
    [gid] => 0
    [rdev] => 0
    [size] => 26
    [atime] => 0
    [mtime] => 1259550052
        [ctime] => 0
    [blksize] => -1
    [blocks] => -1
)
]]>
</screen></example>
    </para>
    <para>
      <table>
        <title>Wrapper Summary</title>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>Attribute</entry>
              <entry>Supported</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>Restricted by 
              <link linkend="ini.allow-url-fopen">allow_url_fopen</link></entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Restricted by 
              <link linkend="ini.allow-url-include">allow_url_include</link></entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Allows Reading</entry>
              <entry>Yes</entry>
            </row>
            <row>
              <entry>Allows Writing</entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Allows Appending</entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Allows Simultaneous Reading and Writing</entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Supports 
              <function>stat</function></entry>
              <entry>Yes</entry>
            </row>
            <row>
              <entry>Supports 
              <function>unlink</function></entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Supports 
              <function>rename</function></entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Supports 
              <function>mkdir</function></entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Supports 
              <function>rmdir</function></entry>
              <entry>No</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </para>
    <para>
      <table>
        <title>Context options</title>
        <tgroup cols="3">
          <thead>
            <row>
              <entry>Name</entry>
              <entry>Usage</entry>
              <entry>Default</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
                <literal>open_password</literal>
              </entry>
              <entry>The password used to encrypt the headers of the archive, if any. WinRAR will encrypt all the files with the same password as the headers password when the later is present, so for archives with encrypted headers, 
              <literal>file_password</literal>will be ignored.</entry>
              <entry />
            </row>
            <row>
              <entry>
                <literal>file_password</literal>
              </entry>
              <entry>The password used to encrypt a file, if any. If the headers are also encrypted, this option will be ignored in favor of 
              <literal>open_password</literal>. The reason there are two options is to cover the possibility of supporting archives with different headers and file passwords, should those archives arise. Note that if the archive does not have its headers encrypted, 
              <literal>open_password</literal>will be ignored and this option must be used instead.</entry>
              <entry />
            </row>
            <row>
              <entry>
                <literal>volume_callback</literal>
              </entry>
              <entry>A callback to determine the path of missing volumes. See 
              <methodname>RarArchive::open</methodname>for more information.</entry>
              <entry />
            </row>
          </tbody>
        </tgroup>
      </table>
    </para>
  </section>
  <section xml:id="wrappers.audio">
    <title>音频流</title>
    <simpara>
    <filename>ogg://</filename>PHP 4.3.0 及更高版本 (PECL)</simpara>
    <itemizedlist>
      <listitem>
        <simpara>
          <filename>ogg://soundfile.ogg</filename>
        </simpara>
      </listitem>
      <listitem>
        <simpara>
          <filename>ogg:///path/to/soundfile.ogg</filename>
        </simpara>
      </listitem>
      <listitem>
        <simpara>
          <filename>ogg://http://www.example.com/path/to/soundstream.ogg</filename>
        </simpara>
      </listitem>
    </itemizedlist>
    <note>
      <title>此封装器默认没有启用</title>
      <simpara>要使用 
      <filename>ogg://</filename>封装器，您必须安装 
      <link xlink:href="&amp;url.pecl.package;oggvorbis">OGG/Vorbis</link>扩展。可用在 
      <link xlink:href="&amp;url.pecl;">PECL</link>找到。</simpara>
    </note>
    <simpara>通过 
    <filename>ogg://</filename>封装器打开的文件，被当作使用 OGG/Vorbis 编码压缩的音频文件来读取。类似地，通过 
    <filename>ogg://</filename>封装器写入或附加的文件，被当作使用 OGG/Vorbis 编码压缩的音频文件来写入。 
    <function>stream_get_meta_data</function>，当使用在打开读取的 OGG/Vorbis 文件时，返回该文件流的详细信息，包括：
    <parameter>vendor</parameter>标签， 
    <parameter>comments</parameter>， 
    <parameter>channels</parameter>, 
    <parameter>rate</parameter>采样率, 和编码范围。编码范围用如下参数描述： 
    <parameter>bitrate_lower</parameter>, 
    <parameter>bitrate_upper</parameter>, 
    <parameter>bitrate_nominal</parameter>, 和 
    <parameter>bitrate_window</parameter>。</simpara>
    <para>
      <table>
        <title>封装协议摘要</title>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>属性</entry>
              <entry>支持</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>受限于 
              <link linkend="ini.allow-url-fopen">allow_url_fopen</link>。</entry>
              <entry>否</entry>
            </row>
            <row>
              <entry>允许读取</entry>
              <entry>是</entry>
            </row>
            <row>
              <entry>允许写入</entry>
              <entry>是</entry>
            </row>
            <row>
              <entry>允许附加</entry>
              <entry>是</entry>
            </row>
            <row>
              <entry>允许同时读写</entry>
              <entry>否</entry>
            </row>
            <row>
              <entry>支持 
              <function>stat</function></entry>
              <entry>否</entry>
            </row>
            <row>
              <entry>支持 
              <function>unlink</function></entry>
              <entry>否</entry>
            </row>
            <row>
              <entry>支持 
              <function>rename</function></entry>
              <entry>否</entry>
            </row>
            <row>
              <entry>支持 
              <function>mkdir</function></entry>
              <entry>否</entry>
            </row>
            <row>
              <entry>支持 
              <function>rmdir</function></entry>
              <entry>否</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </para>
    <para>
      <table>
        <title>上下文选项</title>
        <tgroup cols="3">
          <thead>
            <row>
              <entry>名称</entry>
              <entry>用法</entry>
              <entry>默认</entry>
              <entry>模式</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
                <literal>pcm_mode</literal>
              </entry>
              <entry>读取时使用如下 PCM 编码之一: 
              <constant>OGGVORBIS_PCM_U8</constant>, 
              <constant>OGGVORBIS_PCM_S8</constant>, 
              <constant>OGGVORBIS_PCM_U16_BE</constant>, 
              <constant>OGGVORBIS_PCM_S16_BE</constant>, 
              <constant>OGGVORBIS_PCM_U16_LE</constant>, 和 
              <constant>OGGVORBIS_PCM_S16_LE</constant>。 (8 或 16 位，签名或未签名，大或小的 endian)</entry>
              <entry>OGGVORBIS_PCM_S16_LE</entry>
              <entry>读取</entry>
            </row>
            <row>
              <entry>
                <literal>rate</literal>
              </entry>
              <entry>输入数据的采样率，单位为 Hz</entry>
              <entry>44100</entry>
              <entry>写入/附加</entry>
            </row>
            <row>
              <entry>
                <literal>bitrate</literal>
              </entry>
              <entry>若给的值为整数，则是用固定的比特率进行编码。(16000 到 131072) 若给的值为浮点数，则使用可变的比特率品质。(-1.0 到 1.0)</entry>
              <entry>128000</entry>
              <entry>写入/附加</entry>
            </row>
            <row>
              <entry>
                <literal>channels</literal>
              </entry>
              <entry>要编码的声道的数量，典型为 1 (单声道), 或 2 (立体声)。最高支持 16 声道。</entry>
              <entry>2</entry>
              <entry>写入/附加</entry>
            </row>
            <row>
              <entry>
                <literal>comments</literal>
              </entry>
              <entry>编码到音轨头部的字符串数组。</entry>
              <entry />
              <entry>写入/附加</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </para>
  </section>
  <section xml:id="wrappers.expect">
    <title>处理交互式流</title>
    <simpara>
    <filename>expect://</filename>PHP 4.3.0 及更高版（PECL）</simpara>
    <itemizedlist>
      <listitem>
        <simpara>
          <filename>expect://command</filename>
        </simpara>
      </listitem>
    </itemizedlist>
    <note>
      <title>本封装协议默认未启用</title>
      <simpara>要使用 
      <filename>expect://</filename>封装协议，必须安装 
      <link xlink:href="&amp;url.pecl.package;expect">Expect</link>扩展库，其来自 
      <link xlink:href="&amp;url.pecl;">PECL</link>。</simpara>
    </note>
    <simpara>通过 
    <filename>expect://</filename>封装协议打开的流提供了通过 PTY 访问进程的 stdio，stdout 和 stderr 的许可。</simpara>
    <para>
      <table>
        <title>封装协议概要</title>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>属性</entry>
              <entry>支持</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>受 
              <link linkend="ini.allow-url-fopen">allow_url_fopen</link>限制</entry>
              <entry>否</entry>
            </row>
            <row>
              <entry>允许读取</entry>
              <entry>是</entry>
            </row>
            <row>
              <entry>允许写入</entry>
              <entry>是</entry>
            </row>
            <row>
              <entry>允许附加</entry>
              <entry>是</entry>
            </row>
            <row>
              <entry>允许同时读取和写入</entry>
              <entry>否</entry>
            </row>
            <row>
              <entry>支持 
              <function>stat</function></entry>
              <entry>否</entry>
            </row>
            <row>
              <entry>支持 
              <function>unlink</function></entry>
              <entry>否</entry>
            </row>
            <row>
              <entry>支持 
              <function>rename</function></entry>
              <entry>否</entry>
            </row>
            <row>
              <entry>支持 
              <function>mkdir</function></entry>
              <entry>否</entry>
            </row>
            <row>
              <entry>支持 
              <function>rmdir</function></entry>
              <entry>否</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </para>
  </section>
</appendix>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
