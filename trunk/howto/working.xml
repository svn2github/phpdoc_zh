<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision: 1.4 $ -->
<!-- $AUTHOR$ -->
<!-- EN-Revision: 1.22 Maintainer: Gregory Status: ready -->
 <chapter id="chapter-files">
  <title>文档总则</title>

  <para>
   要生成手册的一些输出格式需要很多重要的文件，这些文件存有生成这些格式所需要的的重要文本和信息。以下是您需要了解的最重要的几个文件：
   <variablelist>
    <varlistentry>
     <term><filename>manual.xml</filename></term>
     <listitem>
      <simpara>
       该文件是文档的核心文件，是文档其它各个部分的纽带，它包含有各部分的标题和各章节之间的相关信息。当您运行 configure 脚本时，它将由 <filename>manual.xml.in</filename> 自动生成。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><filename>entities/file-entities.ent</filename></term>
     <listitem>
      <simpara>
       该文件包含有被所有文件所使用的实体定义。XML 文档所使用的实体是由自动配置脚本(Configure)自动生成的，因此<emphasis>请您不要编辑该文件</emphasis>！
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><filename>entites/global.ent</filename></term>
     <listitem>
      <simpara>
       所有 XML 文档内部文档实体的全局定义文件。该文件存储了所有的外部链接、电子邮件地址以及“宏定义”。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><filename>dsssl/*</filename></term>
     <listitem>
      <simpara>
       我们用来生成手册各种格式的 DSSSL 样式表单。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><filename>xsl/*</filename></term>
     <listitem>
      <simpara>
       从 XML 源文档生成 HTML、phpweb、超文本帮助和可打印版本所需要的 XSL 样式表单。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><filename>your_language/language-defs.ent</filename></term>
     <listitem>
      <simpara>
       包含有您所使用的语言版本的特有实体定义。其中有一些是主要部分的标题，当然您也可以添加该语言版本特有的实体定义。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><filename>your_language/language-snippets.ent</filename></term>
     <listitem>
      <simpara>
       XML 文档中常用到的一些固定用语的定义。包括，“警告”、“注意”等。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><filename>your_language/translation.xml</filename></term>
     <listitem>
      <simpara>
       该文件用来保存主要的翻译信息，例如对于翻译者的列表和简介，正在被翻译或者修改的文件的列表等。该文件并不存在于英文版的目录树中。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><filename>your_language/some_directory</filename></term>
     <listitem>
      <simpara>
       PHP 手册 XML 源文档是用目录的形式组织的。其中最大的一个部分是扩展模块的参考，这些内容被存储在您所使用的语言版本的 <filename>reference</filename> 目录下。您可能也发现了英文版目录下的 <filename>functions</filename> 目录，该目录下的内容已经不在被手册使用了，放在那里仅供手册的翻译者参考。
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </chapter>
 
 <chapter id="chapter-conventions">
  <title>一些约定</title>

  <para>
   当您在编辑 phpdoc 的 XML 文档时，应该遵守以下的约定，以减轻和协调整个团队在资源库下的工作。
  </para>
  
  <para>
   <orderedlist>
    <listitem><simpara>
     请在所有主要的 section 标记（包括手册的各个部分、章节和段落等）加上 ID 属性。HTML 样式表单将会在这些 ID 后对 HTML 文件进行命名。
    </simpara></listitem>
    <listitem><simpara>
     函数参考的 ID 必须以 <literal>function.mysql-connect</literal> 指明，即函数的格式必须符合其命名规则，例如全部字母小写等。注意由于下划线(_)不能用在 ID 属性中，因此请用横杠(-)来代替它们。
    </simpara></listitem>
    <listitem><simpara>
     函数参考部分的 ID（即<literal>&lt;reference id="..."></literal>）请使用如下格式：'ref.category'，例如：'ref.ftp'。
    </simpara></listitem>
    <listitem><simpara>
     在用 programlisting 标签添加 PHP 范例代码时，请加上名为 role 的属性，并将其值设为"PHP"。请不要在任何其它的 PHP 范例代码或者输出中使用 role 属性，它是 PHP 源代码的保留字。该 role 属性用来检测 PHP 的代码和高亮设置。
    </simpara></listitem>
    <listitem><simpara>
     在 XML 代码中，programlisting 标签中范例的内容请从第 0 列开始写，即顶格写。
     <!-- Indenting,
     bracketing and naming conventions in examples should
     adhere to the PEAR coding standards. -->
    </simpara></listitem>
    <listitem><simpara>
     在所有的范例中，请使用 <literal>&lt;?php ... ?&gt;</literal> 替代 <literal>&lt;? ... ?&gt;</literal>，并请使用 <literal>&lt;![CDATA[ ... ]]&gt;</literal> 来包含范例，因为在该标记中，无需进行代码转换，即将范例中的 <literal>&lt;</literal> 转换为 <literal>&amp;lt;</literal> 等。同时，这样的范例的可读性更强，并更容易管理。
    </simpara></listitem>
    <listitem><simpara>
     范例中请勿使用不规范的别名和语法。
    </simpara></listitem>
    <listitem><para>
     如果某个范例涉及到新版本的 PHP，加上如下标记将更有利于读者阅读：
     <programlisting role="php">
foo("bar", "baz"); // 第二个参数为 PHP 4.0.3 版本的新增参数
     </programlisting>
     新参数在 XML 正文中用以下方式表明：
     <programlisting>
<![CDATA[
<note>
 <simpara>
  第二个参数为 PHP 4.0.3 版本的新增参数
 </simpara>
</note>
]]>
      </programlisting>
    </para></listitem>
    <listitem><simpara>
     PHP 语法常量中的 true、false 和 null 应写成 <literal>&amp;true;</literal>、<literal>&amp;false;</literal> 和 <literal>&amp;null;</literal>。另外还有一些其它的定义，如 <literal>&amp;php.ini;</literal> 等，它们被保存在 <filename>global.ent</filename> 文件中。
    </simpara></listitem>
    <listitem><simpara>
     英文版本的 XML 文件中在 <literal>&lt;?xml</literal> 标记符的第二行应该有形如 <literal>&lt;!-- &dollar;Revision --></literal> 的注释。该注释对于非英文版本的文件不是必需的。
    </simpara></listitem>
    <listitem><simpara>
     请尽量避免修改英文版文件中的空格。由于翻译的需要，保存所有实际修改的修改记录是非常重要的。如果您<emphasis>真的</emphasis>需要修改空格，请在单独的提交命令中进行，并明确地加上类似“WS fix”或者“Whitespace fix”的注释。
    </simpara></listitem>
    <listitem><simpara>
     请不要使用制表符(TAB)，即时是在范例的程序代码中。XML 在每一个级别的缩进中使用一个空格，而程序代码范例的缩进应使用四个空格。
    </simpara></listitem>
    <listitem><simpara>
     请在文件中仅使用 LF (Line Feed) 作为换行符，这是 Unix 标准。请不要使用 CR LF（Windows 标准）或者 CR（Mac标准），即时是在编辑 Windows 特定的文件时。这将减轻编辑所需的工作。
    </simpara></listitem>
    <listitem>
     <simpara>
      在文档中，变量类型应表示为：<literal>boolean</literal> (原型为 <literal>bool</literal>)、<literal>integer</literal>(原型为 <literal>int</literal>)、<literal>float</literal> (<emphasis>而非 double！</emphasis>)、<literal>array</literal>、<literal>object</literal> (<emphasis>而非 class！</emphasis>)、<literal>resource</literal> 和 <literal>null</literal>（全部小写）。
     </simpara>

     <simpara>
      在类型原型中，您也可以使用 <literal>mixed</literal> （多变量类型），或者 <literal>number</literal> （integer 或者 float），或者 <literal>scalar</literal>（boolean、integer、float 或者 string）。返回类型用 <literal>mixed</literal> 类型<footnote><simpara>或者您有更好的建议？我并不喜欢这样的方式，不仅仅是<literal>函数</literal>！或者有其它类似的方法？――Jeroen</simpara></footnote>， 因为它既可以是 array，也可以是 string。
     </simpara>
     
     <simpara>
      如果函数的返回值是某一个确定的类型（非 boolean），且该用 FALSE 来表示函数出错时，请不要使用 <literal>mixed</literal> 类型。当函数用 FALSE 来表示函数出错时，请用最原始的返回类型作为该函数的返回类型，并请在注释中说明。如果函数成功返回 TRUE，失败返回 FALSE，请使用 <literal>&amp;return.success;</literal>。
     </simpara>

     <simpara>
      如果函数不需要任何参数，请用 <literal>&lt;void/></literal> 来替代 <literal>&lt;parameter>void&lt;/parameter></literal>，因为前者才是正确的 DocBook XML 标记符。
     </simpara>
     
     <simpara>
      如果函数未定义返回值，请使用 <literal>void</literal>。
     </simpara>
    </listitem>
    <listitem><simpara>
     在原型中，如果存在多种可能性（请确认它们的确是不相同的），您可以把两种都写上。作为范例，请查阅 <literal>en/reference/math/functions/min.xml</literal>。
    </simpara></listitem>
    <listitem><simpara>
     别名问题：如果是为了提供参考，请写明：<literal>“&lt;function>函数名&lt;/function>的同名函数”</literal>。<emphasis>请不要将函数的别名加入列表，而只需简单的写明：</emphasis><literal>“该函数是&lt;function>原函数名&lt;/function>的一个同名函数”</literal>即可。这样，读者就能直接访问实体函数 <literal>ref.foo</literal>。
    </simpara></listitem>
   </orderedlist>
  </para>
 </chapter>

 <chapter id="chapter-what-to-document">
  <title>哪些内容需要加入文档？</title>

  <para>
   <orderedlist>
    <listitem>
     <simpara>
      只有主要的函数才需要包含在文档中。非原始的函数可在文档中被提及，但不应该作为单独的函数在文档中出现，而应该在与它们相关的原函数中以同名函数列出以作为参考。但是，函数名完全不相同的函数，应该作为独立的项目列出，以方便读者查询。附录的 <filename>aliases.xml</filename> 文件储存了所有在别的地方没有列入文档的函数别名。
     </simpara>
       
     <simpara>
      例如， <literal>mysql_db_name</literal> 和 <literal>mysql_dbname</literal> 在文档中应该被作为相同的函数列在文档中，后者作为前者的别名；而 <literal>show_source</literal> 和 <literal>highlight_file</literal> 将被当作两个不同的函数（实际上其中一个是函数别名）列在文档中，由于它们的函数名完全不同，在找其中一个函数名时，另一个不太可能被找到。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      函数名在新建或者在列入文档时必须全部使用小写字母，并用一个下划线隔开函数名中的每个词组。不包含下划线的函数名通常都是为了保证系统的向下兼容性。在将函数列入文档时，应使用下划线将函数名中的词组隔开，并将原函数名作为函数的别名列出。
     </simpara>
     <note>
      <para>
       为函数命名是 PHP 开发者的工作，PHP 文档的编撰者仅需将开发者提供的函数名列入文档。如果您认为某个函数的名称不恰当，请发电子邮件到邮件列表 <ulink url="&email.phpdev;">&email.phpdev;</ulink>，以展开一个话题进行讨论。
      </para>
     </note>
     <simpara>
      好的函数名： <literal>mcrypt_enc_self_test</literal>, <literal>mysql_list_fields</literal>
     </simpara>
     <simpara>
      可用但不推荐的函数名： <literal>mcrypt_module_get_algo_supported_key_sizes</literal>（应该是 <literal>mcrypt_mod_get_algo_sup_key_sizes</literal>？），<literal>get_html_translation_table</literal>（应该是 <literal>html_get_trans_table</literal>？）
     </simpara>
     <simpara>
      错误的函数名： <literal>hw_GetObjectByQueryCollObj</literal>, <literal>pg_setclientencoding</literal>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      为保证向下兼容性而保留的函数名应该在其当前的主函数名下列出，而不应该被作为独立的函数出现在文档中。向下兼容的函数及其文档应该被不时的被维护，以保证它们的代码被适当地保存为 PHP 代码集的一部分。请查阅附录的 <filename>aliases.xml</filename> 文件。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      和冗长的范例比起来，我们更提倡使用简短而完整的代码范例。如果某函数确实十分复杂，放置较长范例的更适当地位置是在其所在章节的介绍文字中。因为该范例同时也可以对该章节中其它的函数起到解释的作用。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      我们提倡简洁的阐述。在参考章节中，对每个函数进行冗长的描述是不恰当地。请尽量使用勘误表注释，比起冗长的文档，它们更容易将问题阐述清楚；在一个章节中，过长的文档更容易引起混淆。<footnote><simpara>到目前为止，还没有人抱怨某个章节的解释太长。因此，不用担心您写的解释是不是太冗长，这总比简单的给每个函数加上一个例程要好。:)</simpara></footnote>
     </simpara>
    </listitem>
   </orderedlist>
  </para>
 </chapter>
 
 <chapter id="chapter-skeletons">
  <title>文档架构</title>

  <para>
   以下是当您新增一篇文档时应该使用的一些格式。
  </para>
  <para>
   <example>
    <title>lang/reference/EXTNAME/functions 目录下关于函数的参考文件</title>
    <programlisting>
<![CDATA[
 <reference>
  <title></title>
  <titleabbrev></titleabbrev>

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
]]>    
    </programlisting>
   </example>
  </para>

  <para>
   <example>
    <title>函数参考条目</title>
    <programlisting>
<![CDATA[
  <refentry id="function.">
   <refnamediv>
    <refname></refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>描述</title>
    <methodsynopsis>
      <type>返回类型</type> <methodname>函数名</methodname>
      <methodparam><type>参数类型 1</type> <parameter>参数名称 1</parameter></methodparam>
      <methodparam><type>参数类型 2</type> <parameter>参数名称 2</parameter></methodparam>
      <methodparam choice='opt'><type>参数类型 3</type> <parameter>参数名称 3</parameter></methodparam>
      <!-- 当没有参数时，请使用 <void /> -->
    </methodsynopsis>
    <simpara>
     简单的介绍段落，不用包含任何需要进行细致地解释和规划的内容。
    </simpara>
    <para>
     主要的介绍段落，可包含需要的任何内容。例如
     <example>
      <title>代码范例</title>
      <programlisting role="php">
// 请在此处加入 CDATA 标记，查阅本页底部的说明

/* 列出 PHP 代码时请加上 role="php" 属性。如果要表达其它类别的代码或列表，请查阅 <screen>
 * 以及其它 DocBook 元素。在列出其它类别的程序列表时，请使用对应的 role 属性，例如：sql、
 * httpd、ini、shell 或者 http。
 */

/* 在缩进时请务必使用空格，而不要使用制表符 (TAB)！
 * 请不要用在行首加空格的方法来让代码右对其，这可以用样式表来实现。
 */
 
// 一个函数的范例
function some_code($foo)
{
    // 用四个空格来完成缩进
}

// 在需要用到大括号“{}”的范例中，请务必加上所有的大括号，尽管它们可能并不是程序必须的。
if (some_code($foo) == "foo") {
    echo "foo";
} elseif (some_code($foo) == "bar") {
    echo "bar";
} else {
    echo "No foo, no bar";
}

// 请在此处加上与前面 CDATA 的起始符对应的结束符，请查阅本页底部的说明
      </programlisting>
     </example>

     该处放置在范例程序结束后可能需要继续说明的文字。

     以下是在正文中使用列表的方法：

     <itemizedlist>
      <listitem>
       <simpara>
        列表元素必须包含一个容器元素，比如 simpara 或者 para。（还有很多其它的元素可用，请查阅 DocBook 参考中的 listitem 元素。）
       </simpara>
      </listitem>

      <listitem>
       <simpara>
        每一个列表项目必须包含一个简短段落或者一个标准段落。
       </simpara>
      </listitem>
     </itemizedlist>
     
     <itemizedlist>
      <listitem>
       <para>
        如果需要使用子列表，您需要使用如下格式：
        <orderedlist>
         <listitem><simpara> 第一个列表项目</simpara></listitem>
         <listitem><simpara> 第二个列表项目</simpara></listitem>
        </orderedlist>
        您也可以继续为刚才为完成的子列表添加项目：
        <orderedlist>
         <listitem><simpara> 第三个列表项目 </simpara></listitem>
         <listitem><simpara> 第四个列表项目 </simpara></listitem>
        </orderedlist>
       </para>
      </listitem>
     </itemizedlist>

    </para>
    <simpara>
     一篇函数的文档须如下包含一个“另见”列表：
    </simpara>
    <simpara>
     另见 <function>stripslashes</function> 和 <function>quotemeta</function>。
    </simpara>
   </refsect1>
  </refentry>
]]>    
    </programlisting>
   </example>
  </para>
  <para>
   由于一些技术原因，CDATA 的起始符 <literal>&lt;![CDATA[</literal> 及其结束符 <literal>]]&gt;</literal> 没有包含在以上代码中，您只需在指明的地方替换它们即可。用这些标记符能帮助我们写出更清晰的范例代码。
  </para>
  <para>
   对于以上模板中未提及的部分，请参考 <filename>phpdoc</filename> CVS 模块下已经存在的文件。如果您无法确定是否应该加入一个新的文件，请到 <link linkend="chapter-maillist">phpdoc 邮件列表</link>询问。如果您有在模板中加入任何新架构的建议，请向我们提出。
  </para>
 </chapter>

 <chapter id="chapter-translation">
  <title>翻译者相关信息</title>

  <para>
   目前 PHP 文档存在很多语种的翻译版本。有些语种是由一组翻译人员来维护的（如德语），有些则是由一个人完成的（如日语）。作为一个翻译者需要知道很多东西，尽管它们都十分简单。
  </para>
  
  <sect1 id="translation-starting">
   <title>开始一个新语种的翻译工程</title>
   <para>
    目前开始一个新语种的翻译需要如下几个步骤：
    <itemizedlist>
     <listitem>
      <simpara>
       请查询<link linkend="chapter-maillist">邮件列表</link>，确认该翻译工程是否已经在进行。如果是，请跳过以下步骤，并通过该语言翻译工程的邮件列表与其它正在进行此项工作的翻译者取得联系。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <link linkend="cvs-account">申请一个 CVS 账号</link>。在申请时，请说明您希望开始一个新语种的翻译工作。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       当您得到您的 CVS 账号以后，请发电子邮件到 <ulink url="mailto:&email.group.php;">&email.group.php;</ulink> 要求为新的翻译工程建立一个新的 <literal>phpdoc-LANGCODE</literal> CVS 模块，以及一个新的 <literal>doc-LANGCODE</literal> 邮件列表。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       按 <link linkend="chapter-cvs">CVS</link> 一章中所描述的方法下载 <filename>phpdoc</filename> 和 <literal>phpdoc-LANGCODE</literal> 模块（在实际下载时，需要用<literal>phpdoc-LANGCODE-dir</literal> 来指代您的翻译模块）。
      </simpara>
     </listitem>
    <listitem>
      <simpara>
       将 <filename>en/language-defs.ent</filename> 和 <filename>en/language-snippets.ent</filename> 两个文件拷贝到新建立的 <literal>phpdoc-LANGCODE</literal> 模块的根目录下（也就是您文件系统中的 <literal>phpdoc/LANGCODE</literal> 目录），并翻译这两个文件的内容。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       拷贝英文版本目录下的所有文件并开始翻译它们（请不要上传未翻译的文件），每次您新增一个文件，都需要重新运行 configure 配置脚本。请查阅“<link linkend="translation-revtrack">修订版本跟踪</link>”以获取关于如何减轻您在跟踪英文版本和您所翻译文件的版本时工作的信息。
      </simpara>
     </listitem>
    </itemizedlist>
   </para>

   <para> 
    以下是在建立一个新的翻译工程前需要慎重考虑的几个重要问题：
    <itemizedlist>
     <listitem>
      <simpara>
       您是否能够独自建立并完成整个手册的翻译工程？如果不能，您是否能够建立一个团队（我们也建议以这种方式）来完成该语种的翻译工程？
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       您是否确认您的语言和文字（包括字母、字形或者单字）已经被 DocBook 样式表单所支持？如果您不清楚，请到<link linkend="chapter-maillist">邮件列表</link>询问。
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
  </sect1>

  <sect1 id="translation-joining">
   <title>加入一个翻译工程</title>
   <para>
    如果您发现本手册您要的语种的翻译工程已经建立，并且您希望加入到该团队中，请发电子邮件到对应的<link linkend="chapter-maillist">邮件列表</link>以获知谁负责该翻译工作。
   </para>
   <para>
    如果您是 PHP 项目的新手，并且没有 CVS 账号，您需要在加入该工作之前<link linkend="cvs-account">申请一个 CVS 账号</link>。尽管在很多翻译工程中，只有很少的一些人有 CVS 账号，并由他们来提交其它翻译者翻译的文件，但这并不是理想的方法。
   </para>
  </sect1>

  <sect1 id="translation-practical">
   <title>给翻译者的一些忠告</title>
   <para>
    以下是我们为翻译者积累的一些建议：
    <itemizedlist>
     <listitem>
      <simpara>
       请仅将已经翻译的文件提交到您所工作的语言的目录。在文档的生成过程中，系统会自动用英文版的文件替代您尚未提交的文件。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       请不要将您已经翻译好的文件提交到英文版本的目录树中。请在提交您的文件前再三检查，以确保您的文件将被提交到正确的位置。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       请建立起一个系统以便您和本语种工程中的其它工作者进行协调沟通。目前我们有两个系统在同时使用，即 Translator 文件和修订版本注释。请查阅“<link linkend="translation-revtrack">修订版本跟踪</link>”一节以获取更多信息。
      </simpara>
     </listitem>
     <listitem>
      <simpara> 
       在翻译过程中，您可能会发现英文版本手册中的一些错误。如果您能确信这是个应该修正的错误，您可以自己来修正它；如果您无法确认您所发现的是否是错误，请向<link linkend="chapter-maillist">邮件列表</link>询问。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       我们在 <filename>global.ent</filename> 文件中定义了适用于整个手册的全句实体。如果您希望在自己定义仅用于您工作语言的的实体，我们建议您将它们添加到 <filename>your_language/language-defs.ent</filename> 文件中。作为范例，请查看 <filename>hu/language-defs.ent</filename>。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       请不要翻译实体名，例如 &amp;true;、&amp;return.success;等，它们将会被相应的文本替代。翻译这些实体名将导致错误。类似的，请不要翻译任何标记符中的内容（例如 &lt;computeroutput&gt;），以及 XML 文档中的注释（例如每个文件末尾的注释内容）。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       请确认您对您语言目录下文件所做的是正确的修改。您可以指出您语言中的非法字符。请在提交文件前务必进行 <link linkend="chapter-validating">make test</link> 测试。指出您语言版本手册中的错误，能够停止在线的自动更新机制，直到您改正了这些错误。
      </simpara>
     </listitem>
     <listitem>
      <simpara> 
       如果您语言版本的手册能够在 PHP 的镜像站点上被浏览，您可以下载您语言版本的 <filename>build.log.gz</filename> 文件，该文件是在建立您语言版本手册的几种可下载版本及在线手册过程中由系统生成的日志。要下载简体中文版本，该文件是 <ulink url="&url.buildlog.zh;">&url.buildlog.zh;</ulink>。可以将“zh”替换成其它的语言代码来查看其它语言的日志。该文件提供了诸如生成时间及生成过程中发生的错误（如果确实发生）等信息。如果手册没有被在线自动更新，我们推荐您查看该文件以找出问题所在。
      </simpara>
      <simpara>
       注意，有些浏览器，如 MSIE 会将 gz 文件解压缩并以文本方式将日志文件的内容显示在浏览器窗口中。这也就是说，如果您用 MSIE 来下载 gz 文件，已下载的文件可能已经被转换成了纯文本的日志文件，尽管它的扩展名仍然是 .gz。
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
  </sect1>
  
  <sect1 id="translation-revtrack">
   <title>修订版本追踪</title>
   <para>
    PHP 文档的翻译工作，不仅仅只是翻译英文文档的内容，然后提交翻译的结果。您需要时常更新已经翻译好的文件，使它们的内容和最新的英文版文件的内容保持一致。您需要加入 phpdoc <link linkend="chapter-maillist">邮件列表</link>以获取英文目录下的文件的更新信息。如果您从来不更新您的文件，则您所做的翻译工作最后可能会付之东流。同时，您还需要加入您参加的翻译工程对应语言的邮件列表，以获得提交文件时 CVS 自动生成的信息，并参与该翻译工程的讨论。
   </para>
   <para>
    更新一个外语语种的文件不是一件容易的工作，因为您需要知道谁在什么时候翻译了哪些文件，否则您无法知道要在文档的什么地方进行修改和更新。我们有两套系统来跟踪 <literal>phpdoc</literal> 文件的修订版本和它们被更新的日期。
   </para>

   <sect2 id="translation-revcheck-translators">
    <title>Translator 文件</title>
    
    <para>
     有些翻译者在它们翻译工程的根目录下建立一个 <filename>Translators</filename> 文件来跟踪修订版本。该文件可以包含翻译者的姓名、电子邮件地址、 CVS 用户名以及已经翻译过的文件列表。
    </para>
    
    <para> 
     翻译者和文件的关系、修订版本号以及文件的状态等信息可以和 XML 文件的文件名一同被保存。以下是以 xx 语言为例列举的 Translator 文件的范例：
     <programlisting>
=============================================================================
CVS User  Name                 Contact email address
=============================================================================
joedoe    Joe Doe              joe@hotmail.com
jane      Jane Smith           jsmith@yahoo.com
...

=============================================================================
Filename                    Translator      Revision
=============================================================================
bookinfo.xml                jane            1.16
language-defs.ent           jane            1.7
language-snippets.ent       joedoe          1.8
preface.xml
------- appendices ----------------------------------------------------------
aliases.xml                 joedoe          working
debugger.xml
escaping.xml
history.xml                 jane            1.2
...
     </programlisting>
     在以上范例中，您能够看到翻译者的列表，以及文件列表的前几行。在这里，您可以保存文件的指定信息，修订版本号（即该翻译文档是建立在那个英文版本之上的）等，如果原英文文档还没有版本号，那么可以加上它的当前状态，例如，working。
    </para>
    <para>
     当一个文件需要被更新时（例如，英文版的 bookinfo.xml 文件升级到了 1.20 版），您可以得到 1.16 版和 1.20 版之间的区别，这样您就可以找到在翻译的文件中做哪些更改。您可以通过 CVS 的 <command>diff</command> 命令来得到不同版本之间的区别，也可以通过 CVS 的 WEB 界面 <ulink url="&url.php.cvs;">&url.php.cvs;</ulink> 来查看这些区别。该 WEB 界面能够生成便于阅读的区别信息，以便您能够容易的找出需要删除、增加或者修改的地方。
    </para>
    <para>
     如果您选择这个方法，请不要忘了在您更改过您语言目录树下的文件后要更新 <filename>Translators</filename> 文件中对应的修正版本号。
    </para>
    <note>
     <para>
      对于目前的 <filename>phpdoc</filename> 体系来说，该系统并不方便维护，因为在一个文本文件中追踪四千多个文件的修订版本号是一件很困难的事情。您可以考虑使用以下提供的修订版本注释法，使用这种方法使得您只用关注您更新的文件即可。
     </para>
    </note>
   </sect2>

   <sect2 id="translation-revcheck-comments">
    <title>修订版本注释</title>
    
    <para>
     除了以上提及的方法以外，我们还有另外一种方法来追踪修订版本号。您可以自己决定，该方法是否更适合您。有些语种的翻译工作同时使用修订版本注释和 Translator 文件两种方法，有些仅使用其中的一种。我们建议您最好能确定仅使用其中的某一种方法，否则事情可能会变得更加难以处理。
    </para>
    <para>
     和将所有的职责全部保存在一个核心文件比起来，修订版本注释系统将这些信息保存在各自的文件中。和以上 <link linkend="translation-revcheck-translators">Translators</link> 文件范例的内容类似，我们现在将所有的修订版本号和一些关联信息全部分散到各个文件中。以下是在这种情况下 <filename>bookinfo.xml</filename> 文件应该包含的文件头：
     <programlisting>
&lt;!-- EN-Revision: 1.16 Maintainer: jane Status: ready --&gt;
     </programlisting>
    </para>
    <para>
     您可以发现在这里我们没有损失任何信息，而且，我们还可以根据需要加上一些其它的状态信息（例如，给未完成的文档标上“partial”）。该修订版本注释系统主要是将这些信息保存在 XML 文件中，而不是保存到一个核心的文件中。对于目前有着四千多个文件的英文版目录，这种方法显得相当的方便。
    </para>
    <para> 
     到目前位置，以上提及的三种信息都是必须的。Maintainer 是翻译和维护者的 CVS 用户名，或者其它不包含空格的昵称；status 可以是不包含空格的任意值。请注意，该文件头并不像 <literal>$Revision</literal> 那样会被 CVS 自动更新，这些内容只有在您自己更新了文件的内容时才被更改。
    </para>
    <para>
     您可能觉得这是一个不错的方法，但是使用这些注释，我们就无法得到一个有着全部文件信息的列表。实际上，您并没有失去这些，而且反而得到更多的信息。如果您希望生成一个类似于 <filename>Translators</filename> 文件那样的列表，您可以切换到 <filename>scripts</filename> 目录，然后运行：
     <programlisting>
./revcheck.php xx > revcheck.html
     </programlisting>
     这里，<literal>xx</literal> 是我们所要的语言代码（简体中文为“zh”）。在运行该脚本以后您将在相同目录下得到一个 <filename>revcheck.html</filename> 文件。该文件中有所有文件修订版本的比较。您也可以增加一个限制的参数，如维护者名称，这样该脚本将只列出和给出维护者名称相关的文件。跟 <filename>Translators</filename> 文件相比，这个 HTML 文件给您更多的信息。作为范例，您可以查看意大利语版（代码 it）翻译工程的 <filename>revcheck.html</filename> 文件。您还可以简单的在 phpdoc 根目录下运行 <literal>make revcheck</literal> 来得到该文件，如果您前面已经运行过 <command>./configure --with-lang=xx</command>。
    </para>
    
    <para>
     由于这个系统在很多翻译小组中越来越流行，因此在线自动生成系统会在生成手册过程的开始为该语言版本生成一个 <filename>revcheck.html.gz</filename> 文件。它和 <filename>build.log.gz</filename> 文件一样，都在手册的某个语言版本的在线发布目录下。作为范例，请参考意大利语翻译工程的在线发布： <ulink url="&url.revcheck.it;">&url.revcheck.it;</ulink>。
    </para>
    
    <para>
     由于将 <filename>Translators</filename> 文件中所有的内容都导入到以上生成的 HTML 文件中的需要，对于该脚本还有一些更多的解释。这也是我们要引入 <filename>translation.xml</filename> 文件的原因。以下是一个简单的 xx 语言版本的 <filename>translation.xml</filename> 的范例，其内容与以上 <filename>Translators</filename> 文件范例的内容相同：
     <programlisting>
<![CDATA[
<?xml version="1.0" encoding="iso-8859-1" ?>
<!DOCTYPE translation SYSTEM "../dtds/translation.dtd">

<translation>

 <intro>
  This is some introductory text for the xx language translators
  about who is the manager of the translation, and where to find
  more information. This paragraph is printed on the top of the
  generated revcheck.html page.
 </intro>
 
 <chmindex>
  This file was generated: <datetime/><br/>
  Go to <a href="http://www.php.net/download-docs">http://www.php.net/download-docs</a>
  to get the actual version.
 </chmindex>

 <translators>
  <person name="Joe Doe"     email="joe@hotmail.com"  nick="joedoe" cvs="yes" editor="yes"/>
  <person name="Jane Smith"  email="jsmith@yahoo.com" nick="jane"   cvs="yes"/>
  <person name="Joe Forever" email="joe@forever.net"  nick="joefo"  cvs="no"/>
 </translators>
 
 <work-in-progress>
  <file name="appendices/aliases.xml" person="joedoe" type="working"/>
  <file name="functions/dbx.xml"      person="joefo"  type="working"/>
 </work-in-progress>

</translation>
]]>
     </programlisting>
     正如您所看到的，该文件能够保存 <filename>Translators</filename> 文件中所包含的所有信息。和后者相比，这个文件的新特点是您可以在该文件中添加没有 CVS 账号的翻译人员，并且可以给他们指派已经就绪的或者正在翻译中的文档。使用这个新功能的一个最大的好处，就是所有的这些信息将被用来在 <filename>revcheck.html</filename> 文件中生成动态的表格。在该表格中，每个文件的条目后面都有该文件翻译者的链接，同时该文件还有一个根据翻译者列出的所有文件状态的表格。如果某个文件正在更新的过程中，那么您需要在该文件以已就绪文件的方式指派给其翻译者。
    </para>
    
    <para>
     在 XML 文件中有两个和 CHM 格式相关的问题需要注意。第一个是 &lt;chmindex&gt; 部分，在该部分您可以加上您希望显示在 CHM 版本首页上的文字，并给这些文字加上指向相关信息的链接。&lt;person&gt; 标记的“editor”属性中的内容将被用在 CHM 版本首页上的翻译小组列表中。这个属性不是必需的，但是对于任何使用 CHM 格式的读者所阅读的手册译文来说，该属性是至关重要的。请注意目前这些还没有被用在 CHM 版手册的生成过程中，但对于目前正处于紧张的测试和开发阶段中的“下一代” CHM 版本来说是很重要的信息。
    </para>
    
    <para>
     当您添加一个 &lt;file&gt; 标签的时候，您可以根据需要加上两个可选的参数： <literal>date</literal> 和 <literal>revision</literal>。“date”是开始翻译该文件的日期，“revision”是开始翻译该文件所基于的英文版文件的修订版本（该版本号在统计表中表示为“CO-Revision”）。目前对于 <literal>date</literal> 参数尚无统一的规定。
    </para>
    
    <para>
     该系统的另一个新特性，是提供了列出为一个文件的翻译做出贡献的所有翻译者的名单的方法，而不仅仅只记录当前的维护者。为了达到这个目的，我们增加了一个“credit”注释。假如 Joe Doe 先完成了 <filename>history.xml</filename> 的翻译工作，然后 Jane 在他后面又做了很多维护工作，那么该文件的“credit”注释可以写成如下形式：
     <programlisting>
&lt;!-- CREDITS: joedoe --&gt;
     </programlisting>
     在“creidt”注释中，如果有多个名称，可以用逗号隔开。该注释仅影响 <filename>revcheck.html.gz</filename> 文件翻译者列表中的内容。
    </para>
   </sect2>

   <sect2 id="translation-revcheck-status">
    <title>在线状态检测脚本程序</title>
    
    <para>
     Rasmus Lerdorf 开发了在线状态检测脚本程序。当有很多文档缺少修订版本注释的时候，该脚本程序显得特别有用。当然如果您和您的团队使用了修订版本注释来跟踪修订版本时，您可以使用<link linkend="translation-revcheck-comments">上文</link>提到的方法。
    </para>
    <para>
     您可以访问 <ulink url="&url.status;">&url.status;</ulink> 来使用该脚本程序。在访问该页面时，该脚本程序需要统计所有翻译版本下所有文件的日期信息，因此您可能需要花一些时间等待页面的生成。如果您希望将该页面的内容限制到某一个特定的语言版本，您可以加上一个形如 <literal>?l=LANGCODE</literal> 的 URL 参数。例如，希望浏览简体中文版的报告，则访问：<ulink url="&url.status.zh;">&url.status.zh;</ulink>。
    </para>
    <para>
     该脚本程序试图根据最后一次更改的日期来确定一个文件是否应该被更新。如果您修正了您本语言翻译版本的文件，或者修正过一些字面的错误，则该脚本程序显示的结果将不正确，因为程序认为您所做的修改是为了使该文档的内容和英文版文件的新版本的内容保持同步，因此会将该文件标记为已更新。尽管利用该脚本程序可以帮助您不用<link linkend="translation-revcheck-comments">修订版本注释</link>即可追踪一些文件，但是如果您使用版本追踪注释，您就能得到比该脚本程序所提供的更多更准确的结果。
    </para>
   </sect2>
  </sect1>
 </chapter>

 <chapter id="chapter-maillist">
  <title>phpdoc、php-doc-chm、php-notes 及其它邮件列表</title>
  
  <para>
   组成 PHP 文档的 XML 文件的内容每天都在被更新，在繁忙的时候，甚至每小时都会被更新。因此，我们强烈建议您订阅 <email>&email.phpdoc;</email> 邮件列表，以紧跟英文版本目录下文件的更新，并参与和 PHP 文档相关的一些讨论。您仅需发一封空白的电子邮件到 <ulink url="&url.docsubscribe;">&url.docsubscribe;</ulink> 即可订阅该邮件列表。类似的您也仅需发一封空白的电子邮件到 <ulink url="&url.docunsubscribe;">&url.docunsubscribe;</ulink> 来取消您先前的订阅。您也可以访问设在 <ulink url="&url.maillists;">&url.maillists;</ulink> 的 WEB 界面来访问这些邮件列表的内容。
  </para>
  <para>
   和 phpdoc 邮件列表类似，在服务器同时还存在专门为某个语言版本的翻译小组单独开设的邮件列表。在该邮件列表中可以使用您的母语来交流，同时在该翻译工程下提交文件时 CVS 自动生成的信息也将被发布在对应语言的邮件列表中。这些邮件列表是以 <literal>doc-LANGCODE</literal> 的格式来命名的，其中 LANGCODE 是和其对应的翻译模块相同的源代码（简体中文版即“zh”）。您可以用以上提供的类似的方法来订阅和退订这些邮件列表，只需将 <literal>phpdoc</literal> 替换成对应的邮件列表名称。例如，简体中文版的邮件列表名称为 <literal>doc-zh</literal>。
  </para>
  <para>
   目前这些邮件列表（包括主 phpdoc 邮件列表）主要有以下信息来源：
   <itemizedlist>
    <listitem>
     <simpara>
      邮件列表的成员：讨论跟 phpdoc 小组相关的任何话题。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      CVS 服务器：发布对应模块下任何对 XML 文件进行的更改信息。也就是说对英文版文件的提交信息将发布到 phpdoc 列表上，而其它语言版本的文件将被提交到与其对应的邮件列表中。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      其它的发送者：向邮件列表发送信件并没有收到限制，因此非邮件列表成员也可以向该列表发送信息。这样我们就可以以纯文本邮件方式获得更多的报告和意见。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      PHP 错误跟踪系统：被分类为“文档问题”的错误将被发送到 phpdoc 列表。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      垃圾信息：一些不受欢迎的邮件。感谢我们的反垃圾邮件系统。
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
  <para>
   由于一个邮件列表有很多的信息，包括一些诸如 CVS 提交信息和错误信息的自动发布机制，因此您只需订阅您感兴趣的邮件列表。如果您仅对英文版的文件开展工作，我们建议您仅订阅 phpdoc 列表。如果您同时是某个翻译小组的成员，那么在您订阅了 <literal>phpdoc</literal> 列表后，还应该订阅该翻译工程的邮件列表。阅读主邮件列表上信件，使您能够获知英文版目录下的工作的最新进展，以及哪些文件需要被更新，或者对文档生成系统作了哪些更改。
  </para>
  <para>
   您需要处理来自于您订阅的邮件列表的大量信息。如果您需要离开很长一段时间，如度一个很长的暑假，您可以退订该列表。当您回来时，有以下方法可以阅读在您休假期间未收到邮件：
   <itemizedlist>
    <listitem>
     <simpara>
      在 <ulink url="&url.listarchive;">&url.listarchive;</ulink> 提供的 WEB 页面上阅读以前信息的存档。（该方法仅对 phpdoc 列表有效）
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      用新闻组阅读工具下载 <ulink url="&url.listnews;">&url.listnews;</ulink> 的内容。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      在我们新闻组实验性的 WEB 界面阅读，其地址是 <ulink url="&url.listnewshttp;">&url.listnewshttp;</ulink>。
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
  <para>
   如果由 CVS 发布的提交信息中的内容大于 8kb，则这些内容将被以附件的形式发送。这时您可以在邮件的正文看到所有被提交文件的列表，但它们被更改的内容将被放置到附件中。
  </para>
  <para>
   由于 Windows 超文本帮助版本的手册正以一种让人难以置信的方式发展，因此我们为此开设了专门的邮件列表来发布和讨论和 CHM 相关的问题。您可以订阅该列表，也可以在 <ulink url="&url.maillists;">&url.maillists;</ulink> 访问其 Web 界面。
  </para>
  <para>
   另外，我们还有一个名为 <literal>php-notes</literal> 的邮件列表。您可以用和访问 <literal>phpdoc</literal> 列表相同的方法来访问该邮件列表，仅需将 <literal>phpdoc</literal> 替换成 <literal>php-notes</literal>。该邮件列表发布了所有手册中出现的注释条目，如果您希望帮助管理这些注释，您可以考虑订阅该邮件列表。
  </para>
 </chapter>

 <chapter id="chapter-misc">
  <title>其它注意事项</title>

  <para>
   本节尚无内容。
  </para>
 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"howto.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

