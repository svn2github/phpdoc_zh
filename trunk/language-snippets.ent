<!-- $Revision$ -->
<!-- $Author$ -->
<!-- EN-Revision: 1.42 Maintainer: Gregory Status: ready -->

<!ENTITY warn.experimental '<warning><simpara>本扩展模块是<emphasis>实验性</emphasis>的。该模块的行为，包括其函数的名称以及其它任何关于此模块的文档可能会在没有通知的情况下随 PHP 以后的发布而改变。我们提醒您在使用本扩展模块的同时自担风险。
</simpara></warning>'>

<!ENTITY warn.experimental.func '<warning><simpara>本扩展模块是<emphasis>实验性</emphasis>的。该模块的行为，包括其函数的名称以及其它任何关于此模块的文档可能会在没有通知的情况下随 PHP 以后的发布而改变。我们提醒您在使用本扩展模块的同时自担风险。
</simpara></warning>'>

<!ENTITY warn.undocumented.func '<warning><simpara>该函数目前尚无参考文档；仅参数列表可用。
</simpara></warning>'>

<!ENTITY warn.no-win32-fopen-wrapper '<warning><para>Windows 版本的 PHP
在 4.3.0 版之前不支持该函数的远程文件访问，即使
<link linkend="ini.allow-url-fopen">allow_url_fopen</link> 选项已被激活。
</para></warning>'>

<!ENTITY note.no-remote '<note><simpara>本函数不能作用于<link
linkend="features.remote-files">远程文件</link>，被检查的文件必须通过服务器的文件系统访问。
</simpara></note>'>

<!ENTITY tip.ob-capture '<tip><simpara>为了防止程序直接将结果输出到浏览器，您可以使用<link
linkend="ref.outcontrol">输出控制函数（output-control
functions）</link>来捕获函数的输出，并把它们保存到一个 <type>string</type> 型的变量中。
</simpara></tip>'>

<!ENTITY tip.fopen-wrapper '<tip><simpara>如果 <link linkend="ini.allow-url-fopen">"fopen wrappers"</link>
已经被激活，则您在使用该函数的时候，可以把 URL 作为文件名来使用。请参阅 <function>fopen</function>
获取怎样指定文件名的详细信息以及支持的 URL 协议的列表 <xref linkend="wrappers"/>。</simpara></tip>'>

<!ENTITY return.success '如果成功则返回 &true;，失败则返回 &false;。'>

<!ENTITY array.resetspointer '<note><simpara>在调用后，该函数会重置（<function>reset</function>）<type>数组</type>的指针。</simpara></note>'> 

<!ENTITY note.clearstatcache '<note><simpara>本函数的结果会被缓存。详细信息参见
<function>clearstatcache</function>。</simpara></note>'>

<!ENTITY return.falseproblem '<warning><simpara>这个函数可能返回 Boolean &false;，也可能返回一个与 &false; 相等地非 Boolean 值，比如 0 或者 &quot;&quot; 。请参阅 <link linkend="language.types.boolean">Booleans</link> 的有关章节以获取更多信息。请使用 <link linkend="language.operators.comparison">=== 操作符</link> 来测试该函数的返回值。
</simpara></warning>'>

<!ENTITY warn.imaprecodeyaz '<warning><simpara>由于 <link 
linkend="ref.imap">IMAP</link> 扩展模块和 <link linkend="ref.recode">recode</link> 扩展和 <link 
linkend="ref.yaz">YAZ</link> 扩展使用想同的内部符号，因此它们不能同时使用。</simpara></warning>'> 

<!-- Various notes -->
<!ENTITY note.not-bin-safe '<warning><simpara>该函数（到目前为止）不适用于二进制对象！
</simpara></warning>'>

<!ENTITY note.bin-safe '<note><simpara>该函数适用于二进制对象！</simpara></note>'>

<!ENTITY note.line-endings '<note><simpara>如果碰到 <literal>PHP</literal>
在读取文件时不能识别 Macintosh 文件格式，可以激活
<link linkend="ini.auto-detect-line-endings">auto_detect_line_endings</link>
的运行时配置选项。</simpara>
</note>'>

<!ENTITY note.no-windows '<note><simpara>该函数不适用于 Windows 平台！
</simpara></note>'>

<!ENTITY note.no-windows.extension '<note><simpara>该扩展模块不适用于 Windows 平台！</simpara></note>'>

<!ENTITY note.func-callback '<note><simpara>第二个参数函数名可以替换为一个数组，该数组由一个对象名和该对象名的一个方法名两个元素组成。
</simpara></note>'>

<!-- Notes for safe-mode limited functions: -->
<!ENTITY note.sm.disabled '<note><simpara>&sm.disabled;</simpara></note>'>

<!ENTITY note.sm.uidcheck '<note><simpara>当 <link 
linkend="features.safe-mode">安全模式（safe mode）</link> 被激活，PHP 将检查您将要操作的文件或者目录与正在执行的脚本是否有相同的 UID。</simpara></note>'>

<!ENTITY note.sm.uidcheck.dir '<note><simpara>W当 <link 
linkend="features.safe-mode">安全模式（safe mode）</link> 被激活，PHP 将检查您将要操作的目录和正在执行的脚本是否有相同的 UID。</simpara></note>'>

<!-- Common pieces in features/safe-mode.xml 
     Jade doesn't allow in-line entities, so I put them here... Though they 
     should have been inline in safe-mode.xml -->
<!ENTITY sm.uidcheck '将检查您将要操作的文件/目录与正在执行的脚本是否有相同的 UID。'>

<!ENTITY sm.uidcheck.dir '将检查您将要操作的目录和正在执行的脚本是否有相同的 UID。'>

<!ENTITY sm.disabled '该函数在<link linkend="features.safe-mode">安全模式</link>中已被屏蔽。'>

<!-- Common pieces in partintro-sections -->
<!ENTITY no.config '<para>该扩展模块未定义任何设置指令。</para>'>
<!ENTITY no.resource '<para>该扩展模块未定义任何资源类型。</para>'>
<!ENTITY no.constants '<para>该扩展模块未定义任何常量。</para>'>
<!ENTITY no.requirement '<para>无需外部库文件就可以加入本扩展模块的支持。</para>'>
<!ENTITY no.install '<para>这些函数作为 PHP 核心的一部分，无需被安装即可使用。</para>'>

<!-- Used in reference/$extname/ini.xml -->
<!ENTITY extension.runtime '<simpara>这些函数的行为受到全局<link linkend="configuration.file">配置文件</link> &php.ini; 的影响。</simpara>'>

<!-- Used in reference/$extname/constants.xml -->
<!ENTITY extension.constants '<simpara>
由于这些常量是由该扩展模块定义的，因此只有在该扩展模块被编译到 PHP 中，或者在运行时被动态加载后，这些常量才有效。</simpara>'>

<!-- For STANDARD Constants used in reference/$extname/constants.xml -->
<!ENTITY extension.constants.core '<simpara>
这里列出的所有常量将作为 PHP 核心的一部分一直有效。
</simpara>'>

<!-- Used in reference/$extname/classes.xml -->
<!ENTITY extension.classes '<simpara>
由于这些类是由该扩展模块定义的，因此它们仅在该扩展模块被编译到 PHP 内核中，或者在运行时被动态加载后才有效。
</simpara>'>

<!ENTITY windows.builtin '<simpara> <literal>PHP</literal> 的 Windows 版本已经内置该扩展模块的支持。您无需加载任何附加的扩展库即可使用这些函数。</simpara>'>

<!-- These are here as helpers for manual consistency and brievety--> 
<!ENTITY php '<literal>PHP</literal>'> 
<!ENTITY safemode '<link linkend="ini.safe-mode">安全模式</link>'> 

<!-- These are using in reference/$extname/reference.xml and other
supplemental files to mark section titles -->
<!ENTITY reftitle.intro     '<title>介绍</title>'>
<!ENTITY reftitle.required  '<title>需求</title>'>
<!ENTITY reftitle.install   '<title>安装</title>'>
<!ENTITY reftitle.runtime   '<title>运行时配置</title>'>
<!ENTITY reftitle.resources '<title>资源类型</title>'>
<!ENTITY reftitle.constants '<title>预定义常量</title>'>
<!ENTITY reftitle.classes   '<title>预定义类</title>'>
<!ENTITY reftitle.examples  '<title>范例</title>'>
<!ENTITY reftitle.seealso   '<title>相关参考</title>'>
