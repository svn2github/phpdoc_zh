<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision: 1.2 $ -->
<!-- $Author: dallas $ -->
<!-- EN-Revision: 1.6 Maintainer: dallas Status: ready -->
<sect1 id="language.oop5.autoload">
 <title>自动加载对象</title>
 <para>
  很多开发者写面向对象的应用程序时对每个类的定义建立一个
  PHP 源文件。一个很大的烦恼是不得不在每个脚本（每个类一个文件）开头写一个长长的包含文件列表。
 </para>
 <para>
  在 PHP 5 中，不再需要这样了。可以定义一个
  __autoload 函数，它会在试图使用尚未被定义的类时自动调用。通过调用此函数，脚本引擎在
  PHP 出错失败前有了最后一个机会加载所需的类。
 </para>
 <note>
  <para>
   在 __autoload 函数中抛出的异常不能被
   <link linkend="language.exceptions">catch</link>
   语句块捕获并导致致命错误。
  </para>
 </note>
 <para>
  <example>
   <title>Autoload 例子</title>
   <para>
    本例尝试分别从 <filename>MyClass1.php</filename>
    和 <filename>MyClass2.php</filename> 文件中加载
    <literal>MyClass1</literal> 和
    <literal>MyClass2</literal> 类。
   </para>
   <programlisting role="php">
<![CDATA[
<?php
function __autoload($class_name) {
    require_once $class_name . '.php';
}

$obj  = new MyClass1();
$obj2 = new MyClass2();
?>
]]>
   </programlisting>
  </example>
 </para>

</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
