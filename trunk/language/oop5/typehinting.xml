<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 283798 $ -->
 <sect1 xml:id="language.oop5.typehinting" xmlns="http://docbook.org/ns/docbook">
  <title>类型约束</title>
  <para>
   PHP 5 可以使用类型约束。函数的参数可以指定只能为对象（在函数原型里面指定类的名字），php 5.1 之后也可以指定只能为数组。
   注意，即使使用了类型约束，如果使用<type>NULL</type>作为参数的默认值，那么在调用函数的时候依然可以使用<type>NULL</type>作为实参。
  </para>
  
  <example>
   <title>类型约束示例</title>
    <programlisting role="php">
<![CDATA[
<?php
//如下面的类
class MyClass
{
    /**
     * 测试函数
	 * 第一个参数必须为类OtherClass的一个对象
     */
    public function test(OtherClass $otherclass) {
        echo $otherclass->var;
    }


    /**
     * 另一个测试函数
	 * 第一个参数必须为数组 
     */
    public function test_array(array $input_array) {
        print_r($input_array);
    }
}

//另外一个类
class OtherClass {
    public $var = 'Hello World';
}
?>
]]>
   </programlisting>
   <para>
	函数调用的参数与定义的参数类型不一致时，会抛出一个致命错误。
   </para>
    <programlisting role="php">
<![CDATA[
<?php
// 两个类的对象
$myclass = new MyClass;
$otherclass = new OtherClass;

// 致命错误：参数1必须是类OtherClass的一个对象
$myclass->test('hello');

// 致命错误：参数1必须为类OtherClass的一个实例
$foo = new stdClass;
$myclass->test($foo);

// 致命错误：参数1不能为null
$myclass->test(null);

// 正确：输出 Hello World 
$myclass->test($otherclass);

// 致命错误：参数1必须为数组
$myclass->test_array('a string');

// 正确：输出 数组
$myclass->test_array(array('a', 'b', 'c'));
?>
]]>
   </programlisting>
   <para>
	类型约束不只是用在类的成员函数里，也能使用在函数里。
   </para>
    <programlisting role="php">
<![CDATA[
<?php
// 如下面的类
class MyClass {
    public $var = 'Hello World';
}

/**
 * 测试函数
 * 第一个参数必须是类MyClass的一个对象
 */
function MyFunction (MyClass $foo) {
    echo $foo->var;
}

// 正确
$myclass = new MyClass;
MyFunction($myclass);
?>
]]>
   </programlisting>
   <para>
	类型约束允许NULL值：
   </para>
    <programlisting role="php">
<![CDATA[
<?php

/* 接受NULL值 */
function test(stdClass $obj = NULL) {

}

test(NULL);
test(new stdClass);

?>
]]>
   </programlisting>
  </example>
  <para>
   类型约束只支持<type>对象</type> 和 <type>数组</type>（php 5.1之后）两种类型。而不支持<type>整型</type> 和 <type>字符串</type>类型。
  </para>
 </sect1>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
