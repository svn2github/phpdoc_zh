<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- $Author: verdana $ -->
<!-- EN-Revision: 1.33 Maintainer: verdana  Status:partly -->
 <chapter id="language.basic-syntax">
  <title>基本语法</title>

   <!--
   
    NOTE:                             Last modified: 2001-05-16 13:00 GMT
    
    the language part is currently under heavy revision. Please do not
    not make any heavy (i.e. structural) modifications to this part 
    for a moment. 
    
    You'd also better not start any translation yet.
    
    Comments are always welcome at phpdoc@lists.php.net
    
    Progress:
    
     intro : DOESN'T EXIST - yet?
             new chapter, with some introductionary remarks?
             Will be discussed on the ML soon.
     basic-syntax: 
             FINISHED
             except maybe moving the 'advanced escaping'
             to a better place?
             TODO: 
              - nada
     types : Being revised. Added all new types
             Boolean and Integer are more or less finished.
             The rest isn't.
             TODO: 
              - why is $foo[bar] bad syntax?
              - what's the difference between unset($bla) and
                $bla = NULL; (it is different!)
              - $obj->{expr} syntax
              - (unset) cast?????
              - $bla = unset <== should've been nuked, don't mention it
              - $str{offset} syntax, rather than $str[offset]
              - read notes and apply when any of them are useful
              - remove notes which have been included here.
              - ...
     the rest: Not yet started with.
             TODO: 
              - ?
     oop   : has been revised by Kristian, DONE.
   -->
   
  <sect1 id="language.basic-syntax.phpmode">
   <title>从 HTML 中分离</title>
  
   <para>
	PHP 的脚本由文件中一对特殊的标记所引起的内容，当解释器分析一个文件时，所有特殊标记
	外的普通文件，解释器不对其做任何处理，而特殊标记内文件将作为 PHP 代码被解释器分析
	执行。该运行机制将允许您在 HTML 中嵌入 PHP 代码：PHP 标记外的内容将被完全独立开，
	不做任何处理，而内部的将作为 PHP 代码解析。
   </para>

   <para>
	用来标记 PHP 代码块的标记共有四套，其中只有两套总是有效（&lt;?php. . .?&gt; 和 &lt;script
    language="php"&gt;. . .&lt;/script&gt;）；另外两套可以在 &php.ini; 配置文件中
	开启或者关闭。虽然短格式的标记和 ASP 风格的标记可能比较省力，但是某些情况下您可能
	必须要使用长格式的标记。比如，您打算在 XML 或者 XHTML 中嵌入 PHP 代码，您将需要
	使用 &lt;?php. . .?&gt; 形式的标记以适应 XML 的标准。
   </para>

   <para>
	PHP 支持的标记为：
   </para>

    <para>
     <example>
      <title>从 HTML 中分离的方式</title>
      <programlisting role="php">
<![CDATA[
1.  <?php echo("if you want to serve XHTML or XML documents, do like this\n"); ?>

2.  <? echo ("this is the simplest, an SGML processing instruction\n"); ?>
    <?= expression ?> This is a shortcut for "<? echo expression ?>"
    
3.  <script language="php">
        echo ("some editors (like FrontPage) don't
              like processing instructions");
    </script>

4.  <% echo ("You may optionally use ASP-style tags"); %>
    <%= $variable; # This is a shortcut for "<% echo . . ." %>
]]>
      </programlisting>
     </example>
    </para>

   <para>
	优先选用的方式为第一种方式 &lt;?php. . .?&gt;，因为它允许您在 XML 结构，
	如 XHTML 的代码中使用 PHP。
   </para>

   <para>
	第二种方式并非总是可用的。只有当您在 &php.ini; 配置文件中激活 
	<link linkend="ini.short-open-tag">short_open_tag</link> 选项，才是可用的。
	您也可以通过使用 <function>short_tags</function> 函数（仅用于 PHP 3），或者
	使用 --enable-short-tags 选项 <command>configure</command> PHP 来激活短格式标记。
	在 php.ini-dist 配置文件中，默认是开启短格式标记的，但是建议您不要使用该标记。
   </para>

   <para>
	在 PHP 配置文件中开启选项 <link linkend="ini.asp-tags">asp_tags</link> 将激活
	第四种方式。
    <note>
     <para>ASP 风格的标记添加于 PHP 3.0.4</para>
    </note>
   </para>

   <note>
    <para>
	 当开发大型应用程序或者用于分发的函数库，或者在不受您控制的 PHP 服务器上面开发
	 程序时，请不要使用短格式的标记，因为目标服务器可能并不支持短格式的标记。为了
	 便于移植，请保证用于再分发的代码中不使用短格式的标记。
    </para>
   </note>

   <para>
	PHP 代码块结束标记奖自动包含最近的一个结尾的新行（如果存在的话）。而且，
	结束标记自动隐含一个分号; 您不需要为 PHP 代码块的最后行追加一个分号。
   </para>
    
    <para>
	PHP 允许您使用如下的结构：
    <example><title>更高级的脱离</title>
     <programlisting role="php">
<![CDATA[
<?php
if ($expression) { 
    ?>
    <strong>This is true.</strong>
    <?php 
} else { 
    ?>
    <strong>This is false.</strong>
    <?php 
}
?>
]]>
     </programlisting>
    </example>
	PHP 将直接输出结束标记和下一个开始标记中的任何非 PHP 代码。当需要输出大量的文本时，
	退出 PHP 解析模式将比使用 <function>echo</function> 或者 <function>print</function>
	或者此类的函数打印所有文本要更加的有效。
   </para>
  </sect1>
  
  <sect1 id="language.basic-syntax.instruction-separation">
   <title>指令分隔符</title>
   
   <simpara>
	指令分隔方式与 C 或者 Perl 类似 -- 每个语句由分号格开。</simpara>
   <para>
	结束标记（?&gt;）同样隐含语句的结束，因此下面的代码是等价的：

    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
    echo "This is a test";
?>

<?php echo "This is a test" ?>
]]>
     </programlisting>
    </informalexample>
   </para>
  </sect1>

  <sect1 id="language.basic-syntax.comments">
   <title>注释</title>
   
   <para>
	PHP 支持 'C'，'C++' 和 Unix Shell 风格的注释。例如:

    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
    echo "This is a test"; // This is a one-line c++ style comment
    /* This is a multi line comment
       yet another line of comment */
    echo "This is yet another test";
    echo "One Final Test"; # This is shell-style style comment
?>
]]>
     </programlisting>
    </informalexample>
   </para>

   <simpara>
	"单行" 注释仅仅注释到行末或者当前的 PHP 代码块，无论哪个首先出现。
   </simpara>
   <informalexample>
    <programlisting role="php">
<![CDATA[
<h1>This is an <?php # echo "simple";?> example.</h1>
<p>The header above will say 'This is an example'.
]]>
    </programlisting>
   </informalexample> 

   <simpara>
	小心不要嵌套 'C' 风格的注释，当注释大量代码时，可能犯该错误。
   </simpara>

   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
 /* 
    echo "This is a test"; /* This comment will cause a problem */
 */
?>
]]>
    </programlisting>
   </informalexample>
   
   <simpara>
	"单行" 注释仅仅注释到行末或者当前的 PHP 代码块，无论哪个首先出现。这意味着 // ?>
	后面的 HTML 代码将被打印出来，?> 跳出了 PHP 模式并且返回 HTML 模式，而且 // 注释
	符并不会影响到模式的转换。

   </simpara>
  </sect1>
 </chapter>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
