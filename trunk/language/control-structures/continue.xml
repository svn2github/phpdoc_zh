<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 283934 $ -->
<!-- $Author: haohappy $ -->
<!-- EN-Revision: 283798 Maintainer: haohappy Status: ready -->

<sect1 xml:id="control-structures.continue" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title><literal>continue</literal></title>
  <simpara>
   <literal>continue</literal>
   在循环结构用用来跳过本次循环中剩余的代码并在条件求值为真时开始执行下一次循环。
  </simpara>
  <note>
   <simpara>
    注意在 PHP 中
    <link linkend="control-structures.switch">switch</link>
    语句被认为是可以使用 <literal>continue</literal> 的一种循环结构。
   </simpara>
  </note>
  <simpara>
   <literal>continue</literal> 接受一个可选的数字参数来决定跳过几重循环到循环结尾。
  </simpara>
  <para>
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
while (list ($key, $value) = each($arr)) {
    if (!($key % 2)) { // skip odd members
        continue;
    }
    do_something_odd($value);
}

$i = 0;
while ($i++ < 5) {
    echo "Outer<br />\n";
    while (1) {
        echo "&nbsp;&nbsp;Middle<br />\n";
        while (1) {
            echo "&nbsp;&nbsp;Inner<br />\n";
            continue 3;
        }
        echo "This never gets output.<br />\n";
    }
    echo "Neither does this.<br />\n";
}
?>
]]>
    </programlisting>
   </informalexample>
  </para>
  <para>
   省略 <literal>continue</literal>
   后面的分号会导致混淆。以下例子示意了不应该这样做。
  </para>
  <para>
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
  for ($i = 0; $i < 5; ++$i) {
      if ($i == 2)
          continue
      print "$i\n";
  }
?>
]]>
    </programlisting>
    <para>
     希望得到的结果是：
    </para>
    <screen>
<![CDATA[
0
1
3
4
]]>
    </screen>
    <para>
     可实际的输出是：
    </para>
    <screen>
<![CDATA[
2
]]>
    </screen>
    <para>
     因为 <function>print</function> 调用的返回值是
     <literal>int(1)</literal>，看上去作为了上述可选的数字参数。
    </para>
   </informalexample>
  </para>
 </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
