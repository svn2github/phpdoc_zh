<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- $Author: gregory $ -->
<!-- EN-Revision: 1.26 Maintainer: Gregory Status: ready -->
 <chapter id="features.error-handling">
  <title>错误处理</title>
 
  <para>
   PHP 有如下几种错误和警告：

   <table>
    <title>PHP 错误类型</title>
    <tgroup cols="4">
     <thead>
      <row>
       <entry>值</entry>
       <entry>常量</entry>
       <entry>描述</entry>
       <entry>备注</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>1</entry>
       <entry>E_ERROR</entry>
       <entry>运行时致命错误</entry>
       <entry></entry>
      </row>
      <row>
       <entry>2</entry>
       <entry>E_WARNING</entry>
       <entry>运行时警告（非致命错误）</entry>
       <entry></entry>
      </row>
      <row>
       <entry>4</entry>
       <entry>E_PARSE</entry>
       <entry>编译时解析错误</entry>
       <entry></entry>
      </row>
      <row>
       <entry>8</entry>
       <entry>E_NOTICE  </entry>
       <entry>
	    运行时提醒（比 Warning 的严重性更低）
       </entry>
       <entry></entry>
      </row>
      <row>
       <entry>16</entry>
       <entry>E_CORE_ERROR</entry>
       <entry>在 PHP 初始化过程中发生的致命错误</entry>
       <entry>仅 PHP 4 有效</entry>
      </row>
      <row>
       <entry>32</entry>
       <entry>E_CORE_WARNING</entry>
       <entry>
	   在 PHP 初始化过程中发生的警告（非指明错误）
       </entry> 
       <entry>仅 PHP 4 有效</entry>
      </row>
      <row>
       <entry>64</entry>
       <entry>E_COMPILE_ERROR</entry>
       <entry>编译时指明错误</entry>
       <entry>仅 PHP 4 有效</entry>
      </row>
      <row>
       <entry>128</entry>
       <entry>E_COMPILE_WARNING</entry>
       <entry>编译时警告（非指明错误）</entry>
       <entry>仅 PHP 4 有效</entry>
      </row>
      <row>
       <entry>256</entry>
       <entry>E_USER_ERROR</entry>
       <entry>用户自定义错误信息</entry>
       <entry>仅 PHP 4 有效</entry>
      </row>
      <row>
       <entry>512</entry>
       <entry>E_USER_WARNING</entry>
       <entry>用户自定义警告信息</entry>
       <entry>仅 PHP 4 有效</entry>
      </row>
      <row>
       <entry>1024</entry>
       <entry>E_USER_NOTICE </entry>
       <entry>用户自定义提醒信息</entry>
       <entry>仅 PHP 4 有效</entry>
      </row>
      <row>
       <entry></entry>
       <entry>E_ALL</entry>
       <entry>以上所有支持的项目</entry>
       <entry></entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>

  <para>
   以上的值（不管是数字还是符号）被用来建立指定要报告的错误的位掩码（bitmask）。您可以使用<link linkend="language.operators.bitwise">位操作符</link>来叠加或者掩去某一种类型的错误。请注意 &php.ini; 仅能识别“|”、“~”、“!”和“&amp;”四种符号，而 <filename>php3.ini</filename> 无法识别任何位操作符。
  </para>
  <para>
   在 PHP 4 中，<link linkend="ini.error-reporting">error_reporting</link> 默认的值为 <literal>E_ALL &amp; ~E_NOTICE</literal>，表示显示除 E_NOTICE-level 以外所有错误的警告信息。在 PHP 3 中，其默认值为 <literal>(E_ERROR | E_WARNING | E_PARSE)</literal>，表示的内容和 PHP 4 相同。注意，由于 <filename>php3.ini</filename> 不支持常量，<link linkend="ini.error-reporting">error_reporting</link> 的设置应该用数字来表示，因此，其值应该为 <literal>7</literal>。
  </para>

  <para>
   这项设置的初始设定可以通过更改 ini 文件中的 <link
   linkend="ini.error-reporting">error_reporting</link> 选项来改变，也可以在 Apache 系统中设置 <filename>httpd.conf</filename> 中的 php_error_reporting（PHP 3 为 php3_error_reporting）来改变。另外，脚本的运行过程中，也可以通过 <function>error_reporting</function> 函数来更改该设置。
  </para>
  
  <warning>
   <para>
    在将服务端的代码从 PHP 3 升级到 PHP 4 时，您需要检查这些设置，或者调用 <function>error_reporting</function>，否则您可能会屏蔽新类型的错误报告，尤其是 E_COMPILE_ERROR。这将有可能导致没有任何反馈信息的空文档，使得您不知道发生了什么，也不知道到哪里检查发生的问题。
   </para>
  </warning>
    
  <para>
   所有的 <link linkend="language.expressions">PHP 表达式</link>都可以使用“@”前缀，该前缀将屏蔽该表达式所有的错误信息。如果在该语句运行过程中出现了错误并且 <link
   linkend="ini.track-errors">track_errors</link> 选项开启，则您可以在全局变量 <literal>$php_errormsg</literal> 中找到错误信息。
  </para>

  <note>
   <para>
    <link linkend="language.operators.errorcontrol">@ 错误信息控制符</link>前缀不会屏蔽解析错误信息。
   </para>
  </note>

  <warning>
   <para>
    目前 <link linkend="language.operators.errorcontrol">@ 错误信息控制符</link>前缀有可能会屏蔽导致脚本停止运行的关键错误的信息。这也就是说，如果您在不可用的，或者未正确定义的函数前面使用 <link
    linkend="language.operators.errorcontrol">@</link> 符号来抑制错误，脚本程序会在该处停止运行，并且不会给出任何关于为什么停止的提示信息。
   </para>
  </warning>

  <para>
   以下是在 PHP 中使用错误处理兼容的例子。我们定义了一个错误处理函数，该函数会将错误信息记录到一个文件中（用 XML 格式），并在脚本出现关键错误时将错误信息通过 Email 发送给开发者。
   <example>
    <title>在脚本中使用错误处理</title>
    <programlisting role="php">
<![CDATA[
<?php
// we will do our own error handling
error_reporting(0);

// user defined error handling function
function userErrorHandler ($errno, $errmsg, $filename, $linenum, $vars) {
    // timestamp for the error entry
    $dt = date("Y-m-d H:i:s (T)");

    // define an assoc array of error string
    // in reality the only entries we should
    // consider are 2,8,256,512 and 1024
    $errortype = array (
                1   =>  "Error",
                2   =>  "Warning",
                4   =>  "Parsing Error",
                8   =>  "Notice",
                16  =>  "Core Error",
                32  =>  "Core Warning",
                64  =>  "Compile Error",
                128 =>  "Compile Warning",
                256 =>  "User Error",
                512 =>  "User Warning",
                1024=>  "User Notice"
                );
    // set of errors for which a var trace will be saved
    $user_errors = array(E_USER_ERROR, E_USER_WARNING, E_USER_NOTICE);
    
    $err = "<errorentry>\n";
    $err .= "\t<datetime>".$dt."</datetime>\n";
    $err .= "\t<errornum>".$errno."</errornum>\n";
    $err .= "\t<errortype>".$errortype[$errno]."</errortype>\n";
    $err .= "\t<errormsg>".$errmsg."</errormsg>\n";
    $err .= "\t<scriptname>".$filename."</scriptname>\n";
    $err .= "\t<scriptlinenum>".$linenum."</scriptlinenum>\n";

    if (in_array($errno, $user_errors))
        $err .= "\t<vartrace>".wddx_serialize_value($vars,"Variables")."</vartrace>\n";
    $err .= "</errorentry>\n\n";
    
    // for testing
    // echo $err;

    // save to the error log, and e-mail me if there is a critical user error
    error_log($err, 3, "/usr/local/php4/error.log");
    if ($errno == E_USER_ERROR)
        mail("phpdev@example.com","Critical User Error",$err);
}


function distance ($vect1, $vect2) {
    if (!is_array($vect1) || !is_array($vect2)) {
        trigger_error("Incorrect parameters, arrays expected", E_USER_ERROR);
        return NULL;
    }

    if (count($vect1) != count($vect2)) {
        trigger_error("Vectors need to be of the same size", E_USER_ERROR);
        return NULL;
    }

    for ($i=0; $i<count($vect1); $i++) {
        $c1 = $vect1[$i]; $c2 = $vect2[$i];
        $d = 0.0;
        if (!is_numeric($c1)) {
            trigger_error("Coordinate $i in vector 1 is not a number, using zero", 
                            E_USER_WARNING);
            $c1 = 0.0;
        }
        if (!is_numeric($c2)) {
            trigger_error("Coordinate $i in vector 2 is not a number, using zero", 
                            E_USER_WARNING);
            $c2 = 0.0;
        }
        $d += $c2*$c2 - $c1*$c1;
    }
    return sqrt($d);
}

$old_error_handler = set_error_handler("userErrorHandler");

// undefined constant, generates a warning
$t = I_AM_NOT_DEFINED;

// define some "vectors"
$a = array(2,3,"foo");
$b = array(5.5, 4.3, -1.6);
$c = array (1,-3);

// generate a user error
$t1 = distance($c,$b)."\n";

// generate another user error
$t2 = distance($b,"i am not an array")."\n";

// generate a warning
$t3 = distance($a,$b)."\n";

?>
]]>
    </programlisting>
   </example>
   这仅仅是关于<link linkend="ref.errorfunc">错误处理和记录函数</link>的一个简单的例子。
  </para>

  <para>
   请参阅
   <function>error_reporting</function>,
   <function>error_log</function>,
   <function>set_error_handler</function>,
   <function>restore_error_handler</function>, 
   <function>trigger_error</function>,
   <function>user_error</function>
  </para>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
