<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.6 $ -->
<!-- $Author: gregory $ -->
<!-- EN-Revision: 1.17 Maintainer: thomaslio Status: ready -->

<!-- CREDITS: Gregory -->
 <chapter id="features.images">
  <title>图形的建立与操作</title>

  <simpara>
   PHP 并不只局限于建立 HTML 的输出，它同样可以被用来建立和操作各种不同格式的图片文件，包括 GIF、PNG、JPG、WBMP 和 XPM。更方便的是，PHP 能够直接将图形以数据流方式输出浏览器。如果要使用该功能，您可能需要将 PHP 和 <link linkend="ref.image">GD 图形函数库</link>一同编译。根据您需要使用的图形格式的不同，GD 和 PHP 可能还需要其它的扩展库。另外，GD 在其 1.6 版本后就不再支持 GIF 格式了。
  </simpara>

  <para>
   <example>
    <title>使用 PHP 建立 PNG 图像</title>
    <programlisting role="php">
<![CDATA[
<?php
    Header("Content-type: image/png");
    $string=implode($argv," ");
    $im = ImageCreateFromPng("images/button1.png");
    $orange = ImageColorAllocate($im, 220, 210, 60);
    $px = (imagesx($im)-7.5*strlen($string))/2;
    ImageString($im,3,$px,9,$string,$orange);
    ImagePng($im);
    ImageDestroy($im);
?>
]]>
    </programlisting>
   </example>
  </para>

  <para>
   该范例可以在页面中，以 &lt;img src=&quot;button.php?text&quot;&gt; 的形式调用。上述的 button.php 脚本会将字符串“text”显示在以 &quot;images/button1.png&quot; 文件为基础的图像上，并输出最后得到的图像。使用这个方法，您就不用每次更改按钮上的文字都要制作新的按钮图形。使用这个方法，按钮图片可以动态的生成。
  </para>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
