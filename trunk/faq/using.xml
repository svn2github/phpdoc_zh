<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision: 1.5 $ -->
<!-- $Author: gregory $ -->
<!-- EN-Revision:1.20 Maintainer: dallas Status: ready -->
<chapter id="faq.using">
  <title>使用 PHP</title>
  <titleabbrev>使用 PHP</titleabbrev>

  <para>
   本节汇集了你在写 PHP 脚本时碰到的大多数普通错误。
  </para>

  <qandaset>
   <qandaentry id="faq.using.anyform">
    <question>
     <para>
      我想写一个可以处理任何表单来的数据的通用 PHP 脚本。我怎么知道哪个 POST 方法变量可用呢？
     </para>
    </question>
    <answer>
     <para>
      确保在 &php.ini 文件中激活了 <link linkend="ini.track-vars">track_vars</link> 特性。自从 PHP 4.0.3
      开始，此特性总是打开的。当 <literal>track_vars</literal>
      打开时，会建立一些相关的数组，这里最重要的是：<literal>$_POST</literal>（在 <literal>PHP</literal> 4.1.0
      之前叫做 <literal>$HTTP_POST_VARS</literal>）。因此要写出处理 POST
      方法变量的通用脚本你需要一些类似如下的方法：
      <programlisting role="php">
<![CDATA[
foreach ($_POST as $var => $value) {
    echo "$var = $value<br>\n";
}
]]>
      </programlisting>
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.using.singlequotes">
    <question>
     <para>
      我需要把所有的单引号（'）转换为反斜线后面跟着单引号。怎样用正则表达式做到呢？
     </para>
    </question>
    <answer>
     <para>
      首先看看 <function>addslashes</function> 函数。它正是做这件事的。同样也看看你的
      &php.ini; 文件中的 <link linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link> 选项。
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.using.wrong-order">
    <question>
     <para>
      当我这样做时，输出显示的次序是错的：
      
     <programlisting role="php">
function myfunc($argument)
{
    echo $argument + 10;
}
$variable = 10;
echo "myfunc($variable) = " . myfunc($variable);
    </programlisting>
     这是怎么回事？
     </para>
    </question>
    <answer>
     <para>
      要在一个表达式中（例如在上面的例子中和其它字符串连接）使用函数的结果，你需要
      <function>return</function> 这个值，而不是 <function>echo</function> 它。
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.using.newlines">
    <question>
     <para>
      下面代码怎么没有分成两行显示？
      <programlisting role="php">
<![CDATA[
<pre>
<?php echo "This should be the first line."; ?>
<?php echo "This should show up after the new line above."; ?>
</pre>
]]>
      </programlisting>
     </para>
    </question>
    <answer>
     <para>
      在 PHP 中，一段代码的结束标记要么是“?&gt;”要么是“?&gt;\n”（\n 表示换行）。因此在上面的例子中，输出的句子将显示在同一行中，因为
      PHP 忽略了代码结束标记后面的换行。这意味着如果要输出一个换行符，你需要在每段
      PHP 代码的结束标记后面多加一个换行。
     </para>
     <para>
      PHP 为什么这么做呢？因为在格式化正常的 HTML 时，这样通常会更容易。假如输出了换行而你不需要这个换行时，你就不得不用一个非常长的行来达到这样的效果，或者让产生的 HTML 页面的源文件的格式很难读。
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.using.headers-sent">
    <question>
     <para>
      我得到消息“Warning: Cannot send session cookie - headers already
      sent...”或者“Cannot add header information - headers already sent...”。
     </para>
    </question>
    <answer>
     <para>
      函数 <function>header</function>，<function>setcookie</function> 和 session 函数需要在输出流中增加报头。但是报头只能在其它任何输出内容之前发送，检查你的代码是否在任何已经发送的内容后面发送报头。
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.using.header">
    <question>
     <para>
      我需要直接访问请求报头中的信息，怎么能办到?
     </para>
    </question>
    <answer>
     <para>
      如果你以 Apache 的模块方式运行 PHP，那么函数 <function>getallheaders</function> 可以做这件事。因此下面的代码可以显示所有的请求报头：
      <programlisting role="php">
<![CDATA[
$headers = getallheaders();
foreach ($headers as $name => $content) {
    echo "headers[$name] = $content<br>\n";
}
]]>
      </programlisting>
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.using.authentication">
    <question>
     <para>
      当我用 IIS 进行 HTTP 认证时得到“No Input file specified”消息。
     </para>
    </question>
    <answer>
     <para>
      IIS 的安全模型这里有毛病。这是所有 IIS 下运行的 CGI 程序所共有的问题。一个解决办法是建立一个纯
      HTML 文件（不经过 PHP 解析）作为要进入认证目录的登录页面，然后用 META 标记来重定向到
      PHP 页面，或者用一个连接到 PHP 页面。然后 PHP 就可以正确识别认证信息了。如果是用
      ISAPI 模块，那没有这个问题。其它 NT 下的 web 服务器不受此影响。更多信息见：<ulink url="&url.iis;">&url.iis;</ulink>。
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.using.netscape">
    <question>
     <para>
      我的 PHP 脚本在 IE 和 Lynx 下能工作，但是在 Netscape 中有的输出丢失了。当我用“查看源文件”时可以在
      IE 中看到内容，但是 Netscape 中不能。
     </para>
    </question>
    <answer>
     <para>
      Netscape 在关于 html 标记（例如 table）上比 IE 更严格。用一个 html 验证器，例如
      <ulink url="&url.w3.validator;">validator.w3.org</ulink> 来验证你的 html
      输出可能会有帮助。例如漏了 &lt;/table&gt; 可能会导致这样的结果。
     </para>
     <para>
      同样，IE 和 Lynx 都忽略了 HTML 流中的任何 NULs（<literal>\0</literal>），Netscape
      就不。最好的检查方法是编译 <link linkend="features.commandline">PHP 的命令行模式</link>版本（也称为
      CGI 版本）并从命令行运行你的脚本。在 *nix 中，用管道传递到 <literal>od -c</literal> 并查看任何
      <literal>\0</literal> 字符。如果在 Windows 下你需要能够查看二进制文件格式的编辑器或程序。当
      Netscape 碰到 NUL 时就不会输出之后该行的任何内容而 IE 和 Lynx 都会。
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.using.mixml">
    <question>
     <para>
      我怎样混合使用 XML 和 PHP？它不认我的 &lt;?xml&gt; 标记！
     </para>
    </question>
    <answer>
     <para>
      你需要在 &php.ini; 文件中通过设定 <link linkend="ini.short-open-tag">short_tags</link> 为 0
      来关闭 PHP 的简短标记格式，或者通过相应的 Apache 选项。你甚至应该用 &lt;File&gt; 段落来选择性地这样做。
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.using.editor">
    <question>
     <para>
      怎样用 FrontPage 或者其它非要把我的代码移来移去的 HTML 编辑器来编辑 PHP？
     </para>
    </question>
    <answer>
     <para>
      最简单的方法是让 PHP 代码也能使用 ASP 标记。这可以让你用 ASP 风格的 &lt;% 和 %&gt; 代码定界符。一些流行的
      HTML 编辑器在处理此格式上更加智能化一些（目前如此）。要使用 ASP 风格的标记，你需要在 &php.ini; 中打开
      <link linkend="ini.asp-tags">asp_tags</link>，或者用相应的 Apache 配置选项。
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.using.variables">
    <question>
     <para>
      哪里可以找到所有可用的预定义变量的完整列表？为什么在 PHP 文档中没有？
     </para>
    </question>
    <answer>
     <para>
      最好的方法是把 <literal>&lt;?php phpinfo(); ?&gt;</literal> 粘贴到某一页并打开来看看。它将显示你的
      PHP 的所有分类的设置，包括环境变量和 web 服务器设定的特殊变量的列表。这个列表不能放在
      PHP 文档中，因为它在不同的服务器中会改变的。
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.using.cgi-vars">
    <question>
     <para>
      我试着在用户自定义函数中访问一个标准的 CGI 变量（例如 $DOCUMENT_ROOT 或 $HTTP_REFERER），但是找不到，哪里出了错？
     </para>
    </question>
    <answer>
     <para>
      环境变量通常都是全局变量，因此你必须在你的函数中声明它们为全局变量（例如用
      <literal>global $DOCUMENT_ROOT;</literal>），或者用全局变量数组（例如
      <literal>$GLOBALS["DOCUMENT_ROOT"]</literal>）。
     </para>
     <note> 
      <para> 
       从 PHP 4.1.0 开始也可以使用超级全局数组
       <literal>$_SERVER</literal>，它在每个函数中都可用。例如你现在可以用
       <literal>$_SERVER["DOCUMENT_ROOT"]</literal> 来代替
       <literal>$DOCUMENT_ROOT</literal>。
      </para> 
     </note> 
    </answer>
   </qandaentry>

  </qandaset>
 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
