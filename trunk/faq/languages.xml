<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision: 1.9 $ -->
<!-- $Author: yincheng $ -->
<!-- EN-Revision:1.15 Maintainer: dallas Status: ready -->
 <chapter xml:id="faq.languages" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>PHP 和其它语言</title>
  <titleabbrev>PHP 和其它语言</titleabbrev>

  <para>
   PHP 是 web 编程最好的语言，但其它语言怎样呢？
  </para>

  <qandaset>
   <qandaentry xml:id="faq.languages.asp">
    <question>
     <para>PHP 对 ASP？</para>
    </question>
    <answer>
     <para>
      ASP 本身并不真的是一种语言，它是 Active Server Pages 的缩写，实际上用来进行
      ASP 编程的语言是 Visual Basic Script 或者 JScript。ASP 最大的缺点是它是一个专有系统而只能在
      Microsoft Internet Information Server（IIS）上使用。这限制了它只能在基于
      Win32 的服务器上使用。有几项进行中的计划使 ASP 可以在其它环境和 web 服务器中使用：<link
      xlink:href="&url.halcyon;">Halcyon</link>（商业的）的 <link
      xlink:href="&url.instantasp;">InstantASP</link>，<link
      xlink:href="&url.chilisoft;">Chili!Soft</link>（商业的） 的 Chili!Soft ASP。ASP
      被认为比 PHP 慢和麻烦，也不稳定。一些 ASP 的正面观点是既然它基本上用
      VBScript，那如果你已经懂得用 Visual Basic 编程就会相对容易拾起这种语言。在 IIS 服务器中默认激活了
      ASP 支持，这使它容易启动和运行。ASP 中内置的组件实在是很有限，因此如果需要一些“高级的”特点例如与
      FTP 服务器交互，需要购买额外的组件。
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.languages.aspconverter">
    <question>
     <para>有 ASP 到 PHP 的转换器吗？</para>
    </question>
    <answer>
     <para>
      有，服务器端的 <link
      xlink:href="&url.asp2php;">asp2php</link>是最经常被提及的，还有一个选择是<link
      xlink:href="&url.asptranslator;">此客户端</link>。
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.languages.coldfusion">
    <question>
     <para>PHP 对 Cold Fusion？</para>
    </question>
    <answer>
     <para>
      PHP 普遍被认为对复杂的编程任务更快和更有效以及勇于尝试新主意。PHP
      也通常被提及更稳定以及占用更少资源。Cold Fusion 具有更好的错误处理，数据库抽象和数据解析，尽管数据库抽象已经在
      PHP 4 中解决了。另外一个被作为 Cold Fusion 的强项列出来的是它卓越的搜索引擎，但也被指出搜索引擎不是
      web 脚本语言中应该包括的东西。PHP 可以在几乎每一个现有的平台下运行；Cold Fusion 只能在 Win32，Solaris，Linux
      和 HP/UX 下运行。Cold Fusion 有很好的集成开发环境以及通常更容易上手，反之 PHP
      则一开头就需要更多的编程知识。Cold Fusion 是为非程序员的头脑所设计，而 PHP 则聚焦于程序员。
     </para>
     <para>
      有关此话题 Michael J Sheldon 在 PHP
      邮件列表中发表了一个很棒的摘要。这里有一个拷贝
      <link xlink:href="&url.coldfusion.summary;">&url.coldfusion.summary;</link>。
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.languages.perl">
    <question>
     <para>PHP 对 Perl？</para>
    </question>
    <answer>
     <para>
      PHP 对 Perl 最大的优势就是 PHP 是为 web 脚本设计的而 Perl 则被设计用来做更多的事也因此而非常复杂。Perl
      的灵活性／复杂性使得用它能很容易写出代码但却让另一个作者／编程者非常难读懂。PHP
      则不容易把人搞糊涂以及具有更严谨的格式同时也不失灵活性。PHP 比 Perl 更容易集成进现有的 HTML 中去。PHP
      具有差不多所有 Perl 的“好”功能：结构，语法等等，但却没有使它达到 Perl 的费解程度。Perl
      是一种久经考验真正的语言，从上个世纪八十年代末起就到处都有，但是 PHP 成熟得非常快。
     </para>
    </answer>
   </qandaentry>

  </qandaset>
 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
