<?xml version='1.0' encoding='utf-8'?>
<!-- $Revision: 1.1 $ -->
<!-- $Author: eniac2008 $ -->
<!-- EN-Revision: 1.10 Maintainer: Altair Status: ready -->
<refentry xml:id="function.spl-autoload-register" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>spl_autoload_register</refname>
  <refpurpose>注册__autoload()函数</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>spl_autoload_register</methodname>
   <methodparam choice="opt"><type>callback</type><parameter>autoload_function</parameter></methodparam>
  </methodsynopsis>
  <para>
  将函数注册到SPL __autoload函数栈中。如果该栈中的函数尚未激活，则激活它们。
  </para>
  <para>
  如果在你的程序中已经实现了__autoload函数，它必须显式注册到__autoload栈中。因为
  spl_autoload_register()函数会将Zend Engine中的__autoload函数取代为spl_autoload()或spl_autoload_call()。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>autoload_function</parameter></term>
     <listitem>
      <para>
       欲注册的自动装载函数。如果没有提供任何参数，则自动注册autoload的默认实现函数<function>spl_autoload</function>。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>spl_autoload_register</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php

namespace Foobar;

class Foo {
    static public function test($name) {
        print '[['. $name .']]';
    }
}

spl_autoload_register(__NAMESPACE__ .'::Foo::test'); // As of PHP 5.3.0

new InexistentClass;

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
[[Foobar::InexistentClass]]
Fatal error: Class 'Foobar::InexistentClass' not found in ...
]]>
    </screen>
   </example>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
