<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 327525 $ -->

<chapter xml:id="yaf.appconfig" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title xmlns="http://docbook.org/ns/docbook">Application Configuration</title>
 <para>
  你需要给出一个config的数组或者ini文件(参见
  <classname>Yaf_Config_Ini</classname>) 用来传入
  <methodname>Yaf_Application::__construct</methodname>. 
 </para>
 <para>
  Yaf和用户共用一个配置空间, 也就是在Yaf_Application初始化时刻给出的配置文件中的配置. 作为区别, Yaf的配置项都以"yaf."或者"application."开头,如果同一个配置项同时使用了"yaf."和"application."，那么"application."会生效，而"yaf."不会.
  <example>
   <title>config为数组的例子</title>
   <programlisting role="php">
<![CDATA[
<?php
    $configs = array(
            "application" => array(
                "directory" => dirname(__FILE__),
                "dispatcher" => array(
                      "catchException" => 0,
                    ),
                "view" => array(
                       "ext" => "phtml",
                    ),
                ),
           );
    $app = new Yaf_Application($config);
?>
]]>
   </programlisting>
  </example>
  <example>
   <title>config为ini文件的例子</title>
   <programlisting role="ini">
<![CDATA[
[yaf]
yaf.directory = APPLICATION_PATH "/appliation"
yaf.dispatcher.catchException = 0

[product : yaf]
; user configuration list here
]]>
   </programlisting>
  </example>
  </para>
  <para>
  <table>
   <title>Yaf Application Config</title>
   <tgroup cols="3">
    <thead>
     <row>
      <entry>&Name;</entry>
      <entry>&Default;</entry>
      <entry>&Changelog;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>application.directory</entry>
      <entry></entry>
      <entry><!-- leave empty, this will be filled by an automatic script --></entry>
     </row>
     <row>
      <entry>application.ext</entry>
      <entry>"php"</entry>
      <entry><!-- leave empty, this will be filled by an automatic script --></entry>
     </row>
     <row>
      <entry>application.view.ext</entry>
      <entry>"phtml"</entry>
      <entry><!-- leave empty, this will be filled by an automatic script --></entry>
     </row>
     <row>
      <entry>application.modules</entry>
      <entry>"index"</entry>
      <entry><!-- leave empty, this will be filled by an automatic script --></entry>
     </row>
     <row>
      <entry>application.library</entry>
      <entry>application.directory . "/library"</entry>
      <entry><!-- leave empty, this will be filled by an automatic script --></entry>
     </row>
     <row>
      <entry>application.library.directory</entry>
      <entry>application.directory . "/library"</entry>
      <entry><!-- leave empty, this will be filled by an automatic script --></entry>
     </row>
     <row>
      <entry>application.library.namespace</entry>
      <entry>""</entry>
      <entry><!-- leave empty, this will be filled by an automatic script --></entry>
     </row>
     <row>
      <entry>application.bootstrap</entry>
      <entry>application.directory . "/Bootstrap" . application.ext</entry>
      <entry><!-- leave empty, this will be filled by an automatic script --></entry>
     </row>
     <row>
      <entry>application.baseUri</entry>
      <entry>""</entry>
      <entry><!-- leave empty, this will be filled by an automatic script --></entry>
     </row>
     <row>
      <entry>application.dispatcher.defaultRoute</entry>
      <entry></entry>
      <entry><!-- leave empty, this will be filled by an automatic script --></entry>
     </row>
     <row>
      <entry>application.dispatcher.throwException</entry>
      <entry>1</entry>
      <entry><!-- leave empty, this will be filled by an automatic script --></entry>
     </row>
     <row>
      <entry>application.dispatcher.catchException</entry>
      <entry>0</entry>
      <entry><!-- leave empty, this will be filled by an automatic script --></entry>
     </row>
     <row>
      <entry>application.dispatcher.defaultModule</entry>
      <entry>"index"</entry>
      <entry><!-- leave empty, this will be filled by an automatic script --></entry>
     </row>
     <row>
      <entry>application.dispatcher.defaultController</entry>
      <entry>"index"</entry>
      <entry><!-- leave empty, this will be filled by an automatic script --></entry>
     </row>
     <row>
      <entry>application.dispatcher.defaultAction</entry>
      <entry>"index"</entry>
      <entry><!-- leave empty, this will be filled by an automatic script --></entry>
     </row>
     <row>
      <entry>application.system</entry>
      <entry></entry>
      <entry><!-- leave empty, this will be filled by an automatic script --></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </para>

 &ini.descriptions.title;

 <para>
  <variablelist>
   <varlistentry xml:id="configuration.yaf.directory">
     <term>
      <parameter>application.directory</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       用来指定"controllers", "views", "models", "plugins"的目录.
      </para>
      <para>
       <note>
        <para>
         这是唯一一个没有默认值的配置项，你需要手动指定它.
        </para>
       </note>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="configuration.yaf.ext">
     <term>
      <parameter>application.ext</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       PHP脚本的扩展名
       <classname>Yaf_Loader</classname>).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="configuration.yaf.view.ext">
     <term>
      <parameter>application.view.ext</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       视图模板扩展名
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="configuration.yaf.modules">
     <term>
      <parameter>application.modules</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
      声明存在的模块名,尤其是路径超过3段的模块.
      </para>
      <para>
       Yaf以此来找出路径第一段是否是一个模块的名称.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="configuration.yaf.library">
     <term>
      <parameter>application.library</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       本地(自身)类库的绝对目录地址, 参见 <classname>Yaf_Loader</classname> 和
       <link linkend="ini.yaf.library">yaf.library</link>.
       </para>
       <note>
        <para>
         Yaf 2.1.6之后，这个配置项可以是一个数组，当它是数组的时候，类库的路径将尝试使用 <link
          linkend="configuration.yaf.library.directory">application.library.directory</link>
          的值
        </para>
       </note>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="configuration.yaf.library.directory">
     <term>
      <parameter>application.library.directory</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Yaf 2.1.6加入
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="configuration.yaf.library.namespace">
     <term>
      <parameter>application.library.namespace</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       以逗号分隔的本地库命名空间前缀。
      </para>
      <para>
       Yaf 2.1.6加入
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="configuration.yaf.bootstrap">
     <term>
      <parameter>application.bootstrap</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Bootstrap路径(绝对路径)
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="configuration.yaf.baseuri">
     <term>
      <parameter>application.baseUri</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       在路由中, 需要忽略的路径前缀.
       举个例子, 比如"/prefix/controller/action"这样的一个请求. 如果你将application.baseUri设置为"/prefix", 
       那么只有"/controller/action"会被当做路由路径.
      </para>
      <para>
        通常不需要设置, Yaf会自动判断.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="configuration.yaf.dispatcher.throwexception">
     <term>
      <parameter>application.dispatcher.throwException</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       如果设置为On, Yaf会在发生错误的时候抛出异常，参见<methodname>Yaf_Dispatcher::throwException</methodname>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="configuration.yaf.dispatcher.catchexception">
     <term>
      <parameter>application.dispatcher.catchException</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       如果设置为On, Yaf会在捕获到异常的时候跳转到响应的错误页面，参见<methodname>Yaf_Dispatcher::catchException</methodname>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="configuration.yaf.dispatcher.defaulRoute">
     <term>
      <parameter>application.dispatcher.defaultRoute</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       默认路由, 如果没用定义, 那么将使用静态路由来当做默认路由, 参见<methodname>Yaf_Router::addRoute</methodname>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="configuration.yaf.dispatcher.defaultmodule">
     <term>
      <parameter>application.dispatcher.defaultModule</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       The default module name, see also
       <methodname>Yaf_Dispatcher::setDefaultModule</methodname>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="configuration.yaf.dispatcher.defaultcontroller">
     <term>
      <parameter>application.dispatcher.defaultController</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       The default controller name, see also
       <methodname>Yaf_Dispatcher::setDefaultController</methodname>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="configuration.yaf.dispatcher.defaultaction">
     <term>
      <parameter>application.dispatcher.defaultAction</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       The default action name, see also
       <methodname>Yaf_Dispatcher::setDefaultAction</methodname>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="configuration.yaf.system">
     <term>
      <parameter>application.system</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Set yaf runtime configure in application.ini, like:
       <link linkend="ini.yaf.lowcase-path">application.system.lowcase_path</link>
       <note>
        <para>
        only those PHP_INI_ALL configures can be set in this way
       </para>
       </note>
      </para>
     </listitem>
    </varlistentry>

  </variablelist>
 </para>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
