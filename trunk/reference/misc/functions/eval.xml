<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.eval" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>eval</refname>
  <refpurpose>把字符串作为PHP代码执行</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>eval</methodname>
   <methodparam><type>string</type><parameter>code_str</parameter></methodparam>
  </methodsynopsis>
  <para>
   把字符串 <parameter>code_str</parameter> 作为PHP代码执行。
   除了其他，该函数能够执行储存于数据库文本字段内的PHP代码。
  </para>
  <para>
   使用 <function>eval</function> 时需注意几个因素：注意字符必须是有效的PHP代码，包括结尾的分号，以不至于解释器在 <function>eval</function> 之后退出。并且正确地转义 <parameter>code_str</parameter> 中的东西。你可以使用一个PHP闭合标签来混合输出HTML和PHP代码。
  </para>
  <para>
   同时需注意eval中的变量会被保留在之后的主脚本中。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>code_str</parameter></term>
     <listitem>
      <para>
      需要被执行的字符串 <parameter>code_str</parameter> 不能包含 <link
       linkend="language.basic-syntax.phpmode">PHP Opening tags</link>。
      </para>
      <para>
       <literal>return</literal> 语句会立即中止当前字符串的执行。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>eval</function> 返回 &null;，除非在执行的代码中 <literal>return</literal> 了一个值，函数返回该值。
   如果在执行的代码中有一个解析错误，<function>eval</function> 返回
   &false;，之后的代码将正常执行。无法使用 <function>set_error_handler</function> 捕获 <function>eval</function> 中的解析错误。
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>eval</function> 例子 - 简单的文本合并</title>
    <programlisting role="php">
<![CDATA[
<?php
$string = 'cup';
$name = 'coffee';
$str = 'This is a $string with my $name in it.';
echo $str. "\n";
eval("\$str = \"$str\";");
echo $str. "\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
This is a $string with my $name in it.
This is a cup with my coffee in it.
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;

  &note.language-construct;

  &tip.ob-capture;
  <note>
   <para>
    如果在执行的代码中产生了一个致命的错误（fatal error），整个脚本会退出。
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>call_user_func</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
