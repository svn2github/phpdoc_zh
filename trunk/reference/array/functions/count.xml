<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision: 1.4 $ -->
<!-- $Author: dallas $ -->
<!-- EN-Revision: 1.17 Maintainer: dallas Status: ready -->
  <refentry id="function.count">
   <refnamediv>
    <refname>count</refname>
    <refpurpose>计算数组中的单元数目或对象中的属性个数</refpurpose>
   </refnamediv>
   <refsect1>
    <title>说明</title>
    <methodsynopsis>
     <type>int</type><methodname>count</methodname>
     <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
     <methodparam choice="opt"><type>int</type><parameter>mode</parameter></methodparam>
    </methodsynopsis>
    <para>
     返回 <parameter>var</parameter> 中的单元数目，通常是一个
     <type>array</type>，任何其它类型都只有一个单元。
    </para>
    <para>
     对于对象，如果安装了 <link linkend="ref.spl">SPL</link>，可以通过实现
     <literal>Countable</literal> 接口来调用
     <function>count</function>。该接口只有一个方法
     <function>count</function>，此方法返回 <function>count</function>
     函数的返回值。
    </para>
    <para>
     如果 <parameter>var</parameter> 不是数组类型或者实现了
     <literal>Countable</literal> 接口的对象，将返回
     <literal>1</literal>，有一个例外，如果
     <parameter>var</parameter> 是 &null; 则结果是 <literal>0</literal>。
    </para>
    <note>
     <simpara>
      可选的 <parameter>mode</parameter> 参数自 PHP 4.2.0 起可用。
     </simpara>
    </note>
    <para>
     如果可选的 <parameter>mode</parameter> 参数设为
     <constant>COUNT_RECURSIVE</constant>（或 1），<function>count</function>
     将递归地对数组计数。对计算多维数组的所有单元尤其有用。<parameter>mode</parameter>
     的默认值是 <literal>0</literal>。<function>count</function>
     识别不了无限递归。
    </para>
    <caution>
     <para>
      <function>count</function> 对没有初始化的变量返回 0，但对于空的数组也会返回 0。用
      <function>isset</function> 来测试变量是否已经初始化。
     </para>
    </caution>
    <para>
     请参考手册中<link linkend="language.types.array">数组</link>一节中关于怎样在
     PHP 中实现和使用数组的详细解释。
    </para>
    <para>
     <example>
      <title><function>count</function> 例子</title>
      <programlisting role="php">
<![CDATA[
<?php
$a[0] = 1;
$a[1] = 3;
$a[2] = 5;
$result = count($a);
// $result == 3

$b[0] = 7;
$b[5] = 9;
$b[10] = 11;
$result = count($b);
// $result == 3;

$result = count(null);
// $result == 0

$result = count(false);
// $result == 1
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title><function>count</function> 的递归例子（PHP &gt;= 4.2.0）</title>
      <programlisting role="php">
<![CDATA[
<?php
$food = array('fruits'  => array('orange', 'banana', 'apple'),
              'veggie'  => array('carrot', 'collard','pea'));

// recursive count
echo count($food, COUNT_RECURSIVE);  // output 8

// normal count
echo count($food);                  // output 2
?>
]]>
      </programlisting>
     </example>
    </para>

    <para>
     参见 <function>is_array</function>，<function>isset</function>
     和 <function>strlen</function>。
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
