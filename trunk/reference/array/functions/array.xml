<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision: 1.3 $ -->
<!-- $Author: dallas $ -->
<!-- EN-Revision: 1.4 Maintainer: dallas Status: ready -->
  <refentry id="function.array">
   <refnamediv>
    <refname>array</refname>
    <refpurpose>
     新建一个数组
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>说明</title>
     <methodsynopsis>
      <type>array</type><methodname>array</methodname>
      <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
     </methodsynopsis>
    <para>
     返回根据参数建立的数组。参数可以用 <literal>=&gt;</literal> 运算符给出索引。
    </para>
    <para>
     <note>
      <para>
       <function>array</function> 是一个语言结构，用于字面上表示数组，不是常规的函数。
      </para>
     </note>
    </para>
    <para>
     语法“index =&gt; values”，用逗号分开，定义了索引和值。索引可以是字符串或数字。如果省略了索引，会自动产生从
     0 开始的整数索引。如果索引是整数，则下一个产生的索引将是目前最大的整数索引
     + 1。注意如果定义了两个完全一样的索引，则后面一个会覆盖前一个。
    </para>
    <para>
     下面的例子演示了怎样建立一个二维数组，怎样给相应的数组指定键名，以及怎样在普通数组中略过和继续数字索引。
     <example>
      <title><function>array</function> 例子</title>
      <programlisting role="php">
<![CDATA[
$fruits = array (
    "fruits"  => array ("a"=>"orange", "b"=>"banana", "c"=>"apple"),
    "numbers" => array (1, 2, 3, 4, 5, 6),
    "holes"   => array ("first", 5 => "second", "third")
);
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title><function>array</function> 的自动索引</title>
      <programlisting role="php">
<![CDATA[
$array = array( 1, 1, 1, 1,  1, 8=>1,  4=>1, 19, 3=>13);
print_r($array);
]]>
      </programlisting>
      <para>
       将显示：
       <screen role="php">
<![CDATA[
Array
(
    [0] => 1
    [1] => 1
    [2] => 1
    [3] => 13
    [4] => 1
    [8] => 1
    [9] => 19
)
]]>
       </screen>
      </para>
     </example>
     注意索引 3 被定义了两次，保留了最后的值 13。索引 4 在 索引
     8 之后定义，下一个自动生成的索引（值为 19 那个）为 9，因为最大的索引是 8。
    </para>
    <para>
     本例建立了从 1 开始的数组。
     <example>
      <title>从 1 开始索引的 <function>array</function></title>
      <programlisting role="php">
<![CDATA[
$firstquarter  = array(1 => 'January', 'February', 'March');
print_r($firstquarter);
]]>
      </programlisting>
      <para>
       将显示：
       <screen>
<![CDATA[
Array
(
    [1] => 'January'
    [2] => 'February'
    [3] => 'March'
)
]]>
       </screen>
      </para>
     </example>
    </para>
    <para>
     参见 <function>array_pad</function>，<function>list</function> 和 <function>range</function>。
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
