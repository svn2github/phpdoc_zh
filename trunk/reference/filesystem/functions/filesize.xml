<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- $Author$ -->
<!-- EN-Revision: n/a Maintainer: dallas Status: ready -->
<refentry xml:id="function.filesize" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>filesize</refname>
  <refpurpose>取得文件大小</refpurpose>
 </refnamediv>
 <refsect1>
  <title>说明</title>
  <methodsynopsis>
   <type>int</type><methodname>filesize</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
  </methodsynopsis>
  <para>
   返回文件大小的字节数，如果出错返回 &false; 并生成一条
   <constant>E_WARNING</constant> 级的错误。
  </para>
  <note>
   <simpara>
    因为 PHP 的整数类型是有符号的，并且大多数平台使用 32
    位整数，<function>filesize</function> 函数在碰到大于 2GB
    的文件时可能会返回非预期的结果。对于 2GB 到 4GB
    之间的文件通常可以使用
    <literal>sprintf("%u", filesize($file))</literal> 来克服此问题。
   </simpara>
  </note>
  &note.clearstatcache;
  &tip.fopen-wrapper.stat;
  <para>
   <example>
    <title><function>filesize</function> 例子</title>
    <programlisting role="php">
<![CDATA[
<?php

// 输出类似：somefile.txt: 1024 bytes

$filename = 'somefile.txt';
echo $filename . ': ' . filesize($filename) . ' bytes';

?>
]]>
    </programlisting>
   </example>
  </para>
  <simpara>
   参见 <function>file_exists</function>。
  </simpara>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
