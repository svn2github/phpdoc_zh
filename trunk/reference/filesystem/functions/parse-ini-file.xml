<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- $Author$ -->
<!-- EN-Revision: n/a Maintainer: dallas Status: ready -->
<refentry xml:id="function.parse-ini-file" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>parse_ini_file</refname>
  <refpurpose>解析一个配置文件</refpurpose>
 </refnamediv>
 <refsect1>
  <title>说明</title>
  <methodsynopsis>
   <type>array</type><methodname>parse_ini_file</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>process_sections</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>parse_ini_file</function> 载入一个由
   <parameter>filename</parameter> 指定的 ini
   文件，并将其中的设置作为一个联合数组返回。如果将最后的
   <parameter>process_sections</parameter> 参数设为
   &true;，将得到一个多维数组，包括了配置文件中每一节的名称和设置。<parameter>process_sections</parameter>
   的默认值是 &false;。
  </para>
  <note>
   <para>
    本函数和 &php.ini;
    文件没有关系，该文件在运行脚本时就已经处理过了。本函数可以用来读取你自己的应用程序的配置文件。
   </para>
  </note>
  <note>
   <para>
    如果 ini 文件中的值包含任何非字母数字的字符，需要将其括在双引号中（"）。
   </para>
  </note>
  <note>
   <simpara>
    自 PHP 4.2.1 其本函数也受到&safemode;和
    <link linkend="ini.open-basedir">open_basedir</link> 的影响。
   </simpara>
  </note>
  <note>
   <para>
    自 PHP 5.0 版本开始，该函数也处理选项值内的新行。
   </para>
  </note>
  <note>
   <simpara>
    有些保留字不能作为 ini 文件中的键名，包括：null，yes，no，true 和 false。值为
    null，no 和 false 等效于 ""，值为 yes 和 true 等效于 "1"。字符
    <literal>{}|&amp;~![()"</literal> 也不能用在键名的任何地方，而且这些字符在选项值中有着特殊的意义。
   </simpara>
  </note>
  <para>
   ini 文件的结构和 &php.ini; 的相似。
  </para>
  <para>
   <link linkend="language.constants">常量</link>也可以在 ini
   文件中被解析，因此如果在运行 <function>parse_ini_file</function>
   之前定义了常量作为 ini 的值，将会被集成到结果中去。只有 ini
   的值会被求值。例如：
  </para>
  <para>
    <example>
    <title><filename>sample.ini</filename> 的内容</title>
    <programlisting>
<![CDATA[
; This is a sample configuration file
; Comments start with ';', as in php.ini

[first_section]
one = 1
five = 5
animal = BIRD

[second_section]
path = "/usr/local/bin"
URL = "http://www.example.com/~username"
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><function>parse_ini_file</function> 例子</title>
    <programlisting role="php">
<![CDATA[
<?php

define('BIRD', 'Dodo bird');

// Parse without sections
$ini_array = parse_ini_file("sample.ini");
print_r($ini_array);

// Parse with sections
$ini_array = parse_ini_file("sample.ini", true);
print_r($ini_array);

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [one] => 1
    [five] => 5
    [animal] => Dodo bird
    [path] => /usr/local/bin
    [URL] => http://www.example.com/~username
)
Array
(
    [first_section] => Array
        (
            [one] => 1
            [five] => 5
            [animal] = Dodo bird
        )

    [second_section] => Array
        (
            [path] => /usr/local/bin
            [URL] => http://www.example.com/~username
        )

)
]]>
    </screen>
   </example>
  </para>
  <para>
   由数字组成的键名和小节名会被 PHP 当作<link
   linkend="language.types.integer">整数</link>来处理，因此以
   0 开头的数字会被当作八进制而以 0x 开头的会被当作十六进制。
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
