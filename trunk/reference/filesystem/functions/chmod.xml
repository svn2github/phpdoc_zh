<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: HonestQiao Status: ready -->
<!-- Reviewed: no Maintainer: HonestQiao -->
<refentry xml:id="function.chmod" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>chmod</refname>
  <refpurpose>改变文件模式</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>chmod</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam><type>int</type><parameter>mode</parameter></methodparam>
  </methodsynopsis>
  <para>
   尝试将 <parameter>filename</parameter> 所指定文件的模式改成
   <parameter>mode</parameter> 所给定的。
  </para>
  <para>
   注意 <parameter>mode</parameter> 不会被自动当成八进制数值，而且也不能用字符串（例如 "g+w"）。要确保正确操作，需要给
   <parameter>mode</parameter> 前面加上 0：
  </para>
  <para>
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
chmod("/somedir/somefile", 755);   // 十进制数，可能不对
chmod("/somedir/somefile", "u+rwx,go+rx"); // 字符串，不对
chmod("/somedir/somefile", 0755);  // 八进制数，正确的 mode 值
?>
]]>
    </programlisting>
   </informalexample>
  </para>
  <para>
   <parameter>mode</parameter> 参数包含三个八进制数按顺序分别指定了所有者、所有者所在的组以及所有人的访问限制。每一部分都可以通过加入所需的权限来计算出所要的权限。数字 1
   表示使文件可执行，数字 2 表示使文件可写，数字 4
   表示使文件可读。加入这些数字来制定所需要的权限。有关 UNIX 系统的文件权限可以阅读手册“man 1
   chmod”和“man 2 chmod”。
  </para>
  <para>
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
// Read and write for owner, nothing for everybody else
chmod("/somedir/somefile", 0600);

// Read and write for owner, read for everybody else
chmod("/somedir/somefile", 0644);

// Everything for owner, read and execute for others
chmod("/somedir/somefile", 0755);

// Everything for owner, read and execute for owner's group
chmod("/somedir/somefile", 0750);
?>
]]>
    </programlisting>
   </informalexample>
  </para>
  <para>
   &return.success;
  </para>
  <note>
   <para>
    当前用户指的是执行 PHP 的用户。很可能和通常的 shell 或者 FTP
    用户不是同一个。在大多数系统下文件模式只能被文件所有者的用户改变。
   </para>
  </note>
  &note.no-remote;
  <note>
   <simpara>
    当&safemode;打开的时候，PHP 会检查所操作的文件是否和正在执行的脚本具有相同的
    UID （所有者）。要注意的是，不能修改 SUID，SGID 和 sticky bits。
   </simpara>
  </note>
  <para>
   参见 <function>chown</function> 和 <function>chgrp</function>。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       Path to the file.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      <para>
       Note that <parameter>mode</parameter> is not automatically
       assumed to be an octal value, so strings (such as "g+w") will
       not work properly. To ensure the expected operation,
       you need to prefix <parameter>mode</parameter> with a zero (0):
      </para>
      <para>
       <informalexample>
        <programlisting role="php">
<![CDATA[
<?php
chmod("/somedir/somefile", 755);   // decimal; probably incorrect
chmod("/somedir/somefile", "u+rwx,go+rx"); // string; incorrect
chmod("/somedir/somefile", 0755);  // octal; correct value of mode
?>
]]>
        </programlisting>
       </informalexample>
      </para>
      <para>
       The <parameter>mode</parameter> parameter consists of three octal
       number components specifying access restrictions for the owner,
       the user group in which the owner is in, and to everybody else in
       this order. One component can be computed by adding up the needed
       permissions for that target user base. Number 1 means that you
       grant execute rights, number 2 means that you make the file
       writeable, number 4 means that you make the file readable. Add
       up these numbers to specify needed rights. You can also read more
       about modes on Unix systems with '<command>man 1 chmod</command>'
       and '<command>man 2 chmod</command>'.
      </para>
      <para>
       <informalexample>
        <programlisting role="php">
<![CDATA[
<?php
// Read and write for owner, nothing for everybody else
chmod("/somedir/somefile", 0600);

// Read and write for owner, read for everybody else
chmod("/somedir/somefile", 0644);

// Everything for owner, read and execute for others
chmod("/somedir/somefile", 0755);

// Everything for owner, read and execute for owner's group
chmod("/somedir/somefile", 0750);
?>
]]>
        </programlisting>
       </informalexample>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    The current user is the user under which PHP runs. It is probably not the
    same user you use for normal shell or FTP access. The mode can be changed
    only by user who owns the file on most systems.
   </para>
  </note>
  &note.no-remote;
  <note>
   <para>
    When &safemode; is enabled, PHP checks whether the files or directories
    you are about to operate on have the same UID (owner) as the script that
    is being executed. In addition, you cannot set the SUID, SGID and sticky
    bits.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>chown</function></member>
    <member><function>chgrp</function></member>
    <member><function>fileperms</function></member>
    <member><function>stat</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
