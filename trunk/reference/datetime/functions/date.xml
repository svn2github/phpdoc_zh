<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision: 1.2 $ -->
<!-- $Author: dallas $ -->
<!-- EN-Revision: 1.4 Maintainer: dallas Status: ready -->
  <refentry id="function.date">
   <refnamediv>
    <refname>date</refname>
    <refpurpose>格式化一个本地时间／日期</refpurpose>
   </refnamediv>
   <refsect1>
    <title>说明</title>
     <methodsynopsis>
      <type>string</type><methodname>date</methodname>
      <methodparam><type>string</type><parameter>format</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>
        timestamp
       </parameter></methodparam>
     </methodsynopsis>
    <para>
     返回将整数 <parameter>timestamp</parameter>
     按照给定的格式字串而产生的字符串。如果没有给出时间戳则使用本地当前时间。
     <note>
      <para>
       有效的时间戳典型范围是格林威治时间 1901 年 12 月 13 日 20:45:54
       到 2038 年 1 月 19 日 03:14:07。（此范围符合 32
       位有符号整数的最小值和最大值）。在 Windows 系统中此范围限制为从 1970 年 1 月 1 日到
       2038 年 1 月 19 日。
      </para>
      <para>
       要将字符串表达的时间转换成时间戳，应该使用
       <function>strtotime</function>。此外一些数据库有一些函数将其时间格式转换成时间戳（例如
       MySQL 的 UNIX_TIMESTAMP 函数）。
      </para>
     </note>
    </para>
    <para>
     格式字串可以识别以下字符：
     <itemizedlist>
      <listitem>
       <simpara>
        a - "am" 或 "pm"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        A - "AM" 或 "PM"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        B - Swatch Internet 时间
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        d - 月份中的第几天，有前导零的 2 位数字，例如 "01"
        to "31"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        D - 星期中的第几天，文本表示，3 个字母，例如 "Fri"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        F - 月份，完整的文本格式，例如 "January"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        g - 小时，12 小时格式，没有前导零，例如 "1" 到 "12"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        G - 小时，24 小时格式，没有前导零，例如 "0" 到 "23"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        h - 小时，12 小时格式，例如 "01" 到 "12"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        H - 小时，24 小时格式，例如 "00" 到 "23"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        i - 分钟，例如 "00" 到 "59"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        I（“i”的大写的字母）- 如果是夏令时则为 "1"，否则为 "0"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        j - 月份中的第几天，没有前导零，例如 "1" 到 "31"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        l（“L”的小写字母）- 星期中的第几天，完整的文本格式，例如 "Friday"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        L - 布尔值表示是否为闰年，例如 "0" 或者 "1"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        m - 月份，例如 "01" to "12"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        M - 月份，文本表示，3 个字母，例如 "Jan"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        n - 月份，没有前导零，例如 "1" 到 "12"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        O - 与格林威治时间相差的小时数，例如 "+0200"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        r - RFC 822 格式的日期，例如 "Thu, 21 Dec 2000 16:01:07 +0200"（PHP 4.0.4新增）
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        s - 秒数，例如 "00" 到 "59"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        S - 每月天数后面的英文后缀，2 个字符，例如 "st"，"nd"，"rd" 或者 "th"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        t - 给定月份所应有的天数，例如 "28" 到 "31"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        T - 本机所在的时区，例如 "EST" 或 "MDT"（【译者注】在 Windows
        下为完整文本格式，例如“Eastern Standard Time”，中文版会显示“中国标准时间”。）
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        U - 从 Unix 纪元（January 1 1970 00:00:00 GMT）开始至今的秒数
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        w - 星期中的第几天，数字表示，例如 "0"（星期天）到 "6"
        (Saturday)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        W - ISO-8601 格式年份中的第几周，每周从星期一开始（PHP 4.1.0 新加的）
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Y - 年份，4 位数字，例如 "1999"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        y - 年费，2 位数字，例如 "99"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        z - 年份中的第几天，例如 "0" 到 "365"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Z - 时差偏移量的秒数（例如 "-43200" 到 "43200"）。UTC 西边的时区偏移量总是负的，UTC
        东边的时区偏移量总是正的。
       </simpara>
      </listitem>
     </itemizedlist>
     格式字串中不能被识别的字符将原样显示。“Z”格式在使用 <function>gmdate</function> 时总是返回“0”。
    </para>
    <para>
     <example>
      <title><function>date</function> 例子</title>
      <programlisting role="php">
<![CDATA[
echo date ("l dS of F Y h:i:s A");
echo "July 1, 2000 is on a " . date ("l", mktime(0,0,0,7,1,2000));
]]>
      </programlisting>
     </example>
    </para>
    <para>
     在格式字串中的字符前加上反斜线来转义可以避免它被按照上表解释。如果加上反斜线后的字符本身就是一个特殊序列，那还要转义反斜线。
     <example>
      <title>在 <function>date</function> 中转义字符</title>
      <programlisting role="php">
<![CDATA[
echo date("l \\t\h\e jS"); // 显示类似于：Saturday the 8th
]]>
      </programlisting>
     </example>
    </para>
    <para>
     可以把 <function>date</function> 和
     <function>mktime</function> 结合使用来得到未来或过去的日期。
     <example>
      <title>
       <function>date</function> 和 <function>mktime</function> 例子
      </title>
      <programlisting role="php">
<![CDATA[
$tomorrow  = mktime (0,0,0,date("m")  ,date("d")+1,date("Y"));
$lastmonth = mktime (0,0,0,date("m")-1,date("d"),  date("Y"));
$nextyear  = mktime (0,0,0,date("m"),  date("d"),  date("Y")+1);
]]>
      </programlisting>
     </example>
     <note>
      <para>
       由于夏令时的缘故，这种方法比简单地在时间戳上加减一天或者一个月的秒数更可靠。
      </para>
     </note>
    </para>
    <para>
     一些使用 <function>date</function>
     格式化日期的例子。注意要转义所有其它的字符，因为目前有特殊含义的字符会产生不需要的结果，而其余字符在
     PHP 将来的版本中可能会被用上。当转义时，注意用单引号以避免类似 \n 的字符变成了换行符。
     <example>
      <title>
       <function>date</function> Formatting
      </title>
      <programlisting role="php">
<![CDATA[
/* Today is March 10th, 2001, 5:16:18 pm */
$today = date("F j, Y, g:i a");                 // March 10, 2001, 5:16 pm
$today = date("m.d.y");                         // 03.10.01
$today = date("j, n, Y");                       // 10, 3, 2001
$today = date("Ymd");                           // 20010310
$today = date('h-i-s, j-m-y, it is w Day z ');  // 05-16-17, 10-03-01, 1631 1618 6 Fripm01
$today = date('\i\t \i\s \t\h\e jS \d\a\y.');   // It is the 10th day.
$today = date("D M j G:i:s T Y");               // Sat Mar 10 15:16:08 MST 2001
$today = date('H:m:s \m \i\s\ \m\o\n\t\h');     // 17:03:17 m is month
$today = date("H:i:s");                         // 17:16:17
]]>
      </programlisting>
     </example>
    </para>
    <para>
     要格式化其它语种的日期，应该用 <function>setlocale</function> 和
     <function>strftime</function> 函数。
    </para>
    <para>
     参见 <function>getlastmod</function>，<function>gmdate</function>，<function>mktime</function>，<function>strftime</function> 和 <function>time</function>。
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
