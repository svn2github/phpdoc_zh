<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 313168 Maintainer: HonestQiao Status: ready -->
<!-- Reviewed: no Maintainer: HonestQiao -->
<refentry xml:id="function.date" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>date</refname>
  <refpurpose>格式化一个本地时间／日期</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
   <methodsynopsis>
    <type>string</type><methodname>date</methodname>
    <methodparam><type>string</type><parameter>format</parameter></methodparam>
    <methodparam choice="opt"><type>int</type><parameter>timestamp</parameter></methodparam>
   </methodsynopsis>
  <para>
   返回将整数 <parameter>timestamp</parameter>
   按照给定的格式字串而产生的字符串。如果没有给出时间戳则使用本地当前时间。换句话说，<parameter>timestamp</parameter>
   是可选的，默认值为 <function>time</function>。
  </para>
  <tip>
   <para>
    自 PHP 5.1.1 起有几个有用的<link
    linkend="datetime.constants">常量</link>可用作标准的日期／时间格式来指定
    <parameter>format</parameter> 参数。
   </para>
  </tip>
  <tip>
   <para>
    自 PHP 5.1 起在 <varname>$_SERVER['REQUEST_TIME']</varname>
    中保存了发起该请求时刻的时间戳。
   </para>
  </tip>
  <note>
   <para>
    有效的时间戳典型范围是格林威治时间 1901 年 12 月 13 日 20:45:54
    到 2038 年 1 月 19 日 03:14:07。（此范围符合 32
    位有符号整数的最小值和最大值）。不过在 PHP 5.1 之前此范围在某些系统（如
    Windows）中限制为从 1970 年 1 月 1 日到 2038 年 1 月 19 日。
   </para>
  </note>
  <note>
   <para>
    要将字符串表达的时间转换成时间戳，应该使用
    <function>strtotime</function>。此外一些数据库有一些函数将其时间格式转换成时间戳（例如
    MySQL 的 <link xlink:href="&url.mysql.docs.date;">UNIX_TIMESTAMP</link> 函数）。
   </para>
  </note>
  <para>
   <table>
    <title>格式字串可以识别以下 <parameter>format</parameter> 参数的字符串</title>
    <tgroup cols="3">
     <thead>
      <row>
       <entry><parameter>format</parameter> 字符</entry>
       <entry>说明</entry>
       <entry>返回值例子</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry align="center"><emphasis>日</emphasis></entry>
       <entry>---</entry>
       <entry>---</entry>
      </row>
      <row>
       <entry><literal>d</literal></entry>
       <entry>月份中的第几天，有前导零的 2 位数字</entry>
       <entry><literal>01</literal> 到 <literal>31</literal></entry>
      </row>
      <row>
       <entry><literal>D</literal></entry>
       <entry>星期中的第几天，文本表示，3 个字母</entry>
       <entry><literal>Mon</literal> 到 <literal>Sun</literal></entry>
      </row>
      <row>
       <entry><literal>j</literal></entry>
       <entry>月份中的第几天，没有前导零</entry>
       <entry><literal>1</literal> 到 <literal>31</literal></entry>
      </row>
      <row>
       <entry><literal>l</literal>（“L”的小写字母）</entry>
       <entry>星期几，完整的文本格式</entry>
       <entry><literal>Sunday</literal> 到 <literal>Saturday</literal></entry>
      </row>
      <row>
       <entry><literal>N</literal></entry>
       <entry>ISO-8601 格式数字表示的星期中的第几天（PHP 5.1.0 新加）</entry>
       <entry><literal>1</literal>（表示星期一）到 <literal>7</literal>（表示星期天）</entry>
      </row>
      <row>
       <entry><literal>S</literal></entry>
       <entry>每月天数后面的英文后缀，2 个字符</entry>
       <entry><literal>st</literal>，<literal>nd</literal>，<literal>rd</literal>
        或者 <literal>th</literal>。可以和 <literal>j</literal> 一起用</entry>
      </row>
      <row>
       <entry><literal>w</literal></entry>
       <entry>星期中的第几天，数字表示</entry>
       <entry><literal>0</literal>（表示星期天）到 <literal>6</literal>（表示星期六）</entry>
      </row>
      <row>
       <entry><literal>z</literal></entry>
       <entry>年份中的第几天</entry>
       <entry><literal>0</literal> 到 <literal>365</literal></entry>
      </row>
      <row>
       <entry align="center"><emphasis>星期</emphasis></entry>
       <entry>---</entry>
       <entry>---</entry>
      </row>
      <row>
       <entry><literal>W</literal></entry>
       <entry>ISO-8601 格式年份中的第几周，每周从星期一开始（PHP 4.1.0 新加的）</entry>
       <entry>例如：<literal>42</literal>（当年的第 42 周）</entry>
      </row>
      <row>
       <entry align="center"><emphasis>月</emphasis></entry>
       <entry>---</entry>
       <entry>---</entry>
      </row>
      <row>
       <entry><literal>F</literal></entry>
       <entry>月份，完整的文本格式，例如 January 或者 March</entry>
       <entry><literal>January</literal> 到 <literal>December</literal></entry>
      </row>
      <row>
       <entry><literal>m</literal></entry>
       <entry>数字表示的月份，有前导零</entry>
       <entry><literal>01</literal> 到 <literal>12</literal></entry>
      </row>
      <row>
       <entry><literal>M</literal></entry>
       <entry>三个字母缩写表示的月份</entry>
       <entry><literal>Jan</literal> 到 <literal>Dec</literal></entry>
      </row>
      <row>
       <entry><literal>n</literal></entry>
       <entry>数字表示的月份，没有前导零</entry>
       <entry><literal>1</literal> 到 <literal>12</literal></entry>
      </row>
      <row>
       <entry><literal>t</literal></entry>
       <entry>给定月份所应有的天数</entry>
       <entry><literal>28</literal> 到 <literal>31</literal></entry>
      </row>
      <row>
       <entry align="center"><emphasis>年</emphasis></entry>
       <entry>---</entry>
       <entry>---</entry>
      </row>
      <row>
       <entry><literal>L</literal></entry>
       <entry>是否为闰年</entry>
       <entry>如果是闰年为 <literal>1</literal>，否则为 <literal>0</literal></entry>
      </row>
      <row>
       <entry><literal>o</literal></entry>
       <entry>ISO-8601 格式年份数字。这和
        <literal>Y</literal> 的值相同，只除了如果 ISO
        的星期数（<literal>W</literal>）属于前一年或下一年，则用那一年。（PHP 5.1.0 新加）</entry>
       <entry>Examples: <literal>1999</literal> or <literal>2003</literal></entry>
      </row>
      <row>
       <entry><literal>Y</literal></entry>
       <entry>4 位数字完整表示的年份</entry>
       <entry>例如：<literal>1999</literal> 或 <literal>2003</literal></entry>
      </row>
      <row>
       <entry><literal>y</literal></entry>
       <entry>2 位数字表示的年份</entry>
       <entry>例如：<literal>99</literal> 或 <literal>03</literal></entry>
      </row>
      <row>
       <entry align="center"><emphasis>时间</emphasis></entry>
       <entry>---</entry>
       <entry>---</entry>
      </row>
      <row>
       <entry><literal>a</literal></entry>
       <entry>小写的上午和下午值</entry>
       <entry><literal>am</literal> 或 <literal>pm</literal></entry>
      </row>
      <row>
       <entry><literal>A</literal></entry>
       <entry>大写的上午和下午值</entry>
       <entry><literal>AM</literal> 或 <literal>PM</literal></entry>
      </row>
      <row>
       <entry><literal>B</literal></entry>
       <entry>Swatch Internet 标准时</entry>
       <entry><literal>000</literal> 到 <literal>999</literal></entry>
      </row>
      <row>
       <entry><literal>g</literal></entry>
       <entry>小时，12 小时格式，没有前导零</entry>
       <entry><literal>1</literal> 到 <literal>12</literal></entry>
      </row>
      <row>
       <entry><literal>G</literal></entry>
       <entry>小时，24 小时格式，没有前导零</entry>
       <entry><literal>0</literal> 到 <literal>23</literal></entry>
      </row>
      <row>
       <entry><literal>h</literal></entry>
       <entry>小时，12 小时格式，有前导零</entry>
       <entry><literal>01</literal> 到 <literal>12</literal></entry>
      </row>
      <row>
       <entry><literal>H</literal></entry>
       <entry>小时，24 小时格式，有前导零</entry>
       <entry><literal>00</literal> 到 <literal>23</literal></entry>
      </row>
      <row>
       <entry><literal>i</literal></entry>
       <entry>有前导零的分钟数</entry>
       <entry><literal>00</literal> 到 <literal>59</literal>></entry>
      </row>
      <row>
       <entry><literal>s</literal></entry>
       <entry>秒数，有前导零</entry>
       <entry><literal>00</literal> 到 <literal>59</literal>></entry>
      </row>
      <row>
       <entry align="center"><emphasis>时区</emphasis></entry>
       <entry>---</entry>
       <entry>---</entry>
      </row>
      <row>
       <entry><literal>e</literal></entry>
       <entry>时区标识（PHP 5.1.0 新加）</entry>
       <entry>例如：<literal>UTC</literal>，<literal>GMT</literal>，<literal>Atlantic/Azores</literal></entry>
      </row>
      <row>
       <entry><literal>I</literal></entry>
       <entry>是否为夏令时</entry>
       <entry>如果是夏令时为 <literal>1</literal>，否则为 <literal>0</literal></entry>
      </row>
      <row>
       <entry><literal>O</literal></entry>
       <entry>与格林威治时间相差的小时数</entry>
       <entry>例如：<literal>+0200</literal></entry>
      </row>
      <row>
       <entry><literal>P</literal></entry>
       <entry>与格林威治时间（GMT）的差别，小时和分钟之间有冒号分隔（PHP 5.1.3 新加）</entry>
       <entry>例如：<literal>+02:00</literal></entry>
      </row>
      <row>
       <entry><literal>T</literal></entry>
       <entry>本机所在的时区</entry>
       <entry>例如：<literal>EST</literal>，<literal>MDT</literal>（【译者注】在 Windows
       下为完整文本格式，例如“Eastern Standard Time”，中文版会显示“中国标准时间”）。</entry>
      </row>
      <row>
       <entry><literal>Z</literal></entry>
       <entry>时差偏移量的秒数。UTC 西边的时区偏移量总是负的，UTC 东边的时区偏移量总是正的。</entry>
       <entry><literal>-43200</literal> 到 <literal>43200</literal></entry>
      </row>
      <row>
       <entry align="center"><emphasis>完整的日期／时间</emphasis></entry>
       <entry>---</entry>
       <entry>---</entry>
      </row>
      <row>
       <entry><literal>c</literal></entry>
       <entry>ISO 8601 格式的日期（PHP 5 新加）</entry>
       <entry>2004-02-12T15:19:21+00:00</entry>
      </row>
      <row>
       <entry><literal>r</literal></entry>
       <entry>RFC 822 格式的日期</entry>
       <entry>例如：<literal>Thu, 21 Dec 2000 16:01:07 +0200</literal></entry>
      </row>
      <row>
       <entry><literal>U</literal></entry>
       <entry>从 Unix 纪元（January 1 1970 00:00:00 GMT）开始至今的秒数</entry>
       <entry>参见 <function>time</function></entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  <para>
   格式字串中不能被识别的字符将原样显示。<literal>Z</literal> 格式在使用
   <function>gmdate</function> 时总是返回 <literal>0</literal>。
  </para>
  <para>
   <example>
    <title><function>date</function> 例子</title>
    <programlisting role="php">
<![CDATA[
<?php
// 设定要用的默认时区。自 PHP 5.1 可用
date_default_timezone_set('UTC');


// 输出类似：Monday
echo date("l");

// 输出类似：Monday 15th of August 2005 03:12:46 PM
echo date('l dS \of F Y h:i:s A');

// 输出：July 1, 2000 is on a Saturday
echo "July 1, 2000 is on a " . date("l", mktime(0, 0, 0, 7, 1, 2000));

/* 在格式参数中使用常量 */
// 输出类似：Mon, 15 Aug 2005 15:12:46 UTC
echo date(DATE_RFC822);

// 输出类似：2000-07-01T00:00:00+00:00
echo date(DATE_ATOM, mktime(0, 0, 0, 7, 1, 2000));
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   在格式字串中的字符前加上反斜线来转义可以避免它被按照上表解释。如果加上反斜线后的字符本身就是一个特殊序列，那还要转义反斜线。
   <example>
    <title>在 <function>date</function> 中转义字符</title>
    <programlisting role="php">
<![CDATA[
<?php
// prints something like: Wednesday the 15th
echo date("l \\t\h\e jS");
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   可以把 <function>date</function> 和
   <function>mktime</function> 结合使用来得到未来或过去的日期。
   <example>
    <title><function>date</function> 和 <function>mktime</function> 例子</title>
    <programlisting role="php">
<![CDATA[
<?php
$tomorrow  = mktime(0, 0, 0, date("m")  , date("d")+1, date("Y"));
$lastmonth = mktime(0, 0, 0, date("m")-1, date("d"),   date("Y"));
$nextyear  = mktime(0, 0, 0, date("m"),   date("d"),   date("Y")+1);
?>
]]>
    </programlisting>
   </example>
   <note>
    <para>
     由于夏令时的缘故，这种方法比简单地在时间戳上加减一天或者一个月的秒数更可靠。
    </para>
   </note>
  </para>
  <para>
   一些使用 <function>date</function>
   格式化日期的例子。注意要转义所有其它的字符，因为目前有特殊含义的字符会产生不需要的结果，而其余字符在
   PHP 将来的版本中可能会被用上。当转义时，注意用单引号以避免类似 \n 的字符变成了换行符。
   <example>
    <title><function>date</function> 格式举例</title>
    <programlisting role="php">
<![CDATA[
<?php
// 假定今天是：March 10th, 2001, 5:16:18 pm
$today = date("F j, Y, g:i a");                 // March 10, 2001, 5:16 pm
$today = date("m.d.y");                         // 03.10.01
$today = date("j, n, Y");                       // 10, 3, 2001
$today = date("Ymd");                           // 20010310
$today = date('h-i-s, j-m-y, it is w Day z ');  // 05-16-17, 10-03-01, 1631 1618 6 Fripm01
$today = date('\i\t \i\s \t\h\e jS \d\a\y.');   // It is the 10th day.
$today = date("D M j G:i:s T Y");               // Sat Mar 10 15:16:08 MST 2001
$today = date('H:m:s \m \i\s\ \m\o\n\t\h');     // 17:03:17 m is month
$today = date("H:i:s");                         // 17:16:17
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   要格式化其它语种的日期，应该用 <function>setlocale</function> 和
   <function>strftime</function> 函数来代替 <function>date</function>。
  </para>
  <para>
   参见 <function>getlastmod</function>，<function>gmdate</function>，<function>mktime</function>，<function>strftime</function>
   和 <function>time</function>。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>format</parameter></term>
     <listitem>
      <para>
       The format of the outputted date <type>string</type>. See the formatting
       options below. There are also several
       <link linkend="datetime.constants.types">predefined date constants</link>
       that may be used instead, so for example <constant>DATE_RSS</constant>
       contains the format string <literal>'D, d M Y H:i:s'</literal>.
      </para>
      <para>
       <table>
        <title>The following characters are recognized in the
        <parameter>format</parameter> parameter string</title>
        <tgroup cols="3">
         <thead>
          <row>
           <entry><parameter>format</parameter> character</entry>
           <entry>Description</entry>
           <entry>Example returned values</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry align="center"><emphasis>Day</emphasis></entry>
           <entry>---</entry>
           <entry>---</entry>
          </row>
          <row>
           <entry><literal>d</literal></entry>
           <entry>Day of the month, 2 digits with leading zeros</entry>
           <entry><literal>01</literal> to <literal>31</literal></entry>
          </row>
          <row>
           <entry><literal>D</literal></entry>
           <entry>A textual representation of a day, three letters</entry>
           <entry><literal>Mon</literal> through <literal>Sun</literal></entry>
          </row>
          <row>
           <entry><literal>j</literal></entry>
           <entry>Day of the month without leading zeros</entry>
           <entry><literal>1</literal> to <literal>31</literal></entry>
          </row>
          <row>
           <entry><literal>l</literal> (lowercase 'L')</entry>
           <entry>A full textual representation of the day of the week</entry>
           <entry><literal>Sunday</literal> through <literal>Saturday</literal></entry>
          </row>
          <row>
           <entry><literal>N</literal></entry>
           <entry>ISO-8601 numeric representation of the day of the week (added in
           PHP 5.1.0)</entry>
           <entry><literal>1</literal> (for Monday) through <literal>7</literal> (for Sunday)</entry>
          </row>
          <row>
           <entry><literal>S</literal></entry>
           <entry>English ordinal suffix for the day of the month, 2 characters</entry>
           <entry>
            <literal>st</literal>, <literal>nd</literal>, <literal>rd</literal> or
            <literal>th</literal>.  Works well with <literal>j</literal>
           </entry>
          </row>
          <row>
           <entry><literal>w</literal></entry>
           <entry>Numeric representation of the day of the week</entry>
           <entry><literal>0</literal> (for Sunday) through <literal>6</literal> (for Saturday)</entry>
          </row>
          <row>
           <entry><literal>z</literal></entry>
           <entry>The day of the year (starting from 0)</entry>
           <entry><literal>0</literal> through <literal>365</literal></entry>
          </row>
          <row>
           <entry align="center"><emphasis>Week</emphasis></entry>
           <entry>---</entry>
           <entry>---</entry>
          </row>
          <row>
           <entry><literal>W</literal></entry>
           <entry>ISO-8601 week number of year, weeks starting on Monday (added in PHP 4.1.0)</entry>
           <entry>Example: <literal>42</literal> (the 42nd week in the year)</entry>
          </row>
          <row>
           <entry align="center"><emphasis>Month</emphasis></entry>
           <entry>---</entry>
           <entry>---</entry>
          </row>
          <row>
           <entry><literal>F</literal></entry>
           <entry>A full textual representation of a month, such as January or March</entry>
           <entry><literal>January</literal> through <literal>December</literal></entry>
          </row>
          <row>
           <entry><literal>m</literal></entry>
           <entry>Numeric representation of a month, with leading zeros</entry>
           <entry><literal>01</literal> through <literal>12</literal></entry>
          </row>
          <row>
           <entry><literal>M</literal></entry>
           <entry>A short textual representation of a month, three letters</entry>
           <entry><literal>Jan</literal> through <literal>Dec</literal></entry>
          </row>
          <row>
           <entry><literal>n</literal></entry>
           <entry>Numeric representation of a month, without leading zeros</entry>
           <entry><literal>1</literal> through <literal>12</literal></entry>
          </row>
          <row>
           <entry><literal>t</literal></entry>
           <entry>Number of days in the given month</entry>
           <entry><literal>28</literal> through <literal>31</literal></entry>
          </row>
          <row>
           <entry align="center"><emphasis>Year</emphasis></entry>
           <entry>---</entry>
           <entry>---</entry>
          </row>
          <row>
           <entry><literal>L</literal></entry>
           <entry>Whether it's a leap year</entry>
           <entry><literal>1</literal> if it is a leap year, <literal>0</literal> otherwise.</entry>
          </row>
          <row>
           <entry><literal>o</literal></entry>
           <entry>ISO-8601 year number. This has the same value as
            <literal>Y</literal>, except that if the ISO week number
            (<literal>W</literal>) belongs to the previous or next year, that year
            is used instead. (added in PHP 5.1.0)</entry>
           <entry>Examples: <literal>1999</literal> or <literal>2003</literal></entry>
          </row>
          <row>
           <entry><literal>Y</literal></entry>
           <entry>A full numeric representation of a year, 4 digits</entry>
           <entry>Examples: <literal>1999</literal> or <literal>2003</literal></entry>
          </row>
          <row>
           <entry><literal>y</literal></entry>
           <entry>A two digit representation of a year</entry>
           <entry>Examples: <literal>99</literal> or <literal>03</literal></entry>
          </row>
          <row>
           <entry align="center"><emphasis>Time</emphasis></entry>
           <entry>---</entry>
           <entry>---</entry>
          </row>
          <row>
           <entry><literal>a</literal></entry>
           <entry>Lowercase Ante meridiem and Post meridiem</entry>
           <entry><literal>am</literal> or <literal>pm</literal></entry>
          </row>
          <row>
           <entry><literal>A</literal></entry>
           <entry>Uppercase Ante meridiem and Post meridiem</entry>
           <entry><literal>AM</literal> or <literal>PM</literal></entry>
          </row>
          <row>
           <entry><literal>B</literal></entry>
           <entry>Swatch Internet time</entry>
           <entry><literal>000</literal> through <literal>999</literal></entry>
          </row>
          <row>
           <entry><literal>g</literal></entry>
           <entry>12-hour format of an hour without leading zeros</entry>
           <entry><literal>1</literal> through <literal>12</literal></entry>
          </row>
          <row>
           <entry><literal>G</literal></entry>
           <entry>24-hour format of an hour without leading zeros</entry>
           <entry><literal>0</literal> through <literal>23</literal></entry>
          </row>
          <row>
           <entry><literal>h</literal></entry>
           <entry>12-hour format of an hour with leading zeros</entry>
           <entry><literal>01</literal> through <literal>12</literal></entry>
          </row>
          <row>
           <entry><literal>H</literal></entry>
           <entry>24-hour format of an hour with leading zeros</entry>
           <entry><literal>00</literal> through <literal>23</literal></entry>
          </row>
          <row>
           <entry><literal>i</literal></entry>
           <entry>Minutes with leading zeros</entry>
           <entry><literal>00</literal> to <literal>59</literal></entry>
          </row>
          <row>
           <entry><literal>s</literal></entry>
           <entry>Seconds, with leading zeros</entry>
           <entry><literal>00</literal> through <literal>59</literal></entry>
          </row>
          <row>
           <entry><literal>u</literal></entry>
           <entry>Microseconds (added in PHP 5.2.2)</entry>
           <entry>Example: <literal>654321</literal></entry>
          </row>
          <row>
           <entry align="center"><emphasis>Timezone</emphasis></entry>
           <entry>---</entry>
           <entry>---</entry>
          </row>
          <row>
           <entry><literal>e</literal></entry>
           <entry>Timezone identifier (added in PHP 5.1.0)</entry>
           <entry>Examples: <literal>UTC</literal>, <literal>GMT</literal>, <literal>Atlantic/Azores</literal></entry>
          </row>
          <row>
           <entry><literal>I</literal> (capital i)</entry>
           <entry>Whether or not the date is in daylight saving time</entry>
           <entry><literal>1</literal> if Daylight Saving Time, <literal>0</literal> otherwise.</entry>
          </row>
          <row>
           <entry><literal>O</literal></entry>
           <entry>Difference to Greenwich time (GMT) in hours</entry>
           <entry>Example: <literal>+0200</literal></entry>
          </row>
          <row>
           <entry><literal>P</literal></entry>
           <entry>Difference to Greenwich time (GMT) with colon between hours and minutes (added in PHP 5.1.3)</entry>
           <entry>Example: <literal>+02:00</literal></entry>
          </row>
          <row>
           <entry><literal>T</literal></entry>
           <entry>Timezone abbreviation</entry>
           <entry>Examples: <literal>EST</literal>, <literal>MDT</literal> ...</entry>
          </row>
          <row>
           <entry><literal>Z</literal></entry>
           <entry>Timezone offset in seconds. The offset for timezones west of UTC is always
           negative, and for those east of UTC is always positive.</entry>
           <entry><literal>-43200</literal> through <literal>50400</literal></entry>
          </row>
          <row>
           <entry align="center"><emphasis>Full Date/Time</emphasis></entry>
           <entry>---</entry>
           <entry>---</entry>
          </row>
          <row>
           <entry><literal>c</literal></entry>
           <entry>ISO 8601 date (added in PHP 5)</entry>
           <entry>2004-02-12T15:19:21+00:00</entry>
          </row>
          <row>
           <entry><literal>r</literal></entry>
           <entry><link xlink:href="&url.rfc;2822">RFC 2822</link> formatted date</entry>
           <entry>Example: <literal>Thu, 21 Dec 2000 16:01:07 +0200</literal></entry>
          </row>
          <row>
           <entry><literal>U</literal></entry>
           <entry>Seconds since the Unix Epoch (January 1 1970 00:00:00 GMT)</entry>
           <entry>See also <function>time</function></entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
      <para>
       Unrecognized characters in the format string will be printed
       as-is.  The <literal>Z</literal> format will always return
       <literal>0</literal> when using <function>gmdate</function>.
      </para>       
      <note>
       <para>
        Since this function only accepts <type>integer</type> timestamps the
        <literal>u</literal> format character is only useful when using the
        <function>date_format</function> function with user based timestamps
        created with <function>date_create</function>.
       </para>
      </note>
     </listitem>
    </varlistentry>
    
    &date.timestamp.description;
   
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns a formatted date string. If a non-numeric value is used for 
   <parameter>timestamp</parameter>, &false; is returned and an 
   <constant>E_WARNING</constant> level error is emitted.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
   
   &date.timezone.errors.description;
 
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.1.0</entry>
       <entry>
        The valid range of a timestamp is typically from Fri, 13 Dec
        1901 20:45:54 GMT to Tue, 19 Jan 2038 03:14:07 GMT. (These are
        the dates that correspond to the minimum and maximum values for
        a 32-bit signed integer). However, before PHP 5.1.0 this range was limited
        from 01-01-1970 to 19-01-2038 on some systems (e.g. Windows).
       </entry>
      </row>
      
      &date.timezone.errors.changelog;

      <row>
       <entry>5.1.1</entry>
       <entry>
        There are useful <link linkend="datetime.constants">constants</link> 
        of standard date/time formats that can be used to specify the 
        <parameter>format</parameter> parameter.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>date</function> examples</title>
    <programlisting role="php">
<![CDATA[
<?php
// set the default timezone to use. Available since PHP 5.1
date_default_timezone_set('UTC');


// Prints something like: Monday
echo date("l");

// Prints something like: Monday 8th of August 2005 03:12:46 PM
echo date('l jS \of F Y h:i:s A');

// Prints: July 1, 2000 is on a Saturday
echo "July 1, 2000 is on a " . date("l", mktime(0, 0, 0, 7, 1, 2000));

/* use the constants in the format parameter */
// prints something like: Mon, 15 Aug 2005 15:12:46 UTC
echo date(DATE_RFC822);

// prints something like: 2000-07-01T00:00:00+00:00
echo date(DATE_ATOM, mktime(0, 0, 0, 7, 1, 2000));
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   You can prevent a recognized character in the format string from being
   expanded by escaping it with a preceding backslash. If the character with
   a backslash is already a special sequence, you may need to also escape
   the backslash.
   <example>
    <title>Escaping characters in <function>date</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// prints something like: Wednesday the 15th
echo date('l \t\h\e jS');
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   It is possible to use <function>date</function> and
   <function>mktime</function> together to find dates in the future
   or the past.
   <example>
    <title><function>date</function> and <function>mktime</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
$tomorrow  = mktime(0, 0, 0, date("m")  , date("d")+1, date("Y"));
$lastmonth = mktime(0, 0, 0, date("m")-1, date("d"),   date("Y"));
$nextyear  = mktime(0, 0, 0, date("m"),   date("d"),   date("Y")+1);
?>
]]>
    </programlisting>
   </example>
   <note>
    <para>
     This can be more reliable than simply adding or subtracting the number
     of seconds in a day or month to a timestamp because of daylight saving
     time.
    </para>
   </note>
  </para>
  <para>
   Some examples of <function>date</function> formatting. Note that
   you should escape any other characters, as any which currently
   have a special meaning will produce undesirable results, and
   other characters may be assigned meaning in future PHP versions.
   When escaping, be sure to use single quotes to prevent characters
   like \n from becoming newlines.
   <example>
    <title><function>date</function> Formatting</title>
    <programlisting role="php">
<![CDATA[
<?php
// Assuming today is March 10th, 2001, 5:16:18 pm, and that we are in the
// Mountain Standard Time (MST) Time Zone

$today = date("F j, Y, g:i a");                 // March 10, 2001, 5:16 pm
$today = date("m.d.y");                         // 03.10.01
$today = date("j, n, Y");                       // 10, 3, 2001
$today = date("Ymd");                           // 20010310
$today = date('h-i-s, j-m-y, it is w Day');     // 05-16-18, 10-03-01, 1631 1618 6 Satpm01
$today = date('\i\t \i\s \t\h\e jS \d\a\y.');   // it is the 10th day.
$today = date("D M j G:i:s T Y");               // Sat Mar 10 17:16:18 MST 2001
$today = date('H:m:s \m \i\s\ \m\o\n\t\h');     // 17:03:18 m is month
$today = date("H:i:s");                         // 17:16:18
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   To format dates in other languages, you should use the
   <function>setlocale</function> and <function>strftime</function>
   functions instead of <function>date</function>.
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    To generate a timestamp from a string representation of the date, you
    may be able to use <function>strtotime</function>. Additionally, some
    databases have functions to convert their date formats into timestamps
    (such as MySQL's <link xlink:href="&url.mysql.docs.date;">UNIX_TIMESTAMP</link>
    function).
   </para>
  </note>
  <tip>
   <para>
    Timestamp of the start of the request is available in
    <varname>$_SERVER['REQUEST_TIME']</varname> since PHP 5.1.
   </para>
  </tip>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>gmdate</function></member>
    <member><function>idate</function></member>
    <member><function>getdate</function></member>
    <member><function>getlastmod</function></member>
    <member><function>mktime</function></member>
    <member><function>strftime</function></member>
    <member><function>time</function></member>
    <member><function>strtotime</function></member>
    <member><link linkend="datetime.constants.types">Predefined DateTime Constants</link></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
