<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision: 1.4 $ -->
<!-- $Author: bjori $ -->
<!-- EN-Revision: 1.10 Maintainer: micky Status: ready -->
<section xml:id="outcontrol.configuration" xmlns="http://docbook.org/ns/docbook">
 &reftitle.runtime;
 &extension.runtime;
 <para>
  <table>
   <title>输出控制配置选项</title>
   <tgroup cols="4">
    <thead>
     <row>
      <entry>名称</entry>
      <entry>默认值</entry>
      <entry>作用范围</entry>
      <entry>修正记录</entry>
     </row>
    </thead>
    <tbody>
    <row>
     <entry>output_buffering</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_PERDIR</entry>
     <entry></entry>
    </row>
    <row>
     <entry>output_handler</entry>
     <entry>NULL</entry>
     <entry>PHP_INI_PERDIR</entry>
     <entry>自 PHP 4.0.4 起可用</entry>
    </row>
    <row>
     <entry>implicit_flush</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>在 PHP &lt;= 4.2.3 版本中是 PHP_INI_PERDIR</entry>
    </row>
    </tbody>
   </tgroup>
  </table>
  &ini.php.constants;
 </para>

 &ini.descriptions.title;

 <para>
 <variablelist>
  <varlistentry xml:id="ini.output-buffering">
   <term>
    <parameter>output_buffering</parameter>
    <type>boolean</type>/<type>integer</type>
   </term>
   <listitem>
    <para>
     该选项设置为 On
     时，将在所有的脚本中使用输出控制。如果要限制输出缓冲区的最大值，可将该选项设定为指定的最大字节数（例如
     output_buffering=4096）。从PHP
     4.3.5 版开始，该选项在 PHP-CLI 下总是为 Off。
    </para>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.output-handler">
   <term>
    <parameter>output_handler</parameter>
    <type>string</type>
   </term>
   <listitem>
    <para>
     该选项可将脚本所有的输出，重定向到一个函数。例如，将 output_handler
     设置为 <function>mb_output_handler</function>
     时，字符的编码将被修改为指定的编码。设置的任何处理函数，将自动的处理输出缓冲。
    </para>
    <note>
     <para>
      不能同时使用 <function>mb_output_handler</function> 和
      <function>ob_iconv_handler</function>，也不能同时使用
      <function>ob_gzhandler</function> 和
      <link linkend="ini.zlib.output-compression">zlib.output_compression</link>。
     </para>
    </note>
    <note>
     <para>
      只有内置函数可以使用此指令。对于用户定义的函数，使用 <function>ob_start</function>。
     </para>
    </note>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.implicit-flush">
   <term>
    <parameter>implicit_flush</parameter>
    <type>boolean</type>
   </term>
   <listitem>
    <para>
     默认为 &false;。如将该选项改为 &true;，PHP
     将使输出层，在每段信息块输出后，自动刷新。这等同于在每次使用
     <function>print</function>、<function>echo</function>
     等函数或每个 <literal>HTML</literal> 块之后，调用 PHP 中的
     <function>flush</function> 函数。
    </para>
    <para>
     不在web环境中使用 PHP
     时，打开这个选项对程序执行的性能有严重的影响，通常只推荐在调试时使用。在
     <literal>CLI SAPI</literal> 的执行模式下，该标记默认为 &true;。
    </para>
    <para>
     参见 <function>ob_implicit_flush</function>。
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
 </para>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

