<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision: 1.3 $ -->
<!-- $Author: dallas $ -->
<!-- EN-Revision: 1.12 Maintainer: dallas Status: ready -->
<reference id="ref.pcre">
  <title>正则表达式函数库（Perl 兼容）</title>
  <titleabbrev>PCRE</titleabbrev>

  <partintro>
   <section id="pcre.intro">
    &reftitle.intro;
    <para>
     本类函数中所使用的模式极其类似
     Perl。表达式应被包含在定界符中，如斜线（/）。任何不是字母、数字或反斜线（\）的字符都可以作为定界符。如果作为定界符的字符必须被用在表达式本身中，则需要用反斜线转义。自
     PHP 4.0.4 起，也可以使用 Perl
     风格的 ()，{}，[] 和 &lt;&gt; 匹配定界符。详细解释见<link
     linkend="reference.pcre.pattern.syntax">模式语法</link>。
    </para>
    <para>
     结束定界符后可以跟上不同的修正符以影响匹配方式。见<link
     linkend="reference.pcre.pattern.modifiers">模式修正符</link>。
    </para>
    <para>
     PHP 也支持 POSIX 扩展语法的正则表达式，见<link
     linkend="ref.regex">正则表达式函数库（POSIX 扩展）</link>。
    </para>
    <warning>
     <para>
      要留意到 PCRE 的一些局限。更多信息见 <ulink 
      url="&url.pcre.man;">&url.pcre.man;</ulink>。
     </para>
    </warning>
   </section>

   <section id="pcre.requirements">
    &reftitle.required;
    <para>
     正则表达式的支持是由 PCRE（Perl Compatible Regular Expression）库提供的，这是个开放源代码的软件，作者为
     Philip Hazel，版权属于英国剑桥大学。可于以下地址获得：<ulink
     url="&url.pcre;">&url.pcre;</ulink>。
    </para>
   </section>

   &reference.pcre.configure;

   <section id="pcre.configuration">
    &reftitle.runtime;
    &no.config;
   </section>

   <section id="pcre.resources">
    &reftitle.resources;
    &no.resource;
   </section>

   &reference.pcre.constants;

   <section id="pcre.examples">
    &reftitle.examples;
    <para>
     <example>
      <title>合法的模式举例</title>
      <itemizedlist>
       <listitem><simpara><literal>/&lt;\/\w+&gt;/</literal></simpara></listitem>
       <listitem><simpara><literal>|(\d{3})-\d+|Sm</literal></simpara></listitem>
       <listitem><simpara><literal>/^(?i)php[34]/</literal></simpara></listitem>
       <listitem><simpara><literal>{^\s+(\s+)?$}</literal></simpara></listitem>
      </itemizedlist>
     </example>
    </para>
    <para>
     <example>
      <title>非法的模式举例</title>
      <itemizedlist>
       <listitem>
        <simpara>
         <literal>/href='(.*)'</literal> - 缺少结束定界符
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         <literal>/\w+\s*\w+/J</literal> - 未知的修正符 'J'
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         <literal>1-\d3-\d3-\d4|</literal> - 缺少起始定界符
        </simpara>
       </listitem>
      </itemizedlist>
     </example>
    </para>
   </section>
  </partintro>

  &reference.pcre.pattern.modifiers;
  &reference.pcre.pattern.syntax;
  &reference.pcre.functions;

</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

