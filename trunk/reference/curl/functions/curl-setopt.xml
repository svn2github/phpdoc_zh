<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.curl-setopt" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>curl_setopt</refname>
  <refpurpose>设置一个cURL传输选项</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>curl_setopt</methodname>
   <methodparam><type>resource</type><parameter>ch</parameter></methodparam>
   <methodparam><type>int</type><parameter>option</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
  </methodsynopsis>
  <para>
   为给定的cURL会话句柄设置一个选项。
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &curl.ch.description;
    <varlistentry>
     <term><parameter>option</parameter></term>
     <listitem>
      <para>
       需要设置的<literal>CURLOPT_XXX</literal>选项。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       将设置在<parameter>option</parameter>选项上的值。
      </para>
      <para>
       对于下面的这些<parameter>option</parameter>的可选参数，<parameter>value</parameter>应该被设置一个<type>bool</type>类型的值：
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry valign="top">选项</entry>
           <entry valign="top">可选<parameter>value</parameter>值</entry>
           <entry valign="top">备注</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_AUTOREFERER</constant></entry>
           <entry valign="top">
            当根据<literal>Location:</literal>重定向时，自动设置header中的<literal>Referer:</literal>信息。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_BINARYTRANSFER</constant></entry>
           <entry valign="top">
            在启用<constant>CURLOPT_RETURNTRANSFER</constant>的时候，返回原生的（Raw）输出。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_COOKIESESSION</constant></entry>
           <entry valign="top">
            启用时curl会仅仅传递一个session cookie，忽略其他的cookie，默认状况下cURL会将所有的cookie返回给服务端。session cookie是指那些用来判断服务器端的session是否有效而存在的cookie。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CRLF</constant></entry>
           <entry valign="top">
            启用时将Unix的换行符转换成回车换行符。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DNS_USE_GLOBAL_CACHE</constant></entry>
           <entry valign="top">
            启用时会启用一个全局的DNS缓存，此项为线程安全的，并且默认启用。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FAILONERROR</constant></entry>
           <entry valign="top">
            显示HTTP状态码，默认行为是忽略编号小于等于400的HTTP信息。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FILETIME</constant></entry>
           <entry valign="top">
            启用时会尝试修改远程文档中的信息。结果信息会通过<function>curl_getinfo</function>函数的<parameter>CURLINFO_FILETIME</parameter>选项返回。
            <function>curl_getinfo</function>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FOLLOWLOCATION</constant></entry>
           <entry valign="top">
            启用时会将服务器服务器返回的<literal>"Location: "</literal>放在header中递归的返回给服务器，使用<constant>CURLOPT_MAXREDIRS</constant>可以限定递归返回的数量。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FORBID_REUSE</constant></entry>
           <entry valign="top">
            在完成交互以后强迫断开连接，不能重用。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FRESH_CONNECT</constant></entry>
           <entry valign="top">
            强制获取一个新的连接，替代缓存中的连接。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTP_USE_EPRT</constant></entry>
           <entry valign="top">
            启用时当FTP下载时，使用EPRT (或 LPRT)命令。设置为&false;时禁用EPRT和LPRT，使用PORT命令
            only.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTP_USE_EPSV</constant></entry>
           <entry valign="top">
            启用时，在FTP传输过程中回复到PASV模式前首先尝试EPSV命令。设置为&false;时禁用EPSV命令。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPAPPEND</constant></entry>
           <entry valign="top">
            启用时追加写入文件而不是覆盖它。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPASCII</constant></entry>
           <entry valign="top">
            <constant>CURLOPT_TRANSFERTEXT</constant>的别名。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPLISTONLY</constant></entry>
           <entry valign="top">
            启用时只列出FTP目录的名字。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HEADER</constant></entry>
           <entry valign="top">
            启用时会将头文件的信息作为数据流输出。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry><constant>CURLINFO_HEADER_OUT</constant></entry>
           <entry valign="top">
            启用时追踪句柄的请求字符串。
           </entry>
           <entry valign="top">
            从 PHP 5.1.3 开始可用。<constant>CURLINFO_</constant>前缀是故意的(intentional)。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTPGET</constant></entry>
           <entry valign="top">
            启用时会设置HTTP的method为GET，因为GET是默认是，所以只在被修改的情况下使用。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTPPROXYTUNNEL</constant></entry>
           <entry valign="top">
            启用时会通过HTTP代理来传输。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MUTE</constant></entry>
           <entry valign="top">
            启用时将cURL函数中所有修改过的参数恢复默认值。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_NETRC</constant></entry>
           <entry valign="top">
            在连接建立以后，访问<filename>~/.netrc</filename>文件获取用户名和密码信息连接远程站点。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_NOBODY</constant></entry>
           <entry valign="top">
           启用时将不对HTML中的BODY部分进行输出。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_NOPROGRESS</constant></entry>
           <entry valign="top"><para>
            启用时关闭curl传输的进度条，此项的默认设置为启用。
            <note>
             <para>
              PHP自动地设置这个选项为&true;，这个选项仅仅应当在以调试为目的时被改变。
             </para>
            </note>
            </para></entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_NOSIGNAL</constant></entry>
           <entry valign="top">
            启用时忽略所有的curl传递给php进行的信号。在SAPI多线程传输时此项被默认启用。
           </entry>
           <entry valign="top">
            cURL 7.10时被加入。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_POST</constant></entry>
           <entry valign="top">
            启用时会发送一个常规的POST请求，类型为：<literal>application/x-www-form-urlencoded</literal>，就像表单提交的一样。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PUT</constant></entry>
           <entry valign="top">
            启用时允许HTTP发送文件，必须同时设置<constant>CURLOPT_INFILE</constant>和<constant>CURLOPT_INFILESIZE</constant>。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_RETURNTRANSFER</constant></entry>
           <entry valign="top">
            将<function>curl_exec</function>获取的信息以文件流的形式返回，而不是直接输出。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_VERIFYPEER</constant></entry>
           <entry valign="top">
            禁用后cURL将终止从服务端进行验证。使用<constant>CURLOPT_CAINFO</constant>选项设置证书使用<constant>CURLOPT_CAPATH</constant>选项设置证书目录
            如果<constant>CURLOPT_SSL_VERIFYPEER</constant>(默认值为2)被启用，<constant>CURLOPT_SSL_VERIFYHOST</constant>需要被设置成&true;否则设置为&false;。
           </entry>
           <entry valign="top">
            自cURL 7.10开始默认为&true;。从cURL 7.10开始默认绑定安装。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TRANSFERTEXT</constant></entry>
           <entry valign="top">
            启用后对FTP传输使用ASCII模式。对于LDAP，它检索纯文本信息而非HTML。在Windows系统上，系统不会把<literal>STDOUT</literal>设置成binary模式。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_UNRESTRICTED_AUTH</constant></entry>
           <entry valign="top">
           在使用<constant>CURLOPT_FOLLOWLOCATION</constant>产生的header中的多个locations中持续追加用户名和密码信息，即使域名已发生改变。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_UPLOAD</constant></entry>
           <entry valign="top">
            启用后允许文件上传。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_VERBOSE</constant></entry>
           <entry valign="top">
            启用时会汇报所有的信息，存放在<literal>STDERR</literal>或指定的<constant>CURLOPT_STDERR</constant>中。
           </entry>
           <entry valign="top">
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       对于下面的这些<parameter>option</parameter>的可选参数，<parameter>value</parameter>应该被设置一个<type>integer</type>类型的值：
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>选项</entry>
           <entry>可选<parameter>value</parameter>值</entry>
           <entry>备注</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_BUFFERSIZE</constant></entry>
           <entry valign="top">
            每次获取的数据中读入缓存的大小，但是不保证这个值每次都会被填满。
           </entry>
           <entry valign="top">
            在cURL 7.10中被加入。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CLOSEPOLICY</constant></entry>
           <entry valign="top">
            不是<parameter>CURLCLOSEPOLICY_LEAST_RECENTLY_USED</parameter>就是<parameter>CURLCLOSEPOLICY_OLDEST</parameter>，还存在另外三个<literal>CURLCLOSEPOLICY_</literal>，但是cURL暂时还不支持。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry><constant>CURLOPT_CONNECTTIMEOUT</constant></entry>
           <entry valign="top">
            在发起连接前等待的时间，如果设置为0，则无限等待。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CONNECTTIMEOUT_MS</constant></entry>
           <entry valign="top">
            尝试连接等待的时间，以毫秒为单位。如果设置为0，则无限等待。
           </entry>
           <entry valign="top">
            在cURL 7.16.2中被加入。从PHP 5.2.3开始可用。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DNS_CACHE_TIMEOUT</constant></entry>
           <entry valign="top">
            设置在内存中保存DNS信息的时间，默认为120秒。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPSSLAUTH</constant></entry>
           <entry valign="top">
            FTP验证方式：<literal>CURLFTPAUTH_SSL</literal> (首先尝试SSL)，<literal>CURLFTPAUTH_TLS</literal> (首先尝试TLS)或<literal>CURLFTPAUTH_DEFAULT</literal> (让cURL自动决定)。
           </entry>
           <entry valign="top">
            在cURL 7.12.2中被加入。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTP_VERSION</constant></entry>
           <entry valign="top">
            <parameter>CURL_HTTP_VERSION_NONE</parameter> (默认值，让cURL自己判断使用哪个版本)，<parameter>CURL_HTTP_VERSION_1_0</parameter> (强制使用 HTTP/1.0)或<parameter>CURL_HTTP_VERSION_1_1</parameter> (强制使用 HTTP/1.1)。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTPAUTH</constant></entry>
           <entry valign="top">
            <para>
             使用的HTTP验证方法，可选的值有：<parameter>CURLAUTH_BASIC</parameter>、<parameter>CURLAUTH_DIGEST</parameter>、<parameter>CURLAUTH_GSSNEGOTIATE</parameter>、<parameter>CURLAUTH_NTLM</parameter>、<parameter>CURLAUTH_ANY</parameter>和<parameter>CURLAUTH_ANYSAFE</parameter>。
            </para>
            <para>
             可以使用<literal>|</literal>位域(或)操作符分隔多个值，cURL让服务器选择一个支持最好的值。
            </para>
            <para>
             <parameter>CURLAUTH_ANY</parameter>等价于<literal>CURLAUTH_BASIC | CURLAUTH_DIGEST | CURLAUTH_GSSNEGOTIATE | CURLAUTH_NTLM</literal>.
            </para>
            <para>
             <parameter>CURLAUTH_ANYSAFE</parameter>等价于<literal>CURLAUTH_DIGEST | CURLAUTH_GSSNEGOTIATE | CURLAUTH_NTLM</literal>.
            </para>
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_INFILESIZE</constant></entry>
           <entry valign="top">
            设定上传文件的大小限制，字节(byte)为单位。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_LOW_SPEED_LIMIT</constant></entry>
           <entry valign="top">
            当传输速度小于<constant>CURLOPT_LOW_SPEED_LIMIT</constant>时(bytes/sec)，PHP会根据<constant>CURLOPT_LOW_SPEED_TIME</constant>来判断是否因太慢而取消传输。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_LOW_SPEED_TIME</constant></entry>
           <entry valign="top">
            当传输速度小于<constant>CURLOPT_LOW_SPEED_LIMIT</constant>时(bytes/sec)，PHP会根据<constant>CURLOPT_LOW_SPEED_TIME</constant>来判断是否因太慢而取消传输。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MAXCONNECTS</constant></entry>
           <entry valign="top">
            允许的最大连接数量，超过是会通过<constant>CURLOPT_CLOSEPOLICY</constant>决定应该停止哪些连接。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MAXREDIRS</constant></entry>
           <entry valign="top">
            指定最多的HTTP重定向的数量，这个选项是和<constant>CURLOPT_FOLLOWLOCATION</constant>一起使用的。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PORT</constant></entry>
           <entry valign="top">
            用来指定连接端口。（可选项）
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROTOCOLS</constant></entry>
           <entry valign="top">
            <para>
             <constant>CURLPROTO_*</constant>的位域指。如果被启用，位域值会限定libcurl在传输过程中有哪些可使用的协议。这将允许你在编译libcurl时支持众多协议，但是限制只是用它们中被允许使用的一个子集。默认libcurl将会使用全部它支持的协议。参见<constant>CURLOPT_REDIR_PROTOCOLS</constant>.
            </para>
            <para>
             可用的协议选项为：<parameter>CURLPROTO_HTTP</parameter>、<parameter>CURLPROTO_HTTPS</parameter>、<parameter>CURLPROTO_FTP</parameter>、<parameter>CURLPROTO_FTPS</parameter>、<parameter>CURLPROTO_SCP</parameter>、<parameter>CURLPROTO_SFTP</parameter>、<parameter>CURLPROTO_TELNET</parameter>、<parameter>CURLPROTO_LDAP</parameter>、<parameter>CURLPROTO_LDAPS</parameter>、<parameter>CURLPROTO_DICT</parameter>、<parameter>CURLPROTO_FILE</parameter>、<parameter>CURLPROTO_TFTP</parameter>、<parameter>CURLPROTO_ALL</parameter>
            </para>
           </entry>
           <entry valign="top">
            在cURL 7.19.4中被加入。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXYAUTH</constant></entry>
           <entry valign="top">
            HTTP代理连接的验证方式。使用在<constant>CURLOPT_HTTPAUTH</constant>中的位域标志来设置相应选项。对于代理验证只有<parameter>CURLAUTH_BASIC</parameter>和<parameter>CURLAUTH_NTLM</parameter>当前被支持。
           </entry>
           <entry valign="top">
            在cURL 7.10.7中被加入。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXYPORT</constant></entry>
           <entry valign="top">
            代理服务器的端口。端口也可以在<constant>CURLOPT_PROXY</constant>中进行设置。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXYTYPE</constant></entry>
           <entry valign="top">
            不是<parameter>CURLPROXY_HTTP</parameter> (默认值) 就是<parameter>CURLPROXY_SOCKS5</parameter>。
           </entry>
           <entry valign="top">
            在cURL 7.10中被加入。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_REDIR_PROTOCOLS</constant></entry>
           <entry valign="top">
            <constant>CURLPROTO_*</constant>中的位域值。如果被启用，位域值将会限制传输线程在<constant>CURLOPT_FOLLOWLOCATION</constant>开启时跟随某个重定向时可使用的协议。这将使你对重定向时限制传输线程使用被允许的协议子集默认libcurl将会允许除FILE和SCP之外的全部协议。这个和7.19.4预发布版本种无条件地跟随所有支持的协议有一些不同。关于协议常量，请参照<constant>CURLOPT_PROTOCOLS</constant>。
           </entry>
           <entry valign="top">
            在cURL 7.19.4中被加入。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_RESUME_FROM</constant></entry>
           <entry valign="top">
            在恢复传输时传递一个字节偏移量（用来断点续传）。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_VERIFYHOST</constant></entry>
           <entry valign="top">
            1 检查服务器SSL证书中是否存在一个公用名(common name)。译者注：公用名(Common Name)一般来讲就是填写你将要申请SSL证书的域名 (domain)或子域名(sub domain)。2 检查公用名是否存在，并且是否与提供的主机名匹配。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLVERSION</constant></entry>
           <entry valign="top">
            使用的SSL版本(2 或 3)。默认情况下PHP会自己检测这个值，尽管有些情况下需要手动地进行设置。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TIMECONDITION</constant></entry>
           <entry valign="top">
            如果在<constant>CURLOPT_TIMEVALUE</constant>指定的某个时间以后被编辑过，则使用<parameter>CURL_TIMECOND_IFMODSINCE</parameter>返回页面，如果没有被修改过，并且<constant>CURLOPT_HEADER</constant>为true，则返回一个<literal>"304 Not Modified"</literal>的header，    <constant>CURLOPT_HEADER</constant>为false，则使用<parameter>CURL_TIMECOND_IFUNMODSINCE</parameter>，默认值为<parameter>CURL_TIMECOND_IFUNMODSINCE</parameter>。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TIMEOUT</constant></entry>
           <entry valign="top">
            设置cURL允许执行的最长秒数。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TIMEOUT_MS</constant></entry>
           <entry valign="top">
            设置cURL允许执行的最长毫秒数。
           </entry>
           <entry valign="top">
            在cURL 7.16.2中被加入。从PHP 5.2.3起可使用。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TIMEVALUE</constant></entry>
           <entry valign="top">
            设置一个<constant>CURLOPT_TIMECONDITION</constant>使用的时间戳，在默认状态下使用的是<parameter>CURL_TIMECOND_IFMODSINCE</parameter>。
           </entry>
           <entry valign="top">
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       对于下面的这些<parameter>option</parameter>的可选参数，<parameter>value</parameter>应该被设置一个<type>string</type>类型的值：
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>选项</entry>
           <entry>可选<parameter>value</parameter>值</entry>
           <entry>备注</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_CAINFO</constant></entry>
           <entry valign="top">
            一个保存着1个或多个用来让服务端验证的证书的文件名。这个参数仅仅在和<constant>CURLOPT_SSL_VERIFYPEER</constant>一起使用时才有意义。            .
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CAPATH</constant></entry>
           <entry valign="top">
            一个保存着多个CA证书的目录。这个选项是和<constant>CURLOPT_SSL_VERIFYPEER</constant>一起使用的。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_COOKIE</constant></entry>
           <entry valign="top">
            设定HTTP请求中<literal>"Cookie: "</literal>部分的内容。多个cookie用分号分隔，分号后带一个空格(例如， "<literal>fruit=apple; colour=red</literal>")。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_COOKIEFILE</constant></entry>
           <entry valign="top">
            包含cookie数据的文件名，cookie文件的格式可以是Netscape格式，或者只是纯HTTP头部信息存入文件。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_COOKIEJAR</constant></entry>
           <entry valign="top">
            连接结束后保存cookie信息的文件。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CUSTOMREQUEST</constant></entry>
           <entry valign="top"><para>
            使用一个自定义的请求信息来代替<literal>"GET"</literal>或<literal>"HEAD"</literal>作为HTTP请求。这对于执行<literal>"DELETE"</literal> 或者其他更隐蔽的HTTP请求。有效值如<literal>"GET"</literal>，<literal>"POST"</literal>，<literal>"CONNECT"</literal>等等。也就是说，不要在这里输入整个HTTP请求。例如输入<literal>"GET /index.html HTTP/1.0\r\n\r\n"</literal>是不正确的。
            <note>
             <para>
              在确定服务器支持这个自定义请求的方法前不要使用。
             </para>
            </note>
            </para></entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_EGDSOCKET</constant></entry>
           <entry valign="top">
            类似<constant>CURLOPT_RANDOM_FILE</constant>，除了一个Entropy Gathering Daemon套接字。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_ENCODING</constant></entry>
           <entry valign="top">
            HTTP请求头中<literal>"Accept-Encoding: "</literal>的值。支持的编码有<literal>"identity"</literal>，<literal>"deflate"</literal>和<literal>"gzip"</literal>。如果为空字符串<literal>""</literal>，请求头会发送所有支持的编码类型。
           </entry>
           <entry valign="top">
            在cURL 7.10中被加入。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPPORT</constant></entry>
           <entry valign="top">
            这个值将被用来获取供FTP"POST"指令所需要的IP地址。"POST"指令告诉远程服务器连接到我们指定的IP地址。这个字符串可以是纯文本的IP地址、主机名、一个网络接口名（UNIX下）或者只是一个'-'来使用默认的IP地址。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_INTERFACE</constant></entry>
           <entry valign="top">
            网络发送接口名，可以是一个接口名、IP地址或者是一个主机名。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_KRB4LEVEL</constant></entry>
           <entry valign="top">
            KRB4 (Kerberos 4) 安全级别。下面的任何值都是有效的(从低到高的顺序)：<literal>"clear"</literal>、<literal>"safe"</literal>、<literal>"confidential"</literal>、<literal>"private".</literal>。如果字符串和这些都不匹配，将使用<literal>"private"</literal>。这个选项设置为&null;时将禁用KRB4 安全认证。目前KRB4 安全认证只能用于FTP传输。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_POSTFIELDS</constant></entry>
           <entry valign="top">
            全部数据使用HTTP协议中的"POST"操作来发送。要发送文件，在文件名前面加上<literal>@</literal>前缀并使用完整路径。这个参数可以通过urlencoded后的字符串类似'<literal>para1=val1&amp;para2=val2&amp;...</literal>'或使用一个以字段名为键值，字段数据为值的数组。如果<parameter>value</parameter>是一个数组，<literal>Content-Type</literal>头将会被设置成<literal>multipart/form-data</literal>。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY</constant></entry>
           <entry valign="top">
            HTTP代理通道。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXYUSERPWD</constant></entry>
           <entry valign="top">
            一个用来连接到代理的<literal>"[username]:[password]"</literal>格式的字符串。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_RANDOM_FILE</constant></entry>
           <entry valign="top">
            一个被用来生成SSL随机数种子的文件名。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_RANGE</constant></entry>
           <entry valign="top">
            以<literal>"X-Y"</literal>的形式，其中X和Y都是可选项获取数据的范围，以字节计。HTTP传输线程也支持几个这样的重复项中间用逗号分隔如<literal>"X-Y,N-M"</literal>。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_REFERER</constant></entry>
           <entry valign="top">
            在HTTP请求头中<literal>"Referer: "</literal>的内容。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_CIPHER_LIST</constant></entry>
           <entry valign="top">
            一个SSL的加密算法列表。例如<literal>RC4-SHA</literal>和<literal>TLSv1</literal>都是可用的加密列表。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLCERT</constant></entry>
           <entry valign="top">
            一个包含PEM格式证书的文件名。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLCERTPASSWD</constant></entry>
           <entry valign="top">
            使用<constant>CURLOPT_SSLCERT</constant>证书需要的密码。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLCERTTYPE</constant></entry>
           <entry valign="top">
            证书的类型。支持的格式有<literal>"PEM"</literal> (默认值), <literal>"DER"</literal>和<literal>"ENG"</literal>。
           </entry>
           <entry valign="top">
            在cURL 7.9.3中被加入。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLENGINE</constant></entry>
           <entry valign="top">
            用来在<constant>CURLOPT_SSLKEY</constant>中指定的SSL私钥的加密引擎变量。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLENGINE_DEFAULT</constant></entry>
           <entry valign="top">
            用来做非对称加密操作的变量。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLKEY</constant></entry>
           <entry valign="top">
            包含SSL私钥的文件名。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLKEYPASSWD</constant></entry>
           <entry valign="top"><para>
            在<constant>CURLOPT_SSLKEY</constant>中指定了的SSL私钥的密码。
            <note>
             <para>
              由于这个选项包含了敏感的密码信息，记得保证这个PHP脚本的安全。
             </para>
            </note>
            </para></entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLKEYTYPE</constant></entry>
           <entry valign="top">
            <constant>CURLOPT_SSLKEY</constant>中规定的私钥的加密类型，支持的密钥类型为<literal>"PEM"</literal>(默认值)、<literal>"DER"</literal>和<literal>"ENG"</literal>。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_URL</constant></entry>
           <entry valign="top">
            需要获取的URL地址，也可以在<function>curl_init</function>函数中设置。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_USERAGENT</constant></entry>
           <entry valign="top">
            在HTTP请求中包含一个<literal>"User-Agent: "</literal>头的字符串。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_USERPWD</constant></entry>
           <entry valign="top">
            传递一个连接中需要的用户名和密码，格式为：<literal>"[username]:[password]"</literal>。
           </entry>
           <entry valign="top">
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
        对于下面的这些<parameter>option</parameter>的可选参数，<parameter>value</parameter>应该被设置一个数组：
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>选项</entry>
           <entry>可选<parameter>value</parameter>值</entry>
           <entry>备注</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTP200ALIASES</constant></entry>
           <entry valign="top">
            200响应码数组，数组中的响应吗被认为是正确的响应，否则被认为是错误的。
           </entry>
           <entry valign="top">
            在cURL 7.10.3中被加入。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTPHEADER</constant></entry>
           <entry valign="top">
            一个用来设置HTTP头字段的数组。使用如下的形式的数组进行设置：
            <code>
             array('Content-type: text/plain', 'Content-length: 100')
            </code>
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_POSTQUOTE</constant></entry>
           <entry valign="top">
            在FTP请求执行完成后，在服务器上执行的一组FTP命令。
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_QUOTE</constant></entry>
           <entry valign="top">
            一组先于FTP请求的在服务器上执行的FTP命令。
           </entry>
           <entry valign="top">
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
        对于下面的这些<parameter>option</parameter>的可选参数，<parameter>value</parameter>应该被设置一个流资源
        （例如使用<function>fopen</function>）：
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>选项</entry>
           <entry>可选<parameter>value</parameter>值</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_FILE</constant></entry>
           <entry valign="top">
            设置输出文件的位置，值是一个资源类型，默认为<literal>STDOUT</literal> (浏览器)。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_INFILE</constant></entry>
           <entry valign="top">
            在上传文件的时候需要读取的文件地址，值是一个资源类型。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_STDERR</constant></entry>
           <entry valign="top">
            设置一个错误输出地址，值是一个资源类型，取代默认的<literal>STDERR</literal>。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_WRITEHEADER</constant></entry>
           <entry valign="top">
            设置header部分内容的写入的文件地址，值是一个资源类型。
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       对于下面的这些<parameter>option</parameter>的可选参数，<parameter>value</parameter>应该被设置为一个回调函数名：
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>选项</entry>
           <entry>可选<parameter>value</parameter>值</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_HEADERFUNCTION</constant></entry>
           <entry valign="top">
            设置一个回调函数，这个函数有两个参数，第一个是cURL的资源句柄，第二个是输出的header数据。header数据的输出必须依赖这个函数，返回已写入的数据大小。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PASSWDFUNCTION</constant></entry>
           <entry valign="top">
            设置一个回调函数，有三个参数，第一个是cURL的资源句柄，第二个是一个密码提示符，第三个参数是密码长度允许的最大值。返回密码的值。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROGRESSFUNCTION</constant></entry>
           <entry valign="top">
            设置一个回调函数，有三个参数，第一个是cURL的资源句柄，第二个是一个文件描述符资源，第三个是长度。返回包含的数据。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_READFUNCTION</constant></entry>
           <entry valign="top">
            回调函数名。该函数应接受三个参数。第一个是 cURL resource；第二个是通过选项 
<constant>CURLOPT_INFILE</constant> 传给 cURL 的 stream resource；第三个参数是最大可以读取的数据的数量。回
调函数必须返回一个字符串，长度小于或等于请求的数据量（第三个参数）。一般从传入的 stream 
resource 读取。返回空字符串作为 <literal>EOF</literal>（文件结束） 信号。
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_WRITEFUNCTION</constant></entry>
           <entry valign="top">
            拥有两个参数的回调函数，第一个是参数是会话句柄，第二是HTTP响应头信息的字符串。使用此回调函数，将自行处理响应头信息。响应头信息是整个字符串。设置返回值为精确的已写入字符串长度。发生错误时传输线程终止。
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.2.10</entry>
       <entry>
        引入 <constant>CURLOPT_PROTOCOLS</constant>, and
        <constant>CURLOPT_REDIR_PROTOCOLS</constant>.
       </entry>
      </row>
      <row>
       <entry>5.1.0</entry>
       <entry>
        引入 <constant>CURLOPT_AUTOREFERER</constant>,
        <constant>CURLOPT_BINARYTRANSFER</constant>,
        <constant>CURLOPT_FTPSSLAUTH</constant>,
        <constant>CURLOPT_PROXYAUTH</constant>, and
        <constant>CURLOPT_TIMECONDITION</constant>.
       </entry>
      </row>
      <row>
       <entry>5.0.0</entry>
       <entry>
        引入 <constant>CURLOPT_FTP_USE_EPRT</constant>,
        <constant>CURLOPT_NOSIGNAL</constant>,
        <constant>CURLOPT_UNRESTRICTED_AUTH</constant>,
        <constant>CURLOPT_BUFFERSIZE</constant>,
        <constant>CURLOPT_HTTPAUTH</constant>,
        <constant>CURLOPT_PROXYPORT</constant>,
        <constant>CURLOPT_PROXYTYPE</constant>,
        <constant>CURLOPT_SSLCERTTYPE</constant>, and
        <constant>CURLOPT_HTTP200ALIASES</constant>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>初始化一个新的cURL会话并获取一个网页</title>
    <programlisting role="php">
<![CDATA[
<?php
// 创建一个新cURL资源
$ch = curl_init();

// 设置URL和相应的选项
curl_setopt($ch, CURLOPT_URL, "http://www.example.com/");
curl_setopt($ch, CURLOPT_HEADER, false);

// 抓取URL并把它传递给浏览器
curl_exec($ch);

//关闭cURL资源，并且释放系统资源
curl_close($ch);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>上传文件</title>
    <programlisting role="php">
<![CDATA[
<?php

/* http://localhost/upload.php:
print_r($_POST);
print_r($_FILES);
*/

$ch = curl_init();

$data = array('name' => 'Foo', 'file' => '@/home/user/test.png');

curl_setopt($ch, CURLOPT_URL, 'http://localhost/upload.php');
curl_setopt($ch, CURLOPT_POST, 1);
curl_setopt($ch, CURLOPT_POSTFIELDS, $data);

curl_exec($ch);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [name] => Foo
)
Array
(
    [file] => Array
        (
            [name] => test.png
            [type] => image/png
            [tmp_name] => /tmp/phpcpjNeQ
            [error] => 0
            [size] => 279
        )

)

]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    传递一个数组到<constant>CURLOPT_POSTFIELDS</constant>，cURL会把数据编码成
    <emphasis>multipart/form-data</emphasis>，而然传递一个URL-encoded字符串时，数据会被编码成
    <emphasis>application/x-www-form-urlencoded</emphasis>。
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>curl_setopt_array</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
