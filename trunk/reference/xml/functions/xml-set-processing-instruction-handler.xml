<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 324122 Maintainer: HonestQiao Status: ready -->
<!-- Reviewed: no Maintainer: HonestQiao -->
<!-- splitted from ./en/functions/xml.xml, last change in rev 1.2 -->
  <refentry xml:id="function.xml-set-processing-instruction-handler" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>xml_set_processing_instruction_handler</refname>
    <refpurpose>
     建立处理指令（PI）处理器
    </refpurpose>
   </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
    <methodsynopsis>
     <type>bool</type><methodname>xml_set_processing_instruction_handler</methodname>
     <methodparam><type>resource</type><parameter>parser</parameter></methodparam>
     <methodparam><type>callback</type><parameter>handler</parameter></methodparam>
    </methodsynopsis>
    <para>
     为 <parameter>parser</parameter> 参数指定的 XML 解析器建立处理指令（PI）处理器函数。参数 <parameter>start_element_handler</parameter> 和 <parameter>end_element_handler</parameter> 为表示函数名称的字符串，这些函数必须在为 <parameter>parser</parameter> 指定的解析器调用 <function>xml_parse</function> 函数时已存在。
    </para>
    <para>
     处理指令有如下格式：
     <informalexample>
      <programlisting>&lt;?<replaceable>target</replaceable>
       <replaceable>data</replaceable>?>
      </programlisting>
     </informalexample>
    </para>
    <para>
     您可以将 PHP 代码放置在类似的标识符中，但要注意一个限制：在 XML 处理指令（PI）中，PI 的终止符（<literal>?&gt;</literal>）不能被引号引用，因此该字符序列不应该在您用 PI 嵌入到 XML 文档中的 PHP 代码中出现。否则，剩下的 PHP 代码，包括“真正”的 PI 终止符将被当作字符数据处理。
    </para>
    <para>
    由 <parameter>handler</parameter> 参数命名的函数名必须接受三个参数：
     <methodsynopsis>
      <methodname><replaceable>handler</replaceable></methodname>
      <methodparam><type>resource</type><parameter>parser</parameter></methodparam>
      <methodparam><type>string</type><parameter>target</parameter></methodparam>
      <methodparam><type>string</type><parameter>data</parameter></methodparam>
     </methodsynopsis>
     <variablelist>
      <varlistentry>
       <term><parameter>parser</parameter></term>
       <listitem>
        <simpara>
         第一个参数 <replaceable>parser</replaceable> 为指向要调用处理器的 XML 解析器的指针。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>target</parameter></term>
       <listitem>
        <simpara>
        第二个参数 <parameter>target</parameter> 为 PI 对象（PI target）。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>data</parameter></term>
       <listitem>
        <simpara>
         第二个参数 <parameter>target</parameter> 为 PI 数据（PI data）。
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
    <para>
     如果处理器函数名被设置为空字符串或者 &false;，则该有问题的处理器将被屏蔽。
    </para>
    <para>
     如果处理器被成功的建立，该函数将返回 &true;；如果 <parameter>parser</parameter> 指向的不是合法的解析器，函数该函数将返回 &false;。
    </para>
    &note.func-callback;
   </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>parser</parameter></term>
     <listitem>
      <para>
       A reference to the XML parser to set up processing instruction (PI) handler function.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>handler</parameter></term>
     <listitem>
      <para>
       <parameter>handler</parameter> is a string containing the name of a
       function that must exist when <function>xml_parse</function> is called
       for <parameter>parser</parameter>.
      </para>
      <para>
       The function named by <parameter>handler</parameter> must accept
       three parameters:
       <methodsynopsis>
        <methodname><replaceable>handler</replaceable></methodname>
        <methodparam><type>resource</type><parameter>parser</parameter></methodparam>
        <methodparam><type>string</type><parameter>target</parameter></methodparam>
        <methodparam><type>string</type><parameter>data</parameter></methodparam>
       </methodsynopsis>
       <variablelist>
        <varlistentry>
         <term><parameter>parser</parameter></term>
         <listitem>
          <simpara>
           The first parameter, <replaceable>parser</replaceable>, is a
           reference to the XML parser calling the handler.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><parameter>target</parameter></term>
         <listitem>
          <simpara>
           The second parameter, <parameter>target</parameter>, contains the PI
           target.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><parameter>data</parameter></term>
         <listitem>
          <simpara>
           The third parameter, <parameter>data</parameter>, contains the PI
           data.
          </simpara>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
      <para>
       If a handler function is set to an empty string, or &false;, the handler
       in question is disabled.
      </para>
      &note.func-callback;
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
