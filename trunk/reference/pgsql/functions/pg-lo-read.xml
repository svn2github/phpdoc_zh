<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision: 1.1 $ -->
<!-- $Author: dallas $ -->
<!-- EN-Revision: 1.2 Maintainer: dallas Status: ready -->
  <refentry id="function.pg-lo-read">
   <refnamediv>
    <refname>pg_lo_read</refname>
    <refpurpose>从大型对象中读入数据</refpurpose>
   </refnamediv>
   <refsect1>
    <title>描述</title>
     <methodsynopsis>
      <type>string</type><methodname>pg_lo_read</methodname>
      <methodparam><type>resource</type><parameter>large_object</parameter></methodparam>
      <methodparam><type>int</type><parameter>len</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>pg_lo_read</function> 从大型对象中读入最多 <parameter>len</parameter> 字节的数据并以字符串返回。<parameter>large_object</parameter> 指定了有效的大型对象的资源号，<parameter>len</parameter> 则指定了大型对象的段所允许的最大长度。如果出错则返回 &false;。
    </para>
    <para>
     要使用大型对象（lo）接口，需要将其放置在事务块中。
    </para>
    <note>
     <para>
      本函数以前的名字为 <literal>pg_loread()</literal>。
     </para>
    </note>
    <para>
     参见 <function>pg_lo_read_all</function>。
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
