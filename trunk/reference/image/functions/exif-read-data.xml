<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision: 1.2 $ -->
<!-- $Author: dallas $ -->
<!-- EN-Revision: 1.15 Maintainer: dallas Status: ready -->
  <refentry id="function.exif-read-data">
   <refnamediv>
    <refname>exif_read_data</refname>
    <refpurpose>
     从 <acronym>JPEG</acronym> 或 <acronym>TIFF</acronym>
     文件中读取 <acronym>EXIF</acronym> 头信息，这样就可以读取数码相机产生的元数据
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>说明</title>
    <methodsynopsis>
     <type>array</type><methodname>exif_read_data</methodname>
     <methodparam><type>string</type><parameter>filename</parameter></methodparam>
     <methodparam choice="opt"><type>string</type><parameter>sections</parameter></methodparam>
     <methodparam choice="opt"><type>bool</type><parameter>arrays</parameter></methodparam>
     <methodparam choice="opt"><type>bool</type><parameter>thumbnail</parameter></methodparam>
    </methodsynopsis>
    <para>
     <function>exif_read_data</function> 函数从 JPEG 或 TIFF 图像文件中读取 EXIF
     头信息。返回一个关联数组，键名是头信息名，值为与其相应的值。如果没有可供返回的数据则返回
     &false;。
    </para>
    <para>
     <parameter>filename</parameter> 是被读取的文件名。不能是 URL。
    </para>
    <para>
     <parameter>sections</parameter>
     是需要存在于文件中的逗号分隔的区段列表用来产生结果数组。如果未找到所请求的区段则返回值为
     &false;。
     <informaltable>
     <tgroup cols="2">
      <tbody>
       <row>
        <entry>FILE</entry>
        <entry>FileName，FileSize，FileDateTime，SectionsFound</entry>
       </row>
       <row>
        <entry>COMPUTED</entry>
        <entry>html，Width，Height，IsColor，可能有更多其它的。
        </entry>
       </row>
       <row>
        <entry>ANY_TAG</entry>
        <entry>任何有标记的信息，例如 IFD0，EXIF，...</entry>
       </row>
       <row>
        <entry>IFD0</entry>
        <entry>
         所有 IFD0 的标记数据。在标准的图像文件中这包含了图像大小及其它。
        </entry>
       </row>
       <row>
        <entry>THUMBNAIL</entry>
        <entry>
         如果有第二个 IFD，文件应该包含有缩略图。所有有关嵌入缩略图的标记信息都存储在本区。
        </entry>
       </row>
       <row>
        <entry>COMMENT</entry>
        <entry>JPEG 图像的注释头信息。</entry>
       </row>
       <row>
        <entry>EXIF</entry>
        <entry>
         EXIF 区段是 IFDO 的子区，包含有图像的更多详细信息。大多数内容都是数码相机相关的。
        </entry>
       </row>
      </tbody>
     </tgroup>
     </informaltable>
    </para>
    <para>
     <parameter>arrays</parameter> 指定了是否每个区段都成为一个数组。<emphasis>COMPUTED</emphasis>
     和 <emphasis>THUMBNAIL</emphasis> 区段总是成为数组，因为它们里面包含的名字和其它区段冲突。
    </para>
    <para>
     <parameter>thumbnail</parameter> 指定了是否读取缩略图本身而不只是标记数据。
    </para>
    <note>
     <para>
      Exif 头信息往往存在于数码相机生成的 JPEG/TIFF
      图像中，但不幸的是每个数码相机制造商的标记都不同，因此（编写代码时）不能依赖于某个特定的
      Exif 头信息。
     </para>
     <para>
      Windows ME/XP 在连接到数码相机时能清除掉
      Exif 头信息。更多信息见
      <ulink url="&url.winexif;">&url.winexif;</ulink>。
     </para>
    </note>
    <para>
     <example>
      <title><function>exif_read_data</function> 例子</title>
      <programlisting role="php">
<![CDATA[
<?php
echo "test1.jpg:<br />\n";
$exif = exif_read_data ('tests/test1.jpg','IFD0');
echo $exif===false ? "No header data found.<br />\n" : "Image contains headers<br />";
$exif = exif_read_data ('tests/test2.jpg',0,true);
echo "test2.jpg:<br />\n";
foreach($exif as $key=>$section) {
    foreach($section as $name=>$val) {
        echo "$key.$name: $val<br />\n";
    }
}
?>
]]>
      </programlisting>
      <para>
       第一个调用失败了，因为图像没有头信息。
       <screen role="php">
<![CDATA[
test1.jpg:
No header data found.
test2.jpg:
FILE.FileName: test2.jpg
FILE.FileDateTime: 1017666176
FILE.FileSize: 1240
FILE.FileType: 2
FILE.SectionsFound: ANY_TAG, IFD0, THUMBNAIL, COMMENT
COMPUTED.html: width="1" height="1"
COMPUTED.Height: 1
COMPUTED.Width: 1
COMPUTED.IsColor: 1
COMPUTED.ByteOrderMotorola: 1
COMPUTED.UserComment: Exif test image.
COMPUTED.UserCommentEncoding: ASCII
COMPUTED.Copyright: Photo (c) M.Boerger, Edited by M.Boerger.
COMPUTED.Copyright.Photographer: Photo (c) M.Boerger
COMPUTED.Copyright.Editor: Edited by M.Boerger.
IFD0.Copyright: Photo (c) M.Boerger
IFD0.UserComment: ASCII
THUMBNAIL.JPEGInterchangeFormat: 134
THUMBNAIL.JPEGInterchangeFormatLength: 523
COMMENT.0: Comment #1.
COMMENT.1: Comment #2.
COMMENT.2: Comment #3end
THUMBNAIL.JPEGInterchangeFormat: 134
THUMBNAIL.Thumbnail.Height: 1
THUMBNAIL.Thumbnail.Height: 1
]]>
       </screen>
      </para>
     </example>
    </para>
    <note>
     <para>
      如果图像包含任何 IFD0 数据，则 COMPUTED 会包含有一项
      ByteOrderMotorola，对于 little-endian (intel) 字节顺序，其值为 0，对于
      big-endian (motorola) 字节顺序，其值为 1。这是 PHP 4.3 新加的。
     </para>
     <para>
      当一个 Exif 头信息包含有一个 Copyright 时注意它本身可以包含两个值。解决方案和
      Exif 2.10 标准不一致，COMPUTED 区段会同时返回
      <emphasis>Copyright.Photographer</emphasis> 和
      <emphasis>Copyright.Editor</emphasis>，但是 IFD0
      区段则包含有一个字节数组用 NULL 字符分隔开两个项目。或者只有第一项如果数据类型错误的话（Exif
      的正常行为）。COMPUTED 也会包含
      <emphasis>Copyright</emphasis>，要么是原始的版权字符串，要么是逗号分隔的摄像与编辑的版权信息。
      <!-- TNND，哪个混蛋写得这么费解？
      When an Exif header contains a Copyright note this itself can contain two
      values. As the solution is inconsitent in the Exif 2.10 standard the COMPUTED
      section will return both entries <emphasis>Copyright.Photographer</emphasis>
      and <emphasis>Copyright.Editor</emphasis> while the IFD0 sections contains
      the byte array with the NULL character that splits both entries. Or just the
      first entry if the datatype was wrong (normal behaviour of Exif). The
      COMPUTED will contain also an entry <emphasis>Copyright</emphasis> Which
      is either the original copyright string or it is a comma separated list of
      photo and editor copyright. -->
     </para>
    </note>
    <note>
     <para>
      UserComment 标记和 Copyright
      有同样的问题。它也可以存储两个值，第一个是使用的编码方式，第二个是其值本身。如果这样则
      IFD0 区段仅包含编码方式或者一个字节数组。COMPUTED
      区段将存储两个值到 <emphasis>UserCommentEncoding</emphasis> 和
      <emphasis>UserComment</emphasis>。<emphasis>UserComment</emphasis>
      在两种情况下都可用因此应该优先使用它而不是 IFD0 区段中的该值。
     </para>
     <para>
      如果用户注释使用 Unicode 或 JIS 编码并且可以使用 mbstring
      模块，则此编码会根据 exif 在 &php.ini; 中的设置自动改变。这是 PHP 4.3 新加的。
     </para>
    </note>
    <note>
     <para>
      Height 和 Width 是用和 <function>getimagesize</function>
      一样的方法计算的，因此它们的值不能是任何返回的头信息的部分。此外
      html 是一个 height/width 的文本字符串可以用于普通的 <acronym>HTML</acronym> 中。
     </para>
    </note>
    <note>
     <para>
      自 PHP 4.3 起本函数可以读取所有嵌入的 <acronym>IFD</acronym>
      数据，包括数组（也返回数组）。此外嵌入的缩略图的大小包括在
      <emphasis>THUMBNAIL</emphasis> 子数组中并且
      <function>exif_read_data</function> 可以将缩略图按照
      <acronym>TIFF</acronym> 格式返回。最后，不再有返回值最大长度的限制了（直到达到内存限定）。
     </para>
    </note>
    <note>
     <simpara>
      本函数仅在 PHP 编译时使用了
      <option role="configure">--enable-exif</option> 选项时可用。其功能和行为在
      PHP 4.2 改变了，早期版本极不稳定。
     </simpara>
     <simpara>
      自 PHP 4.3 起用户注释可以自动修改编码，假如 PHP 4 编译时使用了
      <option role="configure">--enable-mbstring</option> 的话。
     </simpara>
     <simpara>
      本函数不需要 GD 图像库。
     </simpara>
     <simpara>
      参见 <function>exif_thumbnail</function> 和 <function>getimagesize</function>。
     </simpara>
    </note>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
