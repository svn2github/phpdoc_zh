<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision$ -->
<!-- $Author$ -->
<!-- EN-Revision: n/a Maintainer: dallas Status: ready -->
<refentry xml:id="function.imagettftext" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>imagettftext</refname>
  <refpurpose>用 TrueType 字体向图像写入文本</refpurpose>
 </refnamediv>
 <refsect1>
  <title>说明</title>
  <methodsynopsis>
   <type>array</type><methodname>imagettftext</methodname>
   <methodparam><type>resource</type><parameter>image</parameter></methodparam>
   <methodparam><type>float</type><parameter>size</parameter></methodparam>
   <methodparam><type>float</type><parameter>angle</parameter></methodparam>
   <methodparam><type>int</type><parameter>x</parameter></methodparam>
   <methodparam><type>int</type><parameter>y</parameter></methodparam>
   <methodparam><type>int</type><parameter>color</parameter></methodparam>
   <methodparam><type>string</type><parameter>fontfile</parameter></methodparam>
   <methodparam><type>string</type><parameter>text</parameter></methodparam>
  </methodsynopsis>
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>image</parameter></term>
     <listitem>
      <simpara>
       图像资源。见 <function>imagecreatetruecolor</function>。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>size</parameter></term>
     <listitem>
      <simpara>
       字体大小。根据 GD 版本不同，应该以像素大小指定（GD1）或点大小（GD2）。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>angle</parameter></term>
     <listitem>
      <simpara>
       角度制表示的角度，0 度为从左向右读的文本。更高数值表示逆时针旋转。例如
       90 度表示从下向上读的文本。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>x</parameter></term>
     <listitem>
      <simpara>
       由 <parameter>x</parameter>，<parameter>y</parameter>
       所表示的坐标定义了第一个字符的基本点（大概是字符的左下角）。这和
       <function>imagestring</function> 不同，其 x，y 定义了第一个字符的左上角。例如
       "top left" 为 0, 0。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>y</parameter></term>
     <listitem>
      <simpara>
       Y 坐标。它设定了字体基线的位置，不是字符的最底端。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>color</parameter></term>
     <listitem>
      <simpara>
       颜色索引。使用负的颜色索引值具有关闭防锯齿的效果。见
       <function>imagecolorallocate</function>。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>fontfile</parameter></term>
     <listitem>
      <simpara>
       是想要使用的 TrueType 字体的路径。
      </simpara>
      <simpara>
       根据 PHP 所使用的 GD 库的不同，<emphasis>当 <parameter>fontfile</parameter>
       没有以 <literal>/</literal> 开头时则 <literal>.ttf</literal>
       将被加到文件名之后</emphasis>并且会在库定义字体路径中尝试搜索该文件名。
      </simpara>
      <simpara>
       当使用的 GD 库版本低于 2.0.18 时，一个空格字符
       而不是分号将被用来作为不同字体文件的“路径分隔符”。不小心使用了此特性将会导致一条警告信息：<literal>Warning:
       Could not find/open font</literal>。对受影响的版本来说唯一解决方案就是将字体移动到不包含空格的路径中去。
      </simpara>
      <para>
       很多情况下字体都放在脚本的同一个目录下。下面的小技巧可以减轻包含的问题。
       <programlisting role="php">
<![CDATA[
<?php
// Set the enviroment variable for GD
putenv('GDFONTPATH=' . realpath('.'));

// Name the font to be used (note the lack of the .ttf extension)
$font = 'SomeFont';
?>
]]>
       </programlisting>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>text</parameter></term>
     <listitem>
      <simpara>
       文本字符串。
      </simpara>
      <simpara>
       可以包含十进制数字化字符表示（形式为：&amp;#8364;）来访问字体中超过位置
       127 的字符。UTF-8 编码的字符串可以直接传递。
      </simpara>
      <simpara>
       如果字符串中使用的某个字符不被字体支持，一个空心矩形将替换该字符。
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  <para>
   <function>imagettftext</function> 返回一个含有 8
   个单元的数组表示了文本外框的四个角，顺序为坐下角，右下角，右上角，左上角。这些点是相对于文本的而和角度无关，因此“左上角”指的是以水平方向看文字时其左上角。
  </para>
  <para>
   <example>
    <title><function>imagettftext</function> 例子</title>
    <para>
     本例中的脚本将生成一个白色的 400x30 像素 PNG 图像，其中有黑色（带灰色阴影）Arial
     字体写的“Testing...”。
    </para>
    <programlisting role="php">
<![CDATA[
<?php
// Set the content-type
header("Content-type: image/png");

// Create the image
$im = imagecreatetruecolor(400, 30);

// Create some colors
$white = imagecolorallocate($im, 255, 255, 255);
$grey = imagecolorallocate($im, 128, 128, 128);
$black = imagecolorallocate($im, 0, 0, 0);
imagefilledrectangle($im, 0, 0, 399, 29, $white);

// The text to draw
$text = 'Testing...';
// Replace path by your own font path
$font = 'arial.ttf';

// Add some shadow to the text
imagettftext($im, 20, 0, 11, 21, $grey, $font, $text);

// Add the text
imagettftext($im, 20, 0, 10, 20, $black, $font, $text);

// Using imagepng() results in clearer text compared with imagejpeg()
imagepng($im);
imagedestroy($im);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   本函数同时需要 GD 库和
   <link xlink:href="&url.freetype;">FreeType</link> 库。
  </para>
  <para>
   参见 <function>imagettfbbox</function>。
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
