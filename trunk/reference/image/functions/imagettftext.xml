<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 309972 Maintainer: HonestQiao Status: ready -->
<!-- Reviewed: no Maintainer: HonestQiao -->
<refentry xml:id="function.imagettftext" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>imagettftext</refname>
  <refpurpose>用 TrueType 字体向图像写入文本</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>imagettftext</methodname>
   <methodparam><type>resource</type><parameter>image</parameter></methodparam>
   <methodparam><type>float</type><parameter>size</parameter></methodparam>
   <methodparam><type>float</type><parameter>angle</parameter></methodparam>
   <methodparam><type>int</type><parameter>x</parameter></methodparam>
   <methodparam><type>int</type><parameter>y</parameter></methodparam>
   <methodparam><type>int</type><parameter>color</parameter></methodparam>
   <methodparam><type>string</type><parameter>fontfile</parameter></methodparam>
   <methodparam><type>string</type><parameter>text</parameter></methodparam>
  </methodsynopsis>
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>image</parameter></term>
     <listitem>
      <simpara>
       图像资源。见 <function>imagecreatetruecolor</function>。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>size</parameter></term>
     <listitem>
      <simpara>
       字体大小。根据 GD 版本不同，应该以像素大小指定（GD1）或点大小（GD2）。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>angle</parameter></term>
     <listitem>
      <simpara>
       角度制表示的角度，0 度为从左向右读的文本。更高数值表示逆时针旋转。例如
       90 度表示从下向上读的文本。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>x</parameter></term>
     <listitem>
      <simpara>
       由 <parameter>x</parameter>，<parameter>y</parameter>
       所表示的坐标定义了第一个字符的基本点（大概是字符的左下角）。这和
       <function>imagestring</function> 不同，其 x，y 定义了第一个字符的左上角。例如
       "top left" 为 0, 0。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>y</parameter></term>
     <listitem>
      <simpara>
       Y 坐标。它设定了字体基线的位置，不是字符的最底端。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>color</parameter></term>
     <listitem>
      <simpara>
       颜色索引。使用负的颜色索引值具有关闭防锯齿的效果。见
       <function>imagecolorallocate</function>。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>fontfile</parameter></term>
     <listitem>
      <simpara>
       是想要使用的 TrueType 字体的路径。
      </simpara>
      <simpara>
       根据 PHP 所使用的 GD 库的不同，<emphasis>当 <parameter>fontfile</parameter>
       没有以 <literal>/</literal> 开头时则 <literal>.ttf</literal>
       将被加到文件名之后</emphasis>并且会在库定义字体路径中尝试搜索该文件名。
      </simpara>
      <simpara>
       当使用的 GD 库版本低于 2.0.18 时，一个空格字符
       而不是分号将被用来作为不同字体文件的“路径分隔符”。不小心使用了此特性将会导致一条警告信息：<literal>Warning:
       Could not find/open font</literal>。对受影响的版本来说唯一解决方案就是将字体移动到不包含空格的路径中去。
      </simpara>
      <para>
       很多情况下字体都放在脚本的同一个目录下。下面的小技巧可以减轻包含的问题。
       <programlisting role="php">
<![CDATA[
<?php
// Set the enviroment variable for GD
putenv('GDFONTPATH=' . realpath('.'));

// Name the font to be used (note the lack of the .ttf extension)
$font = 'SomeFont';
?>
]]>
       </programlisting>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>text</parameter></term>
     <listitem>
      <simpara>
       文本字符串。
      </simpara>
      <simpara>
       可以包含十进制数字化字符表示（形式为：&amp;#8364;）来访问字体中超过位置
       127 的字符。UTF-8 编码的字符串可以直接传递。
      </simpara>
      <simpara>
       如果字符串中使用的某个字符不被字体支持，一个空心矩形将替换该字符。
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  <para>
   <function>imagettftext</function> 返回一个含有 8
   个单元的数组表示了文本外框的四个角，顺序为坐下角，右下角，右上角，左上角。这些点是相对于文本的而和角度无关，因此“左上角”指的是以水平方向看文字时其左上角。
  </para>
  <para>
   <example>
    <title><function>imagettftext</function> 例子</title>
    <para>
     本例中的脚本将生成一个白色的 400x30 像素 PNG 图像，其中有黑色（带灰色阴影）Arial
     字体写的“Testing...”。
    </para>
    <programlisting role="php">
<![CDATA[
<?php
// Set the content-type
header("Content-type: image/png");

// Create the image
$im = imagecreatetruecolor(400, 30);

// Create some colors
$white = imagecolorallocate($im, 255, 255, 255);
$grey = imagecolorallocate($im, 128, 128, 128);
$black = imagecolorallocate($im, 0, 0, 0);
imagefilledrectangle($im, 0, 0, 399, 29, $white);

// The text to draw
$text = 'Testing...';
// Replace path by your own font path
$font = 'arial.ttf';

// Add some shadow to the text
imagettftext($im, 20, 0, 11, 21, $grey, $font, $text);

// Add the text
imagettftext($im, 20, 0, 10, 20, $black, $font, $text);

// Using imagepng() results in clearer text compared with imagejpeg()
imagepng($im);
imagedestroy($im);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   本函数同时需要 GD 库和
   <link xlink:href="&url.freetype;">FreeType</link> 库。
  </para>
  <para>
   参见 <function>imagettfbbox</function>。
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &gd.image.description;
    <varlistentry>
     <term><parameter>size</parameter></term>
     <listitem>
      <para>&gd.font.size;</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>angle</parameter></term>
     <listitem>
      <para>
       The angle in degrees, with 0 degrees being left-to-right reading text.
       Higher values represent a counter-clockwise rotation. For example, a 
       value of 90 would result in bottom-to-top reading text.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>x</parameter></term>
     <listitem>
      <para>
       The coordinates given by <parameter>x</parameter> and
       <parameter>y</parameter> will define the basepoint of the first
       character (roughly the lower-left corner of the character). This
       is different from the <function>imagestring</function>, where
       <parameter>x</parameter> and <parameter>y</parameter> define the
       upper-left corner of the first character. For example, "top left"
       is 0, 0.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>y</parameter></term>
     <listitem>
      <para>
       The y-ordinate. This sets the position of the fonts baseline, not the
       very bottom of the character.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>color</parameter></term>
     <listitem>
      <para>
       The color index. Using the negative of a color index has the effect of
       turning off antialiasing. See <function>imagecolorallocate</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>fontfile</parameter></term>
     <listitem>
      <para>
       The path to the TrueType font you wish to use.
      </para>
      <para>
       Depending on which version of the GD library PHP is using, <emphasis>when
       <parameter>fontfile</parameter> does not begin with a leading
       <literal>/</literal> then <literal>.ttf</literal> will be appended</emphasis>
       to the filename and the library will attempt to search for that
       filename along a library-defined font path.
      </para>
      <para>
       When using versions of the GD library lower than 2.0.18, a <literal>space</literal> character,
       rather than a semicolon, was used as the 'path separator' for different font files.
       Unintentional use of this feature will result in the warning message:
       <literal>Warning: Could not find/open font</literal>. For these affected versions, the
       only solution is moving the font to a path which does not contain spaces.
      </para>
      <para>
       In many cases where a font resides in the same directory as the script using it
       the following trick will alleviate any include problems.
       <programlisting role="php">
<![CDATA[
<?php
// Set the enviroment variable for GD
putenv('GDFONTPATH=' . realpath('.'));

// Name the font to be used (note the lack of the .ttf extension)
$font = 'SomeFont';
?>
]]>
       </programlisting>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>text</parameter></term>
     <listitem>
      <para>
       The text string in UTF-8 encoding.
      </para>
      <para>
       May include decimal numeric character references (of the form:
       &amp;#8364;) to access characters in a font beyond position 127.
       The hexadecimal format (like &amp;#xA9;) is supported.
       Strings in UTF-8 encoding can be passed directly.
      </para>
      <para>
       Named entities, such as &amp;copy;, are not supported. Consider using 
       <function>html_entity_decode</function>
       to decode these named entities into UTF-8 strings (html_entity_decode()
       supports this as of PHP 5.0.0).
      </para>
      <para>
       If a character is used in the string which is not supported by the
       font, a hollow rectangle will replace the character.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns an array with 8 elements representing four points making the
   bounding box of the text. The order of the points is lower left, lower 
   right, upper right, upper left. The points are relative to the text
   regardless of the angle, so "upper left" means in the top left-hand 
   corner when you see the text horizontally.
   Returns &false; on error.
  </para>
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.2.0</entry>
       <entry>
        It is now possible to specify an hexadecimal entity in 
        <parameter>text</parameter>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>imagettftext</function> example</title>
    <para>
     This example script will produce a white PNG 400x30 pixels, with
     the words "Testing..." in black (with grey shadow), in the font Arial.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
// Set the content-type
header('Content-Type: image/png');

// Create the image
$im = imagecreatetruecolor(400, 30);

// Create some colors
$white = imagecolorallocate($im, 255, 255, 255);
$grey = imagecolorallocate($im, 128, 128, 128);
$black = imagecolorallocate($im, 0, 0, 0);
imagefilledrectangle($im, 0, 0, 399, 29, $white);

// The text to draw
$text = 'Testing...';
// Replace path by your own font path
$font = 'arial.ttf';

// Add some shadow to the text
imagettftext($im, 20, 0, 11, 21, $grey, $font, $text);

// Add the text
imagettftext($im, 20, 0, 10, 20, $black, $font, $text);

// Using imagepng() results in clearer text compared with imagejpeg()
imagepng($im);
imagedestroy($im);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <mediaobject>
     <alt>Output of example : imagettftext()</alt>
     <imageobject>
      <imagedata fileref="en/reference/image/figures/imagettftext.png"/>
     </imageobject>
    </mediaobject>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    This function requires both the GD library and the <link
    xlink:href="&url.freetype;">FreeType</link> library.
   </para>
  </note>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>imagettfbbox</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
