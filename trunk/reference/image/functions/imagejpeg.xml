<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 309972 Maintainer: HonestQiao Status: ready -->
<!-- Reviewed: no Maintainer: HonestQiao -->
<refentry xml:id="function.imagejpeg" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>imagejpeg</refname>
  <refpurpose>&gd.image.output;</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>imagejpeg</methodname>
   <methodparam><type>resource</type><parameter>image</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>quality</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>imagejpeg</function> 从 <parameter>image</parameter>
   图像以 <parameter>filename</parameter> 为文件名创建一个
   <acronym>JPEG</acronym> 图像。<parameter>image</parameter>
   参数是 <function>imagecreatetruecolor</function> 函数的返回值。
  </para>
  <para>
   <parameter>filename</parameter>
   参数为可选，如果省略，则原始图像流将被直接输出。如果要省略
   <parameter>filename</parameter> 参数而提供
   <parameter>quality</parameter> 参数，使用NULL。 通过
   <function>header</function> 发送 Content-type: image/jpeg 可以使 PHP
   脚本直接输出 <acronym>JPEG</acronym> 图像。
  </para>
  &note.config.jpeg;
  <para>
   <parameter>quality</parameter> 为可选项，范围从
   0（最差质量，文件更小）到 100（最佳质量，文件最大）。默认为
   IJG 默认的质量值（大约 75）。
  </para>
  <para>
   如果想输出渐进式 JPEG，需要用
   <function>imageinterlace</function> 函数将隔行扫描比特置位。
  </para>
  <para>
   参见
   <function>imagepng</function>，<function>imagegif</function>，<function>imagewbmp</function>，<function>imageinterlace</function>
   和 <function>imagetypes</function>。
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &gd.image.description;
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>&gd.image.path;</para>
      <para>
       To skip this argument in order to provide the 
       <parameter>quality</parameter> parameter, use &null;.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>quality</parameter></term>
     <listitem>
      <para>
       <parameter>quality</parameter> is optional, and ranges from 0 (worst
       quality, smaller file) to 100 (best quality, biggest file). The 
       default is the default IJG quality value (about 75).
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Outputting a JPEG image</title>
    <programlisting role="php">
<![CDATA[
<?php
// Create a blank image and add some text
$im = imagecreatetruecolor(120, 20);
$text_color = imagecolorallocate($im, 233, 14, 91);
imagestring($im, 1, 5, 5,  'A Simple Text String', $text_color);

// Set the content type header - in this case image/jpeg
header('Content-Type: image/jpeg');

// Output the image
imagejpeg($im);

// Free up memory
imagedestroy($im);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <mediaobject>
     <alt>Output of example : Outputting a JPEG image</alt>
     <imageobject>
      <imagedata fileref="en/reference/image/figures/imagejpeg.jpg"/>
     </imageobject>
    </mediaobject>
   </example>
  </para>
  <para>
   <example>
    <title>Saving a JPEG image</title>
    <programlisting role="php">
<![CDATA[
<?php
// Create a blank image and add some text
$im = imagecreatetruecolor(120, 20);
$text_color = imagecolorallocate($im, 233, 14, 91);
imagestring($im, 1, 5, 5,  'A Simple Text String', $text_color);

// Save the image as 'simpletext.jpg'
imagejpeg($im, 'simpletext.jpg');

// Free up memory
imagedestroy($im);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Outputting the image at 75% quality</title>
    <programlisting role="php">
<![CDATA[
<?php
// Create a blank image and add some text
$im = imagecreatetruecolor(120, 20);
$text_color = imagecolorallocate($im, 233, 14, 91);
imagestring($im, 1, 5, 5,  'A Simple Text String', $text_color);

// Set the content type header - in this case image/jpeg
header('Content-Type: image/jpeg');

// Skip the filename parameter using NULL, then set the quality to 75%
imagejpeg($im, NULL, 75);

// Free up memory
imagedestroy($im);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  &note.config.jpeg;
  <note>
   <para>
    If you want to output Progressive JPEGs, you need to set interlacing
    on with <function>imageinterlace</function>.
   </para>
  </note>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>imagepng</function></member>
    <member><function>imagegif</function></member>
    <member><function>imagewbmp</function></member>
    <member><function>imageinterlace</function></member>
    <member><function>imagetypes</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
