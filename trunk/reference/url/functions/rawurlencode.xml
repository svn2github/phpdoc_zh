<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision: 1.4 $ -->
<!-- $Author: bjori $ -->
<!-- EN-Revision: 1.8 Maintainer: nio Status: ready -->
<refentry xml:id="function.rawurlencode" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>rawurlencode</refname>
  <refpurpose>按照 RFC 1738 对 URL 进行编码</refpurpose>
 </refnamediv>
 <refsect1>
  <title>说明</title>
  <methodsynopsis>
   <type>string</type><methodname>rawurlencode</methodname>
   <methodparam><type>string</type><parameter>str</parameter></methodparam>
  </methodsynopsis>
  <para>
   返回字符串，此字符串中除了
   <literal>-_.</literal> 
   之外的所有非字母数字字符都将被替换成百分号（<literal>%</literal>）后跟两位十六进制数。这是在
   RFC 1738 中描述的编码，是为了保护原义字符以免其被解释为特殊的 
   URL 定界符，同时保护 URL 
   格式以免其被传输媒体（像一些邮件系统）使用字符转换时弄乱。例如，如果你想在
   FTP 的 URL 中包含密码：
  </para>
  <para>
   <example>
    <title><function>rawurlencode</function> 示例 1</title>
    <programlisting role="php">
<![CDATA[
<?php
echo '<a href="ftp://user:', rawurlencode('foo @+%/'),
     '@ftp.example.com/x.txt">';
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   或者，如果你想通过 URL 的 PATH_INFO 构成部分去传递信息：
  </para>
  <para>
   <example>
    <title><function>rawurlencode</function> 示例 2</title>
    <programlisting role="php">
<![CDATA[
<?php
echo '<a href="http://example.com/department_list_script/',
    rawurlencode('sales and marketing/Miami'), '">';
?>
]]>
    </programlisting>
   </example>
  </para>
  <simpara>
   参见 <function>rawurldecode</function>、<function>urldecode</function>、<function>urlencode</function>
   与 <link xlink:href="&url.rfc;1738">RFC 1738</link>。
  </simpara>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
