<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision: 1.1 $ -->
<!-- $Author: nio $ -->
<!-- EN-Revision: 1.0 Maintainer: nio Status: ready -->
  <refentry id="function.http-build-query">
   <refnamediv>
    <refname>http_build_query</refname>
    <refpurpose>生成 url-encoded 之后的请求字符串</refpurpose>
   </refnamediv>
   <refsect1>
    <title>描述</title>
    <methodsynopsis>
     <type>string</type><methodname>http_build_query</methodname>
     <methodparam><type>array</type><parameter>formdata</parameter></methodparam>
     <methodparam choice="opt"><type>string</type><parameter>numeric_prefix</parameter></methodparam>
    </methodsynopsis>
    
    <simpara>
     使用给出的关联（或下标）数组生成一个 
     url-encoded 请求字符串。参数
     <parameter>formdata</parameter> 可以是数组或包含属性的对象。一个
     <parameter>formdata</parameter> 
     数组可以是简单的一维结构，也可以是由数组组成的数组（其依次可以包含其它数组）。如果在基础数组中使用了数字下标同时给出了
     <parameter>numeric_prefix</parameter> 参数，此参数值将会作为基础数组中的数字下标元素的前缀。这是为了让
     <literal>PHP</literal> 或其它 CGI
     程序在稍后对数据进行解码时获取合法的变量名。
    </simpara>
    
    <example>
     <title><function>http_build_query</function> 使用示例</title>
     <programlisting role="php">
<![CDATA[
<?php
$data = array('foo'=>'bar',
              'baz'=>'boom',
              'cow'=>'milk',
              'php'=>'hypertext processor');
              
echo http_build_query($data);
/* 输出：
      foo=bar&baz=boom&cow=milk&php=hypertext+processor
 */
?>
]]>
     </programlisting>
    </example>

    <example>
     <title><function>http_build_query</function> 使用数字下标的元素</title>
     <programlisting role="php">
<![CDATA[
<?php
$data = array('foo', 'bar', 'baz', 'boom', 'cow' => 'milk', 'php' =>'hypertext processor');
              
echo http_build_query($data);
/* 输出：
      0=foo&1=bar&2=baz&3=boom&cow=milk&php=hypertext+processor
 */
 
echo http_build_query($data, 'myvar_');
/* 输出：
      myvar_0=foo&myvar_1=bar&myvar_2=baz&myvar_3=boom&cow=milk&php=hypertext+processor
 */
?>
]]>
     </programlisting>
    </example>

    <example>
     <title><function>http_build_query</function> 使用复杂的数组</title>
     <programlisting role="php">
<![CDATA[
<?php
$data = array('user'=>array('name'=>'Bob Smith',
                            'age'=>47,
                            'sex'=>'M',
                            'dob'=>'5/12/1956'),
              'pastimes'=>array('golf', 'opera', 'poker', 'rap'),
              'children'=>array('bobby'=>array('age'=>12,
                                               'sex'=>'M'),
                                'sally'=>array('age'=>8,
                                               'sex'=>'F')),
              'CEO');
                                               
echo http_build_query($data, 'flags_');
/* 输出：（为了可读性对其进行了折行）
      user[name]=Bob+Smith&user[age]=47&user[sex]=M&user[dob]=5%1F12%1F1956&
      pastimes[0]=golf&pastimes[1]=opera&pastimes[2]=poker&pastimes[3]=rap&
      children[bobby][age]=12&children[bobby][sex]=M&children[sally][age]=8&
      children[sally][sex]=F&flags_0=CEO

   注意：只有基础数组中的数字下标元素“CEO”才获取了前缀，其它数字下标元素（如
   pastimes 下的元素）则不需要为了合法的变量名而加上前缀。
 */
?>
]]>
     </programlisting>
    </example>
    
    <example>
     <title><function>http_build_query</function> 使用对象</title>
     <programlisting role="php">
<![CDATA[
<?php
class myClass {
  var $foo;
  var $baz;
  
  function myClass() {
    $this->foo = 'bar';
    $this->baz = 'boom';
  }
}

$data = new myClass();

echo http_build_query($data);
/* 输出：
      foo=bar&baz=boom
 */
?>
]]>
     </programlisting>
    </example>

    <simpara>
     参见：<function>parse_str</function>、<function>parse_url</function>、<function>urlencode</function>
     和 <function>array_walk</function>
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

