<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision: 1.2 $ -->
<!-- $Author: gregory $ -->
<!-- EN-Revision: 1.6 Maintainer: yorgo Status: ready -->
<!-- splitted from ./en/functions/mysql.xml, last change in rev 1.2 -->
  <refentry id="function.mysql-affected-rows">
   <refnamediv>
    <refname>mysql_affected_rows</refname>
    <refpurpose>取得前一次 MySQL 操作所影响的记录行数</refpurpose>
   </refnamediv>
   <refsect1>
    <title>描述</title>
     <methodsynopsis>
      <type>int</type><methodname>mysql_affected_rows</methodname>
      <methodparam choice="opt"><type>resource</type><parameter>
        link_identifier
       </parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>mysql_affected_rows</function> 
	 返回最近一次与 <parameter>连接句柄</parameter> 关联的 
	 INSERT，UPDATE 或 DELETE 查询所影响的记录行数。如果连接句柄没有指定，
	 则默认使用最近一次由 <function>mysql_connect</function> 函数打开的连接句柄。
    </para>
    <note>
     <para>
      如果你使用事务处理（transactions），你需要在 INSERT，UPDATE 或 DELETE 查询后调用
      <function>mysql_affected_rows</function> 函数，而不是在 commit 命令之后。
     </para>
    </note>
    <para>
     如果最近一次操作是没有任何条件（WHERE）的 DELETE 查询， 在表中所有的记录都会被删除，但该函数返回值为 0。
    </para>
    <note>
     <para>
      当使用 UPDATE 查询，MySQL 不会将原值和新值一样的列更新。
	  这样使得 <function>mysql_affected_rows</function> 函数返回值不一定就是查询条件所符合的记录数。
      只有真正被修改的记录数才会被返回。
     </para>
    </note>
    <para>
     <function>mysql_affected_rows</function> 函数不适用于
     SELECT 语句；只适用于能够修改记录的语句中。请使用 <function>mysql_num_rows</function> 函数来获得 
	 SELECT 所返回的记录行数。
    </para>
    <para>
     如果最近一次查询失败的话，函数返回 -1。
     <example>
      <title>Delete 操作</title>
      <programlisting role="php">
<![CDATA[
<?php
    /* 连接数据库 */
    mysql_pconnect("localhost", "mysql_user", "mysql_password") or
        die ("Could not connect" . mysql_error()); 

    /* 这会返回有效的被删除记录数。 */
    mysql_query("DELETE FROM mytable WHERE id < 10");
    printf ("Records deleted: %d\n", mysql_affected_rows());

    /* 没有任何条件（where）的删除语句，返回 0 */
    mysql_query("DELETE FROM mytable");
    printf ("Records deleted: %d\n", mysql_affected_rows());
?>
]]>
      </programlisting>
      <para>
      以上的例子会得出下面的运行结果：
       <screen>
<![CDATA[
Records deleted: 10
Records deleted: 0
]]>
       </screen>
      </para>
     </example>
     <example>
      <title>Update 操作</title>
      <programlisting role="php">
<![CDATA[
<?php
    /* 连接数据库 */
    mysql_pconnect("localhost", "mysql_user", "mysql_password") or
        die ("Could not connect" . mysql_error()); 

    /* Update 记录 */
    mysql_query("UPDATE mytable SET used=1 WHERE id < 10");
    printf ("Updated records: %d\n", mysql_affected_rows());
    mysql_query("COMMIT");
?>
]]>
      </programlisting>
      <para>
       以上的例子会得出下面的运行结果：
       <screen>
<![CDATA[
Updated Records: 10
]]>
       </screen>
      </para>
     </example> 
    </para>
    <para>
     相关函数： <function>mysql_num_rows</function>，
               <function>mysql_info</function>。
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
