<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision: 1.4 $ -->
<!-- $Author: gregory $ -->
<!-- EN-Revision: 1.12 Maintainer: yorgo Status: ready -->
<!-- CREDITS: Gregory -->
 <reference id="ref.mysql">
  <title>MySQL 函数库</title>
  <titleabbrev>MySQL</titleabbrev>

  <partintro>
   <section id="mysql.intro">
    &reftitle.intro;
    <para>
     你可以使用该函数库访问 MySQL 数据库服务器。有关 MySQL 的详细信息可以到 <ulink
     url="&url.mysql;">&url.mysql;</ulink> 查询。
    </para>
    <para>
     MySQL 的文档可以在 <ulink
     url="&url.mysql.docs;">&url.mysql.docs;</ulink> 找到。
    </para>
   </section>

   <section id="mysql.requirements">
    &reftitle.required;
    <para>
     为了能够顺利的使用该函数库，你必须在编译 PHP 的时候添加 MySQL 的支持。
    </para>
   </section>
    
   <section id="mysql.installation">
    &reftitle.install;
    <para>
     当你选择了 <option role="configure">--with-mysql</option>
	 配置选项的时候，你打开了 PHP 访问 MySQL 数据库的功能。 如果你没有在配置选项中指定
	 MySQL 的路径信息，PHP 会使用内建的 MySQL 客户端库函数。在 PHP4 以后的版本中 
	 MySQL 的功能是默认打开的；即使你没有选择上面的配置选项，默认的 
	 MySQL 功能也会被打开。用户如果需要运行一些特定使用 MySQL 的应用（如：以 Apache
	 模块化方式运行的 PHP 3 和 PHP 4，或者 auth-mysql 模块）需要指定 MySQL的路径： <option
     role="configure">--with-mysql=/path/to/mysql</option>。 这会限制 PHP 使用 MySQL在本地安装的客户端库函数来减少未知的冲突。
    </para>
    <warning>
     <para>
      当该扩展模块与 recode 扩展模块共同使用的时候，可能会造成 <literal>PHP</literal>
	  的崩溃和启动时出现问题。请查询 <link linkend="ref.recode">recode</link> 扩展获得更多的信息。
     </para>
    </warning>
   </section>

   &reference.mysql.ini; 
    
     <section id="mysql.resources"> 
     &reftitle.resources; 
      <para> 
	   在 MySQL 模块中使用了两种资源类型。第一种是到数据库连接的链接标识，第二种是 SQL 查询的结果集。
      </para> 
     </section> 


   &reference.mysql.constants;

    
   <section id="mysql.examples">
   &reftitle.examples;
    <para>
     这个简单的例子演示如何连接数据库，执行查询语句，打印返回结果集和断开数据库等一系列基本的 MySQL 操作。
     <example>
      <title>MySQL 扩展范例</title>
      <programlisting role="php">
<![CDATA[
<?php
    /* 连接选择数据库 */
    $link = mysql_connect("mysql_host", "mysql_user", "mysql_password")
        or die("Could not connect");
    print "Connected successfully";
    mysql_select_db("my_database") or die("Could not select database");

    /* 执行 SQL 查询 */
    $query = "SELECT * FROM my_table";
    $result = mysql_query($query) or die("Query failed");

    /* 在 HTML 中打印结果 */
    print "<table>\n";
    while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {
        print "\t<tr>\n";
        foreach ($line as $col_value) {
            print "\t\t<td>$col_value</td>\n";
        }
        print "\t</tr>\n";
    }
    print "</table>\n";

    /* 释放资源 */
    mysql_free_result($result);

    /* 断开连接 */
    mysql_close($link);
?>
]]>
      </programlisting>
     </example>
    </para>
   </section>
  </partintro>

&reference.mysql.functions;

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

