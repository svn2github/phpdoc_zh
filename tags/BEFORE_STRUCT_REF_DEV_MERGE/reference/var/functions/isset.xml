<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision: 1.3 $ -->
<!-- $Author: bjori $ -->
<!-- EN-Revision: 1.9 Maintainer: nio Status: ready -->
<!-- splitted from ./en/functions/var.xml, last change in rev 1.2 -->
  <refentry xml:id="function.isset" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>isset</refname>
    <refpurpose>检测变量是否设置</refpurpose>
   </refnamediv>
   <refsect1>
    <title>描述</title>
     <methodsynopsis>
      <type>bool</type><methodname>isset</methodname>
      <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>var</parameter></methodparam>
      <methodparam choice="opt"><parameter>...</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     如果 <parameter>var</parameter> 存在则返回 &true;，否则返回 &false;。
    </simpara>
    <para>
     如果已经使用 <function>unset</function> 
     释放了一个变量之后，它将不再是 
     <function>isset</function>。若使用 <function>isset</function>
     测试一个被设置成 &null; 的变量，将返回 &false;。同时要注意的是一个 &null; 字节（<literal>"\0"</literal>）并不等同于
     PHP 的  &null; 常数。
    </para>
    <note>
     <title>警告</title>
     <para>
      <function>isset</function> 
      只能用于变量，因为传递任何其它参数都将造成解析错误。若想检测<link linkend="language.constants">常量</link>是否已设置，可使用 
      <function>defined</function> 函数。
     </para>
    </note>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php

$var = '';

// 结果为 TRUE，所以后边的文本将被打印出来。
if (isset($var)) {
    print "This var is set set so I will print.";
}

// 在后边的例子中，我们将使用 var_dump 输出 isset() 的返回值。

$a = "test";
$b = "anothertest";

var_dump( isset($a) );      // TRUE
var_dump( isset ($a, $b) ); // TRUE

unset ($a);

var_dump( isset ($a) );     // FALSE
var_dump( isset ($a, $b) ); // FALSE

$foo = NULL;
var_dump( isset ($foo) );   // FALSE

?>
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     这对于数组中的元素也同样有效：
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php

$a = array ('test' => 1, 'hello' => NULL);

var_dump( isset ($a['test']) );            // TRUE
var_dump( isset ($a['foo']) );             // FALSE
var_dump( isset ($a['hello']) );           // FALSE

// 键 'hello' 的值等于 NULL，所以被认为是未置值的。
// 如果想检测 NULL 键值，可以试试下边的方法。 
var_dump( array_key_exists('hello', $a) ); // TRUE

?>
]]>
      </programlisting>
     </informalexample>
    </para>
    
    &note.language-construct;
    
    <simpara>
     参见 <function>empty</function>、<function>unset</function>、<function>defined</function>、<function>array_key_exists</function> 和错误控制 
     <link linkend="language.operators.errorcontrol">@</link>
     运算符。
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
