<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision: 1.6 $ -->
<!-- $Author: bjori $ -->
<!-- EN-Revision: 1.11 Maintainer: dallas Status: ready -->
  <refentry xml:id="function.mysql-fetch-array" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>mysql_fetch_array</refname>
    <refpurpose>
     从结果集中取得一行作为关联数组，或数字数组，或二者兼有
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>说明</title>
     <methodsynopsis>
      <type>array</type><methodname>mysql_fetch_array</methodname>
      <methodparam><type>resource</type><parameter>result</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>
        result_type
       </parameter></methodparam>
     </methodsynopsis>
    <para>
     返回根据从结果集取得的行生成的数组，如果没有更多行则返回 &false;。
    </para>
    <para>
     <function>mysql_fetch_array</function> 是
     <function>mysql_fetch_row</function>
     的扩展版本。除了将数据以数字索引方式储存在数组中之外，还可以将数据作为关联索引储存，用字段名作为键名。
    </para>
    <para>
     如果结果中的两个或以上的列具有相同字段名，最后一列将优先。要访问同名的其它列，必须用该列的数字索引或给该列起个别名。对有别名的列，不能再用原来的列名访问其内容（本例中的
     <literal>'field'</literal>）。
     <example>
      <title>相同字段名的查询</title>
      <programlisting role="sql">
<![CDATA[
select table1.field as foo, table2.field as bar from table1, table2
]]>
      </programlisting>
     </example>
    </para>
    <para>
     有一点很重要必须指出，用
     <function>mysql_fetch_array</function>
     并<emphasis>不明显</emphasis> 比用
     <function>mysql_fetch_row</function>
     慢，而且还提供了明显更多的值。
    </para>
    <para>
     <function>mysql_fetch_array</function>
     中可选的第二个参数
     <parameter>result_type</parameter>
     是一个常量，可以接受以下值：MYSQL_ASSOC，MYSQL_NUM
     和 MYSQL_BOTH。本特性是 PHP 3.0.7 起新加的。本参数的默认值是 MYSQL_BOTH。
    </para>
    <para>
     如果用了 MYSQL_BOTH，将得到一个同时包含关联和数字索引的数组。用
     MYSQL_ASSOC 只得到关联索引（如同
     <function>mysql_fetch_assoc</function> 那样），用
     MYSQL_NUM 只得到数字索引（如同
     <function>mysql_fetch_row</function> 那样）。
    </para>
    &database.field-case;
    <para>
     <example>
      <title>mysql_fetch_array 使用 MYSQL_NUM</title>
      <programlisting role="php">
<![CDATA[
<?php
    mysql_connect("localhost", "mysql_user", "mysql_password") or
        die("Could not connect: " . mysql_error());
    mysql_select_db("mydb");

    $result = mysql_query("SELECT id, name FROM mytable");

    while ($row = mysql_fetch_array($result, MYSQL_NUM)) {
        printf ("ID: %s  Name: %s", $row[0], $row[1]);
    }

    mysql_free_result($result);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>mysql_fetch_array 使用 MYSQL_ASSOC</title>
      <programlisting role="php">
<![CDATA[
<?php
    mysql_connect("localhost", "mysql_user", "mysql_password") or
        die("Could not connect: " . mysql_error());
    mysql_select_db("mydb");

    $result = mysql_query("SELECT id, name FROM mytable");

    while ($row = mysql_fetch_array($result, MYSQL_ASSOC)) {
        printf ("ID: %s  Name: %s", $row["id"], $row["name"]);
    }

    mysql_free_result($result);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>mysql_fetch_array 使用 MYSQL_BOTH</title>
      <programlisting role="php">
<![CDATA[
<?php
    mysql_connect("localhost", "mysql_user", "mysql_password") or
        die("Could not connect: " . mysql_error());
    mysql_select_db("mydb");

    $result = mysql_query("SELECT id, name FROM mytable");

    while ($row = mysql_fetch_array($result, MYSQL_BOTH)) {
        printf ("ID: %s  Name: %s", $row[0], $row["name"]);
    }

    mysql_free_result($result);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     参见
     <function>mysql_fetch_row</function> 和
     <function>mysql_fetch_assoc</function>。
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
