<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision: 1.2 $ -->
<!-- $Author: dallas $ -->
<!-- EN-Revision: 1.8 Maintainer: dallas Status: ready -->
  <refentry id="function.mysql-fetch-assoc">
   <refnamediv>
    <refname>mysql_fetch_assoc</refname>
    <refpurpose>
     从结果集中取得一行作为关联数组
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>说明</title>
     <methodsynopsis>
      <type>array</type><methodname>mysql_fetch_assoc</methodname>
      <methodparam><type>resource</type><parameter>result</parameter></methodparam>
     </methodsynopsis>
    <para>
     返回根据从结果集取得的行生成的关联数组，如果没有更多行则返回 &false;。
    </para>
    <para>
     <function>mysql_fetch_assoc</function> 和用
     <function>mysql_fetch_array</function> 加上第二个可选参数
     MYSQL_ASSOC 完全相同。它仅仅返回关联数组。这也是
     <function>mysql_fetch_array</function>
     起初始的工作方式。如果在关联索引之外还需要数字索引，用
     <function>mysql_fetch_array</function>。
    </para>
    <para>
     如果结果中的两个或以上的列具有相同字段名，最后一列将优先。要访问同名的其它列，要么用
     <function>mysql_fetch_row</function>
     来取得数字索引或给该列起个别名。参见
     <function>mysql_fetch_array</function> 例子中有关别名说明。
    </para>
    <para>
     有一点很重要必须指出，用
     <function>mysql_fetch_assoc</function>
     并<emphasis>不明显</emphasis> 比用
     <function>mysql_fetch_row</function>
     慢，而且还提供了明显更多的值。
    </para>
    &database.field-case;
    <para>
     <example>
      <title>扩展的 <function>mysql_fetch_assoc</function> 例子</title>
      <programlisting role="php">
<![CDATA[
<?php

    $conn = mysql_connect("localhost", "mysql_user", "mysql_password");

    if (!$conn) {
        echo "Unable to connect to DB: " . mysql_error();
        exit;
    }

    if (!mysql_select_db("mydbname")) {
        echo "Unable to select mydbname: " . mysql_error();
        exit;
    }

    $sql = "SELECT id as userid, fullname, userstatus
            FROM   sometable
            WHERE  userstatus = 1";

    $result = mysql_query($sql);

    if (!$result) {
        echo "Could not successfully run query ($sql) from DB: " . mysql_error();
        exit;
    }

    if (mysql_num_rows($result) == 0) {
        echo "No rows found, nothing to print so am exiting";
        exit;
    }

    // While a row of data exists, put that row in $row as an associative array
    // Note: If you're expecting just one row, no need to use a loop
    // Note: If you put extract($row); inside the following loop, you'll
    //       then create $userid, $fullname, and $userstatus
    while ($row = mysql_fetch_assoc($result)) {
        echo $row["userid"];
        echo $row["fullname"];
        echo $row["userstatus"];
    }

    mysql_free_result($result);

?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     参见
     <function>mysql_fetch_row</function>，<function>mysql_fetch_array</function>，<function>mysql_query</function> 和
     <function>mysql_error</function>。
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
