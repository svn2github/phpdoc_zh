<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision: 1.5 $ -->
<!-- $Author: dallas $ -->
<!-- EN-Revision: 1.18 Maintainer: dallas Status: ready -->
  <refentry id="function.array-merge">
   <refnamediv>
    <refname>array_merge</refname>
    <refpurpose>合并一个或多个数组</refpurpose>
   </refnamediv>
   <refsect1>
    <title>说明</title>
     <methodsynopsis>
      <type>array</type><methodname>array_merge</methodname>
      <methodparam><type>array</type><parameter>array1</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter>array2</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter>...</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>array_merge</function> 将一个或多个数组的单元合并起来，一个数组中的值附加在前一个数组的后面。返回作为结果的数组。
    </para>
    <para>
     如果输入的数组中有相同的字符串键名，则该键名后面的值将覆盖前一个值。然而，如果数组包含数字键名，后面的值将<emphasis role="strong">不会</emphasis>覆盖原来的值，而是附加到后面。
    </para>
    <para>
     如果只给了一个数组并且该数组是数字索引的，则键名会以连续方式重新索引。
    </para>
    <para>
     <example>
      <title><function>array_merge</function> 例子</title>
      <programlisting role="php">
<![CDATA[
<?php
$array1 = array("color" => "red", 2, 4);
$array2 = array("a", "b", "color" => "green", "shape" => "trapezoid", 4);
$result = array_merge($array1, $array2);
print_r($result);
?>
]]>
      </programlisting>
      &example.outputs;
      <screen role="php">
<![CDATA[
Array
(
    [color] => green
    [0] => 2
    [1] => 4
    [2] => a
    [3] => b
    [shape] => trapezoid
    [4] => 4
)
]]>
      </screen>
     </example>
    </para>
    <para>
     <example>
      <title>简单的 <function>array_merge</function> 例子</title>
      <programlisting role="php">
<![CDATA[
<?php
$array1 = array();
$array2 = array(1 => "data");
$result = array_merge($array1, $array2);
?>
]]>
      </programlisting>
      <para>
       别忘了数字键名将会被重新编号！
      </para>
      <screen role="php">
<![CDATA[
Array
(
    [0] => data
)
]]>
      </screen>
      <para>
       如果你想完全保留原有数组并只想新的数组附加到后面，用 <literal>+</literal> 运算符：
      </para>
      <programlisting role="php">
<![CDATA[
<?php
$array1 = array();
$array2 = array(1 => "data");
$result = $array1 + $array2;
?>
]]>
      </programlisting>
      <para>
       数字键名将被保留从而原来的关联保持不变。
      </para>
      <screen role="php">
<![CDATA[
Array
(
    [1] => data
)
]]>
      </screen>
     </example>
    </para>
    <warning>
     <para>
      <function>array_merge</function> 的行为在 PHP 5 中被修改了。和 PHP 4
      不同，<function>array_merge</function> 现在只接受
      <type>array</type> 类型的参数。不过可以用强制转换来合并其它类型。请看下面的例子。
     </para>
     <para>
      <example>
       <title><function>array_merge</function> PHP 5 例子</title>
       <programlisting role="php">
<![CDATA[
<?php
$beginning = 'foo';
$end = array(1 => 'bar');
$result = array_merge((array)$beginning, (array)$end);
print_r($result);
?>
]]>
       </programlisting>
       &example.outputs;
       <screen role="php">
<![CDATA[
Array
(
    [0] => foo
    [1] => bar
)
]]>
       </screen>
      </example>
     </para>
    </warning>
    <para>
     参见 <function>array_merge_recursive</function>，<function>array_combine</function>
     和<link linkend="language.operators.array">数组运算符</link>。
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
