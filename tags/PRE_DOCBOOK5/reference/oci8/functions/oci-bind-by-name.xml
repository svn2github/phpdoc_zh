<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision: 1.2 $ -->
<!-- $Author: yincheng $ -->
<!-- EN-Revision: 1.8 Maintainer: yincheng Status: ready -->
<!-- CREDITS: xuke, Gregory, dallas -->
<refentry id="function.oci-bind-by-name">
 <refnamediv>
  <refname>oci_bind_by_name</refname>
  <refpurpose>绑定一个 PHP 变量到一个 Oracle 位置标志符</refpurpose>
 </refnamediv>
 <refsect1>
  <title>说明</title>
  <methodsynopsis>
   <type>bool</type><methodname>oci_bind_by_name</methodname>
   <methodparam><type>resource</type><parameter>stmt</parameter></methodparam>
   <methodparam><type>string</type><parameter>ph_name</parameter></methodparam>
   <methodparam><type>mixed</type><parameter role="reference">variable</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>maxlength</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>type</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>oci_bind_by_name</function> 将 PHP 变量
   <parameter>variable</parameter> 绑定到  Oracle 的位置标志符
   <parameter>ph_name</parameter>。该变量是否会被用作输入输出是在运行时决定的，并且函数给该变量分配必要的存储空间。<parameter>length</parameter>
   参数确定该绑定的最大长度，如果将 <parameter>length</parameter>
   设为 -1，<function>oci_bind_by_name</function> 会用
   <parameter>variable</parameter> 变量的当前长度确定绑定的最大长度。
  </para>
  <para>
   如果要绑定一个抽象数据类型（LOB/ROWID/BFILE），需要先用
   <function>oci_new_descriptor</function> 函数分配空间。<parameter>length</parameter>
   没有用于抽象数据类型，应被设为 -1。<parameter>type</parameter>
   参数告诉 Oracle 要使用什么样的描述符。可能的值为：
   <itemizedlist>
    <listitem>
     <para>
      <constant>SQLT_FILE</constant> - 对应于 BFILE；
     </para>
    </listitem>
    <listitem>
     <para>
      <constant>SQLT_CFILE</constant> - 对应于 CFILE；
     </para>
    </listitem>
    <listitem>
     <para>
      <constant>SQLT_CLOB</constant> - 对应于 CLOB；
     </para>
    </listitem>
    <listitem>
     <para>
      <constant>SQLT_BLOB</constant> - 对应于 BLOB；
     </para>
    </listitem>
    <listitem>
     <para>
      <constant>SQLT_ROWID</constant> - 对应于 ROWID；
     </para>
    </listitem>
    <listitem>
     <para>
      <constant>SQLT_NTY</constant> - 对应于有名字的数据类型；
     </para>
    </listitem>
      <listitem>
       <para>
        <constant>SQLT_INT</constant> - 对应于 integers；
       </para>
      </listitem>
      <listitem>
       <para>
        <constant>SQLT_CHR</constant> - 对应于 VARCHARs；
       </para>
      </listitem>
      <listitem>
       <para>
        <constant>SQLT_BIN</constant> - 对应于 RAW 列；
       </para>
      </listitem>
      <listitem>
       <para>
        <constant>SQLT_LNG</constant> - 对应于 LONG 列；
       </para>
      </listitem>
      <listitem>
       <para>
        <constant>SQLT_LBI</constant> - 对应于 LONG RAW 列；
       </para>
      </listitem>
      <listitem>
       <para>
        <constant>SQLT_RSET</constant> - 对应于游标，是之前由
      <function>oci_new_cursor</function> 创建的。
       </para>
      </listitem>
   </itemizedlist>
  </para>
  <para>
   <example>
    <title><function>oci_bind_by_name</function> 例子</title>
    <programlisting role="php">
<![CDATA[
<?php
/* oci_bind_by_name example thies at thieso dot net (980221)
  inserts 3 records into emp, and uses the ROWID for updating the
  records just after the insert.
*/

$conn = oci_connect("scott", "tiger");

$stmt = oci_parse($conn, "
                          INSERT INTO
                                     emp (empno, ename)
                                              VALUES
                                     (:empno,:ename)
                            RETURNING
                                     ROWID
                                 INTO
                                     :rid
                                         ");

$data = array(
              1111 => "Larry",
              2222 => "Bill",
              3333 => "Jim"
             );

$rowid = oci_new_descriptor($conn, OCI_D_ROWID);

oci_bind_by_name($stmt, ":empno", $empno, 32);
oci_bind_by_name($stmt, ":ename", $ename, 32);
oci_bind_by_name($stmt, ":rid",   $rowid, -1, OCI_B_ROWID);

$update = oci_parse($conn, "
                            UPDATE
                                  emp
                               SET
                                  sal = :sal
                             WHERE
                                  ROWID = :rid
                             ");
oci_bind_by_name($update, ":rid", $rowid, -1, OCI_B_ROWID);
oci_bind_by_name($update, ":sal", $sal,   32);

$sal = 10000;

foreach ($data as $empno => $ename) {
    oci_execute($stmt);
    oci_execute($update);
}

$rowid->free();

oci_free_statement($update);
oci_free_statement($stmt);

$stmt = oci_parse($conn, "
                          SELECT
                                *
                            FROM
                                emp
                           WHERE
                                empno
                              IN
                                (1111,2222,3333)
                              ");
oci_execute($stmt);

while ($row = oci_fetch_assoc($stmt)) {
    var_dump($row);
}

oci_free_statement($stmt);

/* delete our "junk" from the emp table.... */
$stmt = oci_parse($conn, "
                          DELETE FROM
                                     emp
                                WHERE
                                     empno
                                   IN
                                     (1111,2222,3333)
                                   ");
oci_execute($stmt);
oci_free_statement($stmt);

oci_close($conn);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   记住，本函数删除了行尾的空白字符。见以下例子：
  </para>
  <para>
   <example>
    <title><function>oci_bind_by_name</function> 例子</title>
    <programlisting role="php">
<![CDATA[
<?php
$connection = oci_connect('apelsin','kanistra');
$query = "INSERT INTO test_table VALUES(:id, :text)";

$statement = oci_parse($query);
oci_bind_by_name($statement, ":id", 1);
oci_bind_by_name($statement, ":text", "trailing spaces follow     ");
oci_execute($statement);
/*
 This code will insert into DB string 'trailing spaces follow', without
 trailing spaces
*/
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><function>oci_bind_by_name</function> 例子</title>
    <programlisting role="php">
<![CDATA[
<?php
$connection = oci_connect('apelsin','kanistra');
$query = "INSERT INTO test_table VALUES(:id, 'trailing spaces follow      ')";

$statement = oci_parse($query);
oci_bind_by_name($statement, ":id", 1);
oci_execute($statement);
/*
 And this code will add 'trailing spaces follow      ', preserving
 trailing whitespaces
*/
?>
]]>
    </programlisting>
   </example>
  </para>
  <warning>
   <para>
    不要将
    <link linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link> 或
    <function>addslashes</function> 与 <function>oci_bind_by_name</function>
    同时使用，因为不需要转义，任何自动加上的引号都会被写入数据库中，因为
    <function>oci_bind_by_name</function>
    不能分辨有意加上的引号和魔术引号。
   </para>
  </warning>
  <para>
   &return.success;
  </para>
  <note>
   <para>
    在 PHP 5.0.0 之前的版本必须使用 <function>ocibindbyname</function>
    替代本函数。该函数名仍然可用，为向下兼容作为
    <function>oci_bind_by_name</function> 的别名。不过其已被废弃，不推荐使用。
   </para>
  </note>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
