<?xml version="1.0" encoding="gb2312"?>
<!-- $Revision: 1.2 $ -->
<!-- $Author: gregory $ -->
<!-- EN-Revision: 1.2 Maintainer: dallas Status: ready -->
<section id="filesystem.configuration">
 &reftitle.runtime;
 &extension.runtime;
 <para>
  <table>
   <title>文件系统和流配置选项</title>
   <tgroup cols="3">
    <thead>
     <row>
      <entry>名称</entry>
      <entry>默认值</entry>
      <entry>作用范围</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>allow_url_fopen</entry>
      <entry>"1"</entry>
      <entry>PHP_INI_ALL</entry>
     </row>
     <row>
      <entry>user_agent</entry>
      <entry>NULL</entry>
      <entry>PHP_INI_ALL</entry>
     </row>
     <row>
      <entry>default_socket_timeout</entry>
      <entry>"60"</entry>
      <entry>PHP_INI_ALL</entry>
    </row>
     <row>
      <entry>from</entry>
      <entry>NULL</entry>
      <entry>??</entry>
     </row>
     <row>
      <entry>auto_detect_line_endings</entry>
      <entry>"Off"</entry>
      <entry>PHP_INI_ALL</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </para>
 <para>
  这里是对配置指令的一些简单解说。
  <variablelist>
   <varlistentry id="ini.allow-url-fopen">
    <term>
     <parameter>allow_url_fopen</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      本选项激活了 URL 形式的 fopen 封装协议使得可以访问 URL
      对象例如文件。默认的封装协议提供用 ftp 和 http 协议来访问<link
      linkend="features.remote-files">远程文件</link>，一些扩展库例如
      <link linkend="ref.zlib">zlib</link> 可能会注册更多的封装协议。
     </para>
     <note>
      <para>
       本选项是版本 4.0.3 发行后立即引进的。4.0.3
       以及以前的版本只能在编译时通过配置项 <link
       linkend="install.configure.disable-url-fopen-wrapper"><parameter>
       --disable-url-fopen-wrapper</parameter></link> 来取消此特性。
      </para>
     </note>
     <warning>
      <para> 
       Windows 版在 PHP 4.3
       之前，下列函数不支持远程文件访问：<function>include</function>，<function>include_once</function>, <function>require</function>，<function>require_once</function>
       和 <xref linkend="ref.image"/> 扩展库中的 imagecreatefromXXX 函数。
      </para>
     </warning>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.user-agent">
    <term>
     <parameter>user_agent</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      定义 <literal>PHP</literal> 发送的 User-Agent。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.default-socket-timeout">
    <term>
     <parameter>default_socket_timeout</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      基于 socket 的流的默认超时时间（秒）。
     </para>
     <note>
      <simpara>
       本配置参数是 PHP 4.3 引进的。
      </simpara>
     </note>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.from">
    <term>
     <parameter>from="joe@example.com"</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      定义匿名 ftp 的密码（你的 email 地址）。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.auto-detect-line-endings">
    <term>
     <parameter>auto_detect_line_endings</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      当设为 On 时，PHP 将检查通过
      <function>fgets</function> 和 <function>file</function>
      取得的数据中的行结束符号是符合 Unix，MS-Dos，还是 Macintosh 的习惯。
     </para>
     <para>
      这使得 PHP 可以和 Macintosh 系统交互操作，但是默认值是 Off，因为在检测第一行的
      EOL 习惯时会有很小的性能损失，而且在 Unix
      系统下使用回车符号作为项目分隔符的人们会遭遇向下不兼容的行为。
     </para>
     <note>
      <simpara>
       本配置参数是 PHP 4.3 引进的。
      </simpara>
     </note>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
